<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="454.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="437" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="437" > </text>
<g id="frames">
<g >
<title>_int_free(av=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="714.2" y="261" width="0.9" height="15.0" fill="rgb(205,128,9)" rx="2" ry="2" />
<text  x="717.24" y="271.5" ></text>
</g>
<g >
<title>std::_Construct&lt;PageId, (1 samples, 0.08%)</title><rect x="742.9" y="261" width="0.9" height="15.0" fill="rgb(208,102,11)" rx="2" ry="2" />
<text  x="745.91" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.08%)</title><rect x="668.5" y="309" width="0.9" height="15.0" fill="rgb(238,80,23)" rx="2" ry="2" />
<text  x="671.54" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (10 samples, 0.76%)</title><rect x="1069.9" y="325" width="9.0" height="15.0" fill="rgb(208,51,21)" rx="2" ry="2" />
<text  x="1072.94" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1099.5" y="245" width="0.9" height="15.0" fill="rgb(228,191,30)" rx="2" ry="2" />
<text  x="1102.51" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="742.9" y="213" width="0.9" height="15.0" fill="rgb(244,183,15)" rx="2" ry="2" />
<text  x="745.91" y="223.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::computeForNetwork (95 samples, 7.21%)</title><rect x="1099.5" y="357" width="85.1" height="15.0" fill="rgb(225,164,23)" rx="2" ry="2" />
<text  x="1102.51" y="367.5" >SingleThre..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="1018.0" y="261" width="0.9" height="15.0" fill="rgb(249,200,45)" rx="2" ry="2" />
<text  x="1020.97" y="271.5" ></text>
</g>
<g >
<title>operatornew(unsigned (3 samples, 0.23%)</title><rect x="708.9" y="245" width="2.6" height="15.0" fill="rgb(207,207,23)" rx="2" ry="2" />
<text  x="711.86" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=70) (1 samples, 0.08%)</title><rect x="1093.2" y="197" width="0.9" height="15.0" fill="rgb(220,140,19)" rx="2" ry="2" />
<text  x="1096.23" y="207.5" ></text>
</g>
<g >
<title>PageId::~PageId (3 samples, 0.23%)</title><rect x="716.9" y="245" width="2.7" height="15.0" fill="rgb(243,190,15)" rx="2" ry="2" />
<text  x="719.92" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (4 samples, 0.30%)</title><rect x="735.7" y="309" width="3.6" height="15.0" fill="rgb(232,144,10)" rx="2" ry="2" />
<text  x="738.74" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="10.0" y="261" width="1.8" height="15.0" fill="rgb(232,212,29)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.08%)</title><rect x="669.4" y="309" width="0.9" height="15.0" fill="rgb(242,70,37)" rx="2" ry="2" />
<text  x="672.44" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (9 samples, 0.68%)</title><rect x="1039.5" y="197" width="8.0" height="15.0" fill="rgb(250,125,49)" rx="2" ry="2" />
<text  x="1042.48" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="716.9" y="213" width="2.7" height="15.0" fill="rgb(226,119,33)" rx="2" ry="2" />
<text  x="719.92" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId,std::allocator&lt;PageId&gt; (2 samples, 0.15%)</title><rect x="739.3" y="325" width="1.8" height="15.0" fill="rgb(216,73,22)" rx="2" ry="2" />
<text  x="742.32" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (9 samples, 0.68%)</title><rect x="1116.5" y="309" width="8.1" height="15.0" fill="rgb(218,67,48)" rx="2" ry="2" />
<text  x="1119.53" y="319.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.08%)</title><rect x="666.8" y="293" width="0.8" height="15.0" fill="rgb(252,127,38)" rx="2" ry="2" />
<text  x="669.75" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (8 samples, 0.61%)</title><rect x="763.5" y="325" width="7.2" height="15.0" fill="rgb(208,19,38)" rx="2" ry="2" />
<text  x="766.52" y="335.5" ></text>
</g>
<g >
<title>futex_wait_cancelable (69 samples, 5.24%)</title><rect x="36.0" y="165" width="61.8" height="15.0" fill="rgb(205,210,30)" rx="2" ry="2" />
<text  x="38.98" y="175.5" >futex_..</text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (1 samples, 0.08%)</title><rect x="665.9" y="341" width="0.9" height="15.0" fill="rgb(246,60,34)" rx="2" ry="2" />
<text  x="668.85" y="351.5" ></text>
</g>
<g >
<title>??() (726 samples, 55.13%)</title><rect x="10.0" y="357" width="650.5" height="15.0" fill="rgb(222,149,49)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >??()</text>
</g>
<g >
<title>std::vector&lt;PageId, (2 samples, 0.15%)</title><rect x="725.0" y="261" width="1.8" height="15.0" fill="rgb(240,66,52)" rx="2" ry="2" />
<text  x="727.99" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;std::pair&lt;PageId, (1 samples, 0.08%)</title><rect x="722.3" y="293" width="0.9" height="15.0" fill="rgb(247,138,37)" rx="2" ry="2" />
<text  x="725.30" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.08%)</title><rect x="1181.0" y="277" width="0.9" height="15.0" fill="rgb(240,88,52)" rx="2" ry="2" />
<text  x="1184.04" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1016.2" y="293" width="1.8" height="15.0" fill="rgb(254,139,11)" rx="2" ry="2" />
<text  x="1019.18" y="303.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (1 samples, 0.08%)</title><rect x="1181.0" y="197" width="0.9" height="15.0" fill="rgb(215,204,26)" rx="2" ry="2" />
<text  x="1184.04" y="207.5" ></text>
</g>
<g >
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;)() (43 samples, 3.26%)</title><rect x="670.3" y="309" width="38.6" height="15.0" fill="rgb(206,103,9)" rx="2" ry="2" />
<text  x="673.33" y="319.5" >std..</text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.08%)</title><rect x="779.6" y="309" width="0.9" height="15.0" fill="rgb(223,229,37)" rx="2" ry="2" />
<text  x="782.64" y="319.5" ></text>
</g>
<g >
<title>Page::Page (2 samples, 0.15%)</title><rect x="725.0" y="277" width="1.8" height="15.0" fill="rgb(248,145,54)" rx="2" ry="2" />
<text  x="727.99" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="667.6" y="85" width="0.9" height="15.0" fill="rgb(253,4,46)" rx="2" ry="2" />
<text  x="670.65" y="95.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;MultiThreadedPageRankComputer::ThreadRAII*&gt; (1 samples, 0.08%)</title><rect x="1015.3" y="277" width="0.9" height="15.0" fill="rgb(210,100,7)" rx="2" ry="2" />
<text  x="1018.28" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1180.1" y="213" width="0.9" height="15.0" fill="rgb(216,73,9)" rx="2" ry="2" />
<text  x="1183.14" y="223.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;Page&gt; (3 samples, 0.23%)</title><rect x="1184.6" y="277" width="2.7" height="15.0" fill="rgb(233,167,47)" rx="2" ry="2" />
<text  x="1187.62" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="11.8" y="277" width="0.9" height="15.0" fill="rgb(230,10,29)" rx="2" ry="2" />
<text  x="14.79" y="287.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.08%)</title><rect x="742.9" y="245" width="0.9" height="15.0" fill="rgb(218,179,51)" rx="2" ry="2" />
<text  x="745.91" y="255.5" ></text>
</g>
<g >
<title>PageId::~PageId (3 samples, 0.23%)</title><rect x="711.5" y="261" width="2.7" height="15.0" fill="rgb(252,212,4)" rx="2" ry="2" />
<text  x="714.55" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="743.8" y="277" width="2.7" height="15.0" fill="rgb(246,149,54)" rx="2" ry="2" />
<text  x="746.80" y="287.5" ></text>
</g>
<g >
<title>clone() (726 samples, 55.13%)</title><rect x="10.0" y="389" width="650.5" height="15.0" fill="rgb(218,160,19)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >clone()</text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (14 samples, 1.06%)</title><rect x="139.0" y="149" width="12.6" height="15.0" fill="rgb(212,160,5)" rx="2" ry="2" />
<text  x="142.02" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="725.0" y="149" width="1.8" height="15.0" fill="rgb(252,186,39)" rx="2" ry="2" />
<text  x="727.99" y="159.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (3 samples, 0.23%)</title><rect x="770.7" y="149" width="2.7" height="15.0" fill="rgb(249,53,13)" rx="2" ry="2" />
<text  x="773.68" y="159.5" ></text>
</g>
<g >
<title>all (1,317 samples, 100%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(247,69,29)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.08%)</title><rect x="711.5" y="181" width="0.9" height="15.0" fill="rgb(237,81,1)" rx="2" ry="2" />
<text  x="714.55" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.08%)</title><rect x="1078.9" y="261" width="0.9" height="15.0" fill="rgb(253,29,10)" rx="2" ry="2" />
<text  x="1081.90" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (370 samples, 28.09%)</title><rect x="277.0" y="213" width="331.5" height="15.0" fill="rgb(237,146,31)" rx="2" ry="2" />
<text  x="280.00" y="223.5" >std::_Hashtable&lt;PageId,</text>
</g>
<g >
<title>std::thread::join()() (1 samples, 0.08%)</title><rect x="1015.3" y="229" width="0.9" height="15.0" fill="rgb(232,8,26)" rx="2" ry="2" />
<text  x="1018.28" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (1 samples, 0.08%)</title><rect x="667.6" y="181" width="0.9" height="15.0" fill="rgb(254,189,32)" rx="2" ry="2" />
<text  x="670.65" y="191.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="712.4" y="165" width="0.9" height="15.0" fill="rgb(254,128,46)" rx="2" ry="2" />
<text  x="715.44" y="175.5" ></text>
</g>
<g >
<title>operatornew(unsigned (2 samples, 0.15%)</title><rect x="10.0" y="213" width="1.8" height="15.0" fill="rgb(225,27,23)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.08%)</title><rect x="763.5" y="245" width="0.9" height="15.0" fill="rgb(251,174,48)" rx="2" ry="2" />
<text  x="766.52" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=68) (1 samples, 0.08%)</title><rect x="709.8" y="229" width="0.9" height="15.0" fill="rgb(236,43,29)" rx="2" ry="2" />
<text  x="712.76" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.15%)</title><rect x="777.9" y="293" width="1.7" height="15.0" fill="rgb(234,17,2)" rx="2" ry="2" />
<text  x="780.85" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55b9ed92aa30, (1 samples, 0.08%)</title><rect x="770.7" y="53" width="0.9" height="15.0" fill="rgb(221,171,44)" rx="2" ry="2" />
<text  x="773.68" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7fffbcd4e8c0, (1 samples, 0.08%)</title><rect x="115.7" y="149" width="0.9" height="15.0" fill="rgb(242,104,38)" rx="2" ry="2" />
<text  x="118.73" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (3 samples, 0.23%)</title><rect x="1149.7" y="245" width="2.7" height="15.0" fill="rgb(214,21,52)" rx="2" ry="2" />
<text  x="1152.68" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (2 samples, 0.15%)</title><rect x="1185.5" y="213" width="1.8" height="15.0" fill="rgb(243,175,1)" rx="2" ry="2" />
<text  x="1188.52" y="223.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="735.7" y="165" width="0.9" height="15.0" fill="rgb(228,156,42)" rx="2" ry="2" />
<text  x="738.74" y="175.5" ></text>
</g>
<g >
<title>Page::getId (1 samples, 0.08%)</title><rect x="741.1" y="341" width="0.9" height="15.0" fill="rgb(235,118,29)" rx="2" ry="2" />
<text  x="744.12" y="351.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.08%)</title><rect x="1101.3" y="325" width="0.9" height="15.0" fill="rgb(251,133,27)" rx="2" ry="2" />
<text  x="1104.30" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;Page*&gt; (1 samples, 0.08%)</title><rect x="1095.9" y="261" width="0.9" height="15.0" fill="rgb(232,228,54)" rx="2" ry="2" />
<text  x="1098.92" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (1 samples, 0.08%)</title><rect x="1087.9" y="325" width="0.9" height="15.0" fill="rgb(210,130,49)" rx="2" ry="2" />
<text  x="1090.86" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.08%)</title><rect x="781.4" y="341" width="0.9" height="15.0" fill="rgb(227,89,46)" rx="2" ry="2" />
<text  x="784.44" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.08%)</title><rect x="1176.6" y="309" width="0.9" height="15.0" fill="rgb(244,18,43)" rx="2" ry="2" />
<text  x="1179.56" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1114.7" y="293" width="1.8" height="15.0" fill="rgb(236,36,7)" rx="2" ry="2" />
<text  x="1117.74" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Page&gt;::construct&lt;Page, (2 samples, 0.15%)</title><rect x="725.0" y="293" width="1.8" height="15.0" fill="rgb(244,48,30)" rx="2" ry="2" />
<text  x="727.99" y="303.5" ></text>
</g>
<g >
<title>operatornew(unsigned (2 samples, 0.15%)</title><rect x="744.7" y="245" width="1.8" height="15.0" fill="rgb(207,1,1)" rx="2" ry="2" />
<text  x="747.70" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;PageId, (3 samples, 0.23%)</title><rect x="716.9" y="293" width="2.7" height="15.0" fill="rgb(232,6,40)" rx="2" ry="2" />
<text  x="719.92" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (1 samples, 0.08%)</title><rect x="742.0" y="309" width="0.9" height="15.0" fill="rgb(250,79,39)" rx="2" ry="2" />
<text  x="745.01" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;PageId, (2 samples, 0.15%)</title><rect x="719.6" y="293" width="1.8" height="15.0" fill="rgb(217,195,37)" rx="2" ry="2" />
<text  x="722.61" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1101.3" y="293" width="0.9" height="15.0" fill="rgb(218,112,48)" rx="2" ry="2" />
<text  x="1104.30" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (8 samples, 0.61%)</title><rect x="763.5" y="309" width="7.2" height="15.0" fill="rgb(223,208,49)" rx="2" ry="2" />
<text  x="766.52" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.08%)</title><rect x="769.8" y="293" width="0.9" height="15.0" fill="rgb(209,55,5)" rx="2" ry="2" />
<text  x="772.79" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="733.1" y="277" width="0.8" height="15.0" fill="rgb(213,58,21)" rx="2" ry="2" />
<text  x="736.05" y="287.5" ></text>
</g>
<g >
<title>NetworkGenerator::generatePageFromNumWithGeneratedId (10 samples, 0.76%)</title><rect x="726.8" y="341" width="8.9" height="15.0" fill="rgb(228,153,33)" rx="2" ry="2" />
<text  x="729.78" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55b9f2974b70, (1 samples, 0.08%)</title><rect x="772.5" y="53" width="0.9" height="15.0" fill="rgb(212,57,37)" rx="2" ry="2" />
<text  x="775.48" y="63.5" ></text>
</g>
<g >
<title>std::atomic_compare_exchange_weak&lt;double&gt; (12 samples, 0.91%)</title><rect x="100.5" y="229" width="10.7" height="15.0" fill="rgb(223,183,27)" rx="2" ry="2" />
<text  x="103.49" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (12 samples, 0.91%)</title><rect x="1138.9" y="197" width="10.8" height="15.0" fill="rgb(211,85,7)" rx="2" ry="2" />
<text  x="1141.93" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (1 samples, 0.08%)</title><rect x="1018.0" y="229" width="0.9" height="15.0" fill="rgb(207,221,24)" rx="2" ry="2" />
<text  x="1020.97" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (6 samples, 0.46%)</title><rect x="1155.1" y="293" width="5.3" height="15.0" fill="rgb(216,187,33)" rx="2" ry="2" />
<text  x="1158.06" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.08%)</title><rect x="666.8" y="245" width="0.8" height="15.0" fill="rgb(205,84,30)" rx="2" ry="2" />
<text  x="669.75" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (9 samples, 0.68%)</title><rect x="1039.5" y="181" width="8.0" height="15.0" fill="rgb(235,56,12)" rx="2" ry="2" />
<text  x="1042.48" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (6 samples, 0.46%)</title><rect x="1082.5" y="309" width="5.4" height="15.0" fill="rgb(229,109,23)" rx="2" ry="2" />
<text  x="1085.48" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="743.8" y="309" width="2.7" height="15.0" fill="rgb(208,190,42)" rx="2" ry="2" />
<text  x="746.80" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (4 samples, 0.30%)</title><rect x="1092.3" y="325" width="3.6" height="15.0" fill="rgb(216,188,15)" rx="2" ry="2" />
<text  x="1095.34" y="335.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal(s=s@entry=0x7fffbcd4e610, (1 samples, 0.08%)</title><rect x="1097.7" y="277" width="0.9" height="15.0" fill="rgb(222,124,20)" rx="2" ry="2" />
<text  x="1100.71" y="287.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="716.9" y="149" width="0.9" height="15.0" fill="rgb(210,118,54)" rx="2" ry="2" />
<text  x="719.92" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId,std::pair&lt;PageId (1 samples, 0.08%)</title><rect x="1176.6" y="325" width="0.9" height="15.0" fill="rgb(252,92,11)" rx="2" ry="2" />
<text  x="1179.56" y="335.5" ></text>
</g>
<g >
<title>Page::generateId (3 samples, 0.23%)</title><rect x="10.0" y="325" width="2.7" height="15.0" fill="rgb(227,147,28)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (2 samples, 0.15%)</title><rect x="725.0" y="213" width="1.8" height="15.0" fill="rgb(235,23,25)" rx="2" ry="2" />
<text  x="727.99" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7fffbcd4e8c0, (28 samples, 2.13%)</title><rect x="503.7" y="181" width="25.1" height="15.0" fill="rgb(205,137,4)" rx="2" ry="2" />
<text  x="506.68" y="191.5" >s..</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (2 samples, 0.15%)</title><rect x="1082.5" y="245" width="1.8" height="15.0" fill="rgb(210,134,17)" rx="2" ry="2" />
<text  x="1085.48" y="255.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="1101.3" y="213" width="0.9" height="15.0" fill="rgb(239,92,48)" rx="2" ry="2" />
<text  x="1104.30" y="223.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (4 samples, 0.30%)</title><rect x="1173.0" y="261" width="3.6" height="15.0" fill="rgb(217,35,43)" rx="2" ry="2" />
<text  x="1175.98" y="271.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.08%)</title><rect x="717.8" y="149" width="0.9" height="15.0" fill="rgb(233,206,5)" rx="2" ry="2" />
<text  x="720.82" y="159.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (3 samples, 0.23%)</title><rect x="711.5" y="325" width="2.7" height="15.0" fill="rgb(209,37,18)" rx="2" ry="2" />
<text  x="714.55" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1181.9" y="213" width="0.9" height="15.0" fill="rgb(243,161,47)" rx="2" ry="2" />
<text  x="1184.94" y="223.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void (723 samples, 54.90%)</title><rect x="12.7" y="341" width="647.8" height="15.0" fill="rgb(235,148,33)" rx="2" ry="2" />
<text  x="15.69" y="351.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void</text>
</g>
<g >
<title>std::pair&lt;PageId (9 samples, 0.68%)</title><rect x="1116.5" y="341" width="8.1" height="15.0" fill="rgb(222,201,54)" rx="2" ry="2" />
<text  x="1119.53" y="351.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (27 samples, 2.05%)</title><rect x="359.4" y="101" width="24.2" height="15.0" fill="rgb(205,182,16)" rx="2" ry="2" />
<text  x="362.43" y="111.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1121.9" y="229" width="1.8" height="15.0" fill="rgb(205,76,6)" rx="2" ry="2" />
<text  x="1124.91" y="239.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="1132.7" y="117" width="0.9" height="15.0" fill="rgb(227,168,21)" rx="2" ry="2" />
<text  x="1135.66" y="127.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;PageId*&gt;,PageId*&gt; (1 samples, 0.08%)</title><rect x="740.2" y="245" width="0.9" height="15.0" fill="rgb(227,179,20)" rx="2" ry="2" />
<text  x="743.22" y="255.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;PageId*&gt;, (1 samples, 0.08%)</title><rect x="740.2" y="261" width="0.9" height="15.0" fill="rgb(230,56,44)" rx="2" ry="2" />
<text  x="743.22" y="271.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="773.4" y="117" width="0.9" height="15.0" fill="rgb(247,181,7)" rx="2" ry="2" />
<text  x="776.37" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (4 samples, 0.30%)</title><rect x="735.7" y="213" width="3.6" height="15.0" fill="rgb(213,93,9)" rx="2" ry="2" />
<text  x="738.74" y="223.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::pageRankWorkFunc(index=&lt;optimized (26 samples, 1.97%)</title><rect x="12.7" y="261" width="23.3" height="15.0" fill="rgb(251,85,26)" rx="2" ry="2" />
<text  x="15.69" y="271.5" >M..</text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (1 samples, 0.08%)</title><rect x="668.5" y="245" width="0.9" height="15.0" fill="rgb(214,90,52)" rx="2" ry="2" />
<text  x="671.54" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="741.1" y="309" width="0.9" height="15.0" fill="rgb(209,193,43)" rx="2" ry="2" />
<text  x="744.12" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55b9e7666ba0, (1 samples, 0.08%)</title><rect x="1184.6" y="85" width="0.9" height="15.0" fill="rgb(212,135,41)" rx="2" ry="2" />
<text  x="1187.62" y="95.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;Page&gt; (1 samples, 0.08%)</title><rect x="1095.9" y="245" width="0.9" height="15.0" fill="rgb(250,5,4)" rx="2" ry="2" />
<text  x="1098.92" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (17 samples, 1.29%)</title><rect x="746.5" y="309" width="15.2" height="15.0" fill="rgb(225,27,16)" rx="2" ry="2" />
<text  x="749.49" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;PageId*&gt;, (1 samples, 0.08%)</title><rect x="740.2" y="277" width="0.9" height="15.0" fill="rgb(213,18,18)" rx="2" ry="2" />
<text  x="743.22" y="287.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,std::vector&lt;PageId, (1 samples, 0.08%)</title><rect x="667.6" y="341" width="0.9" height="15.0" fill="rgb(214,150,39)" rx="2" ry="2" />
<text  x="670.65" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageIdAndRank*&gt; (1 samples, 0.08%)</title><rect x="1181.9" y="309" width="0.9" height="15.0" fill="rgb(210,74,8)" rx="2" ry="2" />
<text  x="1184.94" y="319.5" ></text>
</g>
<g >
<title>PageId::PageId (4 samples, 0.30%)</title><rect x="735.7" y="277" width="3.6" height="15.0" fill="rgb(233,180,52)" rx="2" ry="2" />
<text  x="738.74" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="727.7" y="293" width="0.9" height="15.0" fill="rgb(205,167,11)" rx="2" ry="2" />
<text  x="730.68" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=68) (1 samples, 0.08%)</title><rect x="661.4" y="149" width="0.9" height="15.0" fill="rgb(248,146,20)" rx="2" ry="2" />
<text  x="664.37" y="159.5" ></text>
</g>
<g >
<title>SimpleIdGenerator::generateId (3 samples, 0.23%)</title><rect x="10.0" y="309" width="2.7" height="15.0" fill="rgb(219,189,26)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (4 samples, 0.30%)</title><rect x="735.7" y="325" width="3.6" height="15.0" fill="rgb(210,100,33)" rx="2" ry="2" />
<text  x="738.74" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (4 samples, 0.30%)</title><rect x="770.7" y="245" width="3.6" height="15.0" fill="rgb(215,135,53)" rx="2" ry="2" />
<text  x="773.68" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (1 samples, 0.08%)</title><rect x="1184.6" y="197" width="0.9" height="15.0" fill="rgb(222,11,36)" rx="2" ry="2" />
<text  x="1187.62" y="207.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (33 samples, 2.51%)</title><rect x="354.1" y="117" width="29.5" height="15.0" fill="rgb(239,7,35)" rx="2" ry="2" />
<text  x="357.05" y="127.5" >st..</text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (6 samples, 0.46%)</title><rect x="1155.1" y="261" width="5.3" height="15.0" fill="rgb(224,58,25)" rx="2" ry="2" />
<text  x="1158.06" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="708.9" y="277" width="2.6" height="15.0" fill="rgb(214,129,18)" rx="2" ry="2" />
<text  x="711.86" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId, (3 samples, 0.23%)</title><rect x="716.9" y="261" width="2.7" height="15.0" fill="rgb(254,159,51)" rx="2" ry="2" />
<text  x="719.92" y="271.5" ></text>
</g>
<g >
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;)() (260 samples, 19.74%)</title><rect x="782.3" y="309" width="233.0" height="15.0" fill="rgb(243,28,45)" rx="2" ry="2" />
<text  x="785.33" y="319.5" >std::condition_variable::wait(..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=69, (1 samples, 0.08%)</title><rect x="1143.4" y="85" width="0.9" height="15.0" fill="rgb(241,163,6)" rx="2" ry="2" />
<text  x="1146.41" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (17 samples, 1.29%)</title><rect x="746.5" y="293" width="15.2" height="15.0" fill="rgb(250,176,41)" rx="2" ry="2" />
<text  x="749.49" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (9 samples, 0.68%)</title><rect x="1039.5" y="261" width="8.0" height="15.0" fill="rgb(240,131,24)" rx="2" ry="2" />
<text  x="1042.48" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="661.4" y="197" width="0.9" height="15.0" fill="rgb(241,13,53)" rx="2" ry="2" />
<text  x="664.37" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.08%)</title><rect x="714.2" y="309" width="0.9" height="15.0" fill="rgb(210,5,25)" rx="2" ry="2" />
<text  x="717.24" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="721.4" y="197" width="0.9" height="15.0" fill="rgb(247,16,28)" rx="2" ry="2" />
<text  x="724.40" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.08%)</title><rect x="1179.2" y="293" width="0.9" height="15.0" fill="rgb(218,204,40)" rx="2" ry="2" />
<text  x="1182.25" y="303.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::computeForNetwork (350 samples, 26.58%)</title><rect x="782.3" y="357" width="313.6" height="15.0" fill="rgb(232,218,0)" rx="2" ry="2" />
<text  x="785.33" y="367.5" >MultiThreadedPageRankComputer::computeForN..</text>
</g>
<g >
<title>__GI___libc_malloc(bytes=69) (1 samples, 0.08%)</title><rect x="738.4" y="181" width="0.9" height="15.0" fill="rgb(235,103,7)" rx="2" ry="2" />
<text  x="741.43" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (24 samples, 1.82%)</title><rect x="1155.1" y="325" width="21.5" height="15.0" fill="rgb(208,93,6)" rx="2" ry="2" />
<text  x="1158.06" y="335.5" >s..</text>
</g>
<g >
<title>__GI___libc_free(mem=0x55b9dc5dfd00) (1 samples, 0.08%)</title><rect x="1181.9" y="149" width="0.9" height="15.0" fill="rgb(232,199,0)" rx="2" ry="2" />
<text  x="1184.94" y="159.5" ></text>
</g>
<g >
<title>Page::~Page (1 samples, 0.08%)</title><rect x="742.0" y="341" width="0.9" height="15.0" fill="rgb(230,207,14)" rx="2" ry="2" />
<text  x="745.01" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="1143.4" y="149" width="2.7" height="15.0" fill="rgb(209,165,13)" rx="2" ry="2" />
<text  x="1146.41" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (4 samples, 0.30%)</title><rect x="1092.3" y="309" width="3.6" height="15.0" fill="rgb(208,107,4)" rx="2" ry="2" />
<text  x="1095.34" y="319.5" ></text>
</g>
<g >
<title>std::_Construct&lt;PageId, (1 samples, 0.08%)</title><rect x="669.4" y="229" width="0.9" height="15.0" fill="rgb(248,66,1)" rx="2" ry="2" />
<text  x="672.44" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;PageId, (1 samples, 0.08%)</title><rect x="721.4" y="245" width="0.9" height="15.0" fill="rgb(246,187,12)" rx="2" ry="2" />
<text  x="724.40" y="255.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (4 samples, 0.30%)</title><rect x="349.6" y="117" width="3.6" height="15.0" fill="rgb(229,15,54)" rx="2" ry="2" />
<text  x="352.57" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;MultiThreadedPageRankComputer::ThreadRAII, (1 samples, 0.08%)</title><rect x="1015.3" y="325" width="0.9" height="15.0" fill="rgb(254,118,24)" rx="2" ry="2" />
<text  x="1018.28" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="716.9" y="197" width="2.7" height="15.0" fill="rgb(224,80,25)" rx="2" ry="2" />
<text  x="719.92" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.30%)</title><rect x="662.3" y="277" width="3.6" height="15.0" fill="rgb(254,221,15)" rx="2" ry="2" />
<text  x="665.27" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="761.7" y="325" width="1.8" height="15.0" fill="rgb(222,112,2)" rx="2" ry="2" />
<text  x="764.72" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::deallocate(this=&lt;synthetic (1 samples, 0.08%)</title><rect x="1179.2" y="245" width="0.9" height="15.0" fill="rgb(254,38,2)" rx="2" ry="2" />
<text  x="1182.25" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageIdAndRank*, (1 samples, 0.08%)</title><rect x="1181.9" y="325" width="0.9" height="15.0" fill="rgb(234,187,13)" rx="2" ry="2" />
<text  x="1184.94" y="335.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (55 samples, 4.18%)</title><rect x="608.5" y="181" width="49.3" height="15.0" fill="rgb(230,71,19)" rx="2" ry="2" />
<text  x="611.51" y="191.5" >std:..</text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="739.3" y="213" width="0.9" height="15.0" fill="rgb(207,96,31)" rx="2" ry="2" />
<text  x="742.32" y="223.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.08%)</title><rect x="710.7" y="213" width="0.8" height="15.0" fill="rgb(213,119,1)" rx="2" ry="2" />
<text  x="713.65" y="223.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="781.4" y="229" width="0.9" height="15.0" fill="rgb(246,188,2)" rx="2" ry="2" />
<text  x="784.44" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=&lt;optimized (5 samples, 0.38%)</title><rect x="1059.2" y="229" width="4.5" height="15.0" fill="rgb(229,222,46)" rx="2" ry="2" />
<text  x="1062.19" y="239.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (4 samples, 0.30%)</title><rect x="1173.0" y="293" width="3.6" height="15.0" fill="rgb(252,53,51)" rx="2" ry="2" />
<text  x="1175.98" y="303.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fbb0beb0c40 (2 samples, 0.15%)</title><rect x="1090.5" y="245" width="1.8" height="15.0" fill="rgb(246,61,49)" rx="2" ry="2" />
<text  x="1093.55" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (4 samples, 0.30%)</title><rect x="770.7" y="325" width="3.6" height="15.0" fill="rgb(250,205,38)" rx="2" ry="2" />
<text  x="773.68" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (4 samples, 0.30%)</title><rect x="1088.8" y="293" width="3.5" height="15.0" fill="rgb(238,40,11)" rx="2" ry="2" />
<text  x="1091.75" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1100.4" y="277" width="0.9" height="15.0" fill="rgb(212,221,45)" rx="2" ry="2" />
<text  x="1103.40" y="287.5" ></text>
</g>
<g >
<title>Page::getId (3 samples, 0.23%)</title><rect x="743.8" y="341" width="2.7" height="15.0" fill="rgb(210,60,40)" rx="2" ry="2" />
<text  x="746.80" y="351.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (184 samples, 13.97%)</title><rect x="112.1" y="245" width="164.9" height="15.0" fill="rgb(251,113,27)" rx="2" ry="2" />
<text  x="115.14" y="255.5" >std::unordered_map&lt;Pa..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1018.0" y="277" width="0.9" height="15.0" fill="rgb(233,108,8)" rx="2" ry="2" />
<text  x="1020.97" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;Page*&gt; (3 samples, 0.23%)</title><rect x="1184.6" y="309" width="2.7" height="15.0" fill="rgb(207,67,21)" rx="2" ry="2" />
<text  x="1187.62" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="11.8" y="261" width="0.9" height="15.0" fill="rgb(251,205,11)" rx="2" ry="2" />
<text  x="14.79" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=&lt;optimized (1 samples, 0.08%)</title><rect x="742.0" y="149" width="0.9" height="15.0" fill="rgb(233,34,44)" rx="2" ry="2" />
<text  x="745.01" y="159.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,double, (25 samples, 1.90%)</title><rect x="1155.1" y="341" width="22.4" height="15.0" fill="rgb(243,199,39)" rx="2" ry="2" />
<text  x="1158.06" y="351.5" >s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.08%)</title><rect x="667.6" y="69" width="0.9" height="15.0" fill="rgb(218,91,26)" rx="2" ry="2" />
<text  x="670.65" y="79.5" ></text>
</g>
<g >
<title>PageId::PageId (3 samples, 0.23%)</title><rect x="708.9" y="325" width="2.6" height="15.0" fill="rgb(225,67,27)" rx="2" ry="2" />
<text  x="711.86" y="335.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,std::vector&lt;PageId, (5 samples, 0.38%)</title><rect x="770.7" y="341" width="4.5" height="15.0" fill="rgb(231,157,17)" rx="2" ry="2" />
<text  x="773.68" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="660.5" y="261" width="0.9" height="15.0" fill="rgb(212,6,4)" rx="2" ry="2" />
<text  x="663.48" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.08%)</title><rect x="1181.0" y="309" width="0.9" height="15.0" fill="rgb(220,133,26)" rx="2" ry="2" />
<text  x="1184.04" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1087.9" y="229" width="0.9" height="15.0" fill="rgb(226,174,28)" rx="2" ry="2" />
<text  x="1090.86" y="239.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,unsigned (10 samples, 0.76%)</title><rect x="1078.9" y="341" width="9.0" height="15.0" fill="rgb(245,202,25)" rx="2" ry="2" />
<text  x="1081.90" y="351.5" ></text>
</g>
<g >
<title>Page::addLink (1 samples, 0.08%)</title><rect x="660.5" y="341" width="0.9" height="15.0" fill="rgb(218,89,22)" rx="2" ry="2" />
<text  x="663.48" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (11 samples, 0.84%)</title><rect x="141.7" y="85" width="9.9" height="15.0" fill="rgb(254,89,4)" rx="2" ry="2" />
<text  x="144.71" y="95.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (20 samples, 1.52%)</title><rect x="1155.1" y="309" width="17.9" height="15.0" fill="rgb(221,43,22)" rx="2" ry="2" />
<text  x="1158.06" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="719.6" y="245" width="1.8" height="15.0" fill="rgb(228,112,15)" rx="2" ry="2" />
<text  x="722.61" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank, (3 samples, 0.23%)</title><rect x="1187.3" y="357" width="2.7" height="15.0" fill="rgb(218,171,32)" rx="2" ry="2" />
<text  x="1190.31" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="661.4" y="181" width="0.9" height="15.0" fill="rgb(208,112,47)" rx="2" ry="2" />
<text  x="664.37" y="191.5" ></text>
</g>
<g >
<title>Page::getId (1 samples, 0.08%)</title><rect x="1101.3" y="341" width="0.9" height="15.0" fill="rgb(207,34,27)" rx="2" ry="2" />
<text  x="1104.30" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="731.3" y="261" width="1.8" height="15.0" fill="rgb(238,157,9)" rx="2" ry="2" />
<text  x="734.26" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.08%)</title><rect x="1069.9" y="277" width="0.9" height="15.0" fill="rgb(251,149,5)" rx="2" ry="2" />
<text  x="1072.94" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; (1 samples, 0.08%)</title><rect x="1179.2" y="261" width="0.9" height="15.0" fill="rgb(219,6,4)" rx="2" ry="2" />
<text  x="1182.25" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="761.7" y="309" width="1.8" height="15.0" fill="rgb(248,193,17)" rx="2" ry="2" />
<text  x="764.72" y="319.5" ></text>
</g>
<g >
<title>operatornew(unsigned (3 samples, 0.23%)</title><rect x="1149.7" y="229" width="2.7" height="15.0" fill="rgb(210,18,51)" rx="2" ry="2" />
<text  x="1152.68" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1099.5" y="261" width="0.9" height="15.0" fill="rgb(206,160,38)" rx="2" ry="2" />
<text  x="1102.51" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (18 samples, 1.37%)</title><rect x="277.0" y="181" width="16.1" height="15.0" fill="rgb(249,228,50)" rx="2" ry="2" />
<text  x="280.00" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="742.0" y="197" width="0.9" height="15.0" fill="rgb(235,221,30)" rx="2" ry="2" />
<text  x="745.01" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (3 samples, 0.23%)</title><rect x="711.5" y="293" width="2.7" height="15.0" fill="rgb(235,23,54)" rx="2" ry="2" />
<text  x="714.55" y="303.5" ></text>
</g>
<g >
<title>Network::~Network (3 samples, 0.23%)</title><rect x="1184.6" y="357" width="2.7" height="15.0" fill="rgb(248,6,15)" rx="2" ry="2" />
<text  x="1187.62" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.30%)</title><rect x="1130.9" y="181" width="3.5" height="15.0" fill="rgb(216,42,43)" rx="2" ry="2" />
<text  x="1133.87" y="191.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,double, (1 samples, 0.08%)</title><rect x="666.8" y="341" width="0.8" height="15.0" fill="rgb(245,17,51)" rx="2" ry="2" />
<text  x="669.75" y="351.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (34 samples, 2.58%)</title><rect x="1124.6" y="341" width="30.5" height="15.0" fill="rgb(250,50,42)" rx="2" ry="2" />
<text  x="1127.59" y="351.5" >st..</text>
</g>
<g >
<title>std::_Destroy&lt;PageIdAndRank&gt; (1 samples, 0.08%)</title><rect x="1181.9" y="277" width="0.9" height="15.0" fill="rgb(232,71,5)" rx="2" ry="2" />
<text  x="1184.94" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;Page, (3 samples, 0.23%)</title><rect x="1184.6" y="341" width="2.7" height="15.0" fill="rgb(226,21,54)" rx="2" ry="2" />
<text  x="1187.62" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.53%)</title><rect x="1107.6" y="245" width="6.2" height="15.0" fill="rgb(226,114,21)" rx="2" ry="2" />
<text  x="1110.57" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;PageId, (1 samples, 0.08%)</title><rect x="721.4" y="277" width="0.9" height="15.0" fill="rgb(234,159,50)" rx="2" ry="2" />
<text  x="724.40" y="287.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (5 samples, 0.38%)</title><rect x="1156.0" y="213" width="4.4" height="15.0" fill="rgb(214,229,7)" rx="2" ry="2" />
<text  x="1158.95" y="223.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.08%)</title><rect x="1180.1" y="229" width="0.9" height="15.0" fill="rgb(239,31,37)" rx="2" ry="2" />
<text  x="1183.14" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="722.3" y="181" width="0.9" height="15.0" fill="rgb(213,90,14)" rx="2" ry="2" />
<text  x="725.30" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;PageId*&gt;, (1 samples, 0.08%)</title><rect x="669.4" y="277" width="0.9" height="15.0" fill="rgb(232,216,36)" rx="2" ry="2" />
<text  x="672.44" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7fffbcd4e380, (1 samples, 0.08%)</title><rect x="777.9" y="277" width="0.8" height="15.0" fill="rgb(233,113,30)" rx="2" ry="2" />
<text  x="780.85" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (6 samples, 0.46%)</title><rect x="1082.5" y="293" width="5.4" height="15.0" fill="rgb(240,76,8)" rx="2" ry="2" />
<text  x="1085.48" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55b9d9197870, (1 samples, 0.08%)</title><rect x="742.0" y="165" width="0.9" height="15.0" fill="rgb(254,69,40)" rx="2" ry="2" />
<text  x="745.01" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=&lt;optimized (1 samples, 0.08%)</title><rect x="1085.2" y="245" width="0.9" height="15.0" fill="rgb(211,77,24)" rx="2" ry="2" />
<text  x="1088.17" y="255.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.08%)</title><rect x="739.3" y="245" width="0.9" height="15.0" fill="rgb(209,174,19)" rx="2" ry="2" />
<text  x="742.32" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;Page*, (3 samples, 0.23%)</title><rect x="1184.6" y="325" width="2.7" height="15.0" fill="rgb(221,196,3)" rx="2" ry="2" />
<text  x="1187.62" y="335.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (1 samples, 0.08%)</title><rect x="1181.0" y="229" width="0.9" height="15.0" fill="rgb(209,49,48)" rx="2" ry="2" />
<text  x="1184.04" y="239.5" ></text>
</g>
<g >
<title>std::_Construct&lt;PageId, (2 samples, 0.15%)</title><rect x="725.0" y="197" width="1.8" height="15.0" fill="rgb(216,19,33)" rx="2" ry="2" />
<text  x="727.99" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=65) (1 samples, 0.08%)</title><rect x="1100.4" y="213" width="0.9" height="15.0" fill="rgb(251,104,27)" rx="2" ry="2" />
<text  x="1103.40" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (4 samples, 0.30%)</title><rect x="1088.8" y="325" width="3.5" height="15.0" fill="rgb(232,66,35)" rx="2" ry="2" />
<text  x="1091.75" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (19 samples, 1.44%)</title><rect x="260.0" y="149" width="17.0" height="15.0" fill="rgb(237,159,16)" rx="2" ry="2" />
<text  x="262.98" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (4 samples, 0.30%)</title><rect x="1051.1" y="277" width="3.6" height="15.0" fill="rgb(244,20,3)" rx="2" ry="2" />
<text  x="1054.12" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (3 samples, 0.23%)</title><rect x="764.4" y="277" width="2.7" height="15.0" fill="rgb(243,171,26)" rx="2" ry="2" />
<text  x="767.41" y="287.5" ></text>
</g>
<g >
<title>futex_wait_cancelable (260 samples, 19.74%)</title><rect x="782.3" y="261" width="233.0" height="15.0" fill="rgb(236,30,40)" rx="2" ry="2" />
<text  x="785.33" y="271.5" >futex_wait_cancelable</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (3 samples, 0.23%)</title><rect x="770.7" y="69" width="2.7" height="15.0" fill="rgb(224,142,1)" rx="2" ry="2" />
<text  x="773.68" y="79.5" ></text>
</g>
<g >
<title>SimpleNetworkGenerator::generateNetworkOfSize (20 samples, 1.52%)</title><rect x="725.0" y="357" width="17.9" height="15.0" fill="rgb(252,183,44)" rx="2" ry="2" />
<text  x="727.99" y="367.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (19 samples, 1.44%)</title><rect x="260.0" y="197" width="17.0" height="15.0" fill="rgb(214,115,43)" rx="2" ry="2" />
<text  x="262.98" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;PageId, (2 samples, 0.15%)</title><rect x="719.6" y="325" width="1.8" height="15.0" fill="rgb(219,203,26)" rx="2" ry="2" />
<text  x="722.61" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="1121.9" y="181" width="1.8" height="15.0" fill="rgb(237,43,25)" rx="2" ry="2" />
<text  x="1124.91" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (4 samples, 0.30%)</title><rect x="770.7" y="213" width="3.6" height="15.0" fill="rgb(234,56,10)" rx="2" ry="2" />
<text  x="773.68" y="223.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (19 samples, 1.44%)</title><rect x="260.0" y="181" width="17.0" height="15.0" fill="rgb(244,130,2)" rx="2" ry="2" />
<text  x="262.98" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.08%)</title><rect x="775.2" y="261" width="0.9" height="15.0" fill="rgb(218,2,9)" rx="2" ry="2" />
<text  x="778.16" y="271.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.08%)</title><rect x="1124.6" y="213" width="0.9" height="15.0" fill="rgb(254,78,29)" rx="2" ry="2" />
<text  x="1127.59" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.08%)</title><rect x="662.3" y="197" width="0.9" height="15.0" fill="rgb(236,180,3)" rx="2" ry="2" />
<text  x="665.27" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=69) (2 samples, 0.15%)</title><rect x="725.0" y="85" width="1.8" height="15.0" fill="rgb(228,27,15)" rx="2" ry="2" />
<text  x="727.99" y="95.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x55b9eceb0010) (1 samples, 0.08%)</title><rect x="1045.7" y="117" width="0.9" height="15.0" fill="rgb(206,15,12)" rx="2" ry="2" />
<text  x="1048.75" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="715.1" y="213" width="1.8" height="15.0" fill="rgb(221,182,45)" rx="2" ry="2" />
<text  x="718.13" y="223.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=68, (7 samples, 0.53%)</title><rect x="755.5" y="213" width="6.2" height="15.0" fill="rgb(230,150,10)" rx="2" ry="2" />
<text  x="758.45" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.08%)</title><rect x="1160.4" y="293" width="0.9" height="15.0" fill="rgb(252,134,18)" rx="2" ry="2" />
<text  x="1163.43" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1181.9" y="229" width="0.9" height="15.0" fill="rgb(240,49,27)" rx="2" ry="2" />
<text  x="1184.94" y="239.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fbb0beb0c40 (18 samples, 1.37%)</title><rect x="1023.3" y="213" width="16.2" height="15.0" fill="rgb(210,137,16)" rx="2" ry="2" />
<text  x="1026.35" y="223.5" ></text>
</g>
<g >
<title>start_thread(arg=&lt;optimized (726 samples, 55.13%)</title><rect x="10.0" y="373" width="650.5" height="15.0" fill="rgb(217,83,45)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >start_thread(arg=&lt;optimized</text>
</g>
<g >
<title>_int_free (1 samples, 0.08%)</title><rect x="718.7" y="149" width="0.9" height="15.0" fill="rgb(222,99,40)" rx="2" ry="2" />
<text  x="721.72" y="159.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;MultiThreadedPageRankComputer::ThreadRAII*, (1 samples, 0.08%)</title><rect x="1015.3" y="309" width="0.9" height="15.0" fill="rgb(206,165,51)" rx="2" ry="2" />
<text  x="1018.28" y="319.5" ></text>
</g>
<g >
<title>pageRankComputationWithNumNodes(num=2000, (123 samples, 9.34%)</title><rect x="670.3" y="373" width="110.2" height="15.0" fill="rgb(206,177,47)" rx="2" ry="2" />
<text  x="673.33" y="383.5" >pageRankCompu..</text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.08%)</title><rect x="742.0" y="325" width="0.9" height="15.0" fill="rgb(205,168,9)" rx="2" ry="2" />
<text  x="745.01" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.68%)</title><rect x="747.4" y="197" width="8.1" height="15.0" fill="rgb(211,189,9)" rx="2" ry="2" />
<text  x="750.39" y="207.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal(s=s@entry=0x7fffbcd4e8b0, (1 samples, 0.08%)</title><rect x="728.6" y="261" width="0.9" height="15.0" fill="rgb(221,37,31)" rx="2" ry="2" />
<text  x="731.57" y="271.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.08%)</title><rect x="661.4" y="165" width="0.9" height="15.0" fill="rgb(220,72,32)" rx="2" ry="2" />
<text  x="664.37" y="175.5" ></text>
</g>
<g >
<title>operatornew(unsigned (4 samples, 0.30%)</title><rect x="735.7" y="197" width="3.6" height="15.0" fill="rgb(231,2,41)" rx="2" ry="2" />
<text  x="738.74" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=67) (1 samples, 0.08%)</title><rect x="708.9" y="229" width="0.9" height="15.0" fill="rgb(248,23,0)" rx="2" ry="2" />
<text  x="711.86" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="711.5" y="245" width="2.7" height="15.0" fill="rgb(232,190,19)" rx="2" ry="2" />
<text  x="714.55" y="255.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (5 samples, 0.38%)</title><rect x="1156.0" y="197" width="4.4" height="15.0" fill="rgb(247,111,44)" rx="2" ry="2" />
<text  x="1158.95" y="207.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::computeForNetwork (42 samples, 3.19%)</title><rect x="742.9" y="357" width="37.6" height="15.0" fill="rgb(223,186,49)" rx="2" ry="2" />
<text  x="745.91" y="367.5" >Sin..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (17 samples, 1.29%)</title><rect x="746.5" y="245" width="15.2" height="15.0" fill="rgb(247,224,0)" rx="2" ry="2" />
<text  x="749.49" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (1 samples, 0.08%)</title><rect x="1095.9" y="197" width="0.9" height="15.0" fill="rgb(211,155,18)" rx="2" ry="2" />
<text  x="1098.92" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="733.1" y="229" width="0.8" height="15.0" fill="rgb(227,51,3)" rx="2" ry="2" />
<text  x="736.05" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7fffbcd4e900, (2 samples, 0.15%)</title><rect x="1055.6" y="261" width="1.8" height="15.0" fill="rgb(230,94,18)" rx="2" ry="2" />
<text  x="1058.60" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=&lt;optimized (1 samples, 0.08%)</title><rect x="778.7" y="277" width="0.9" height="15.0" fill="rgb(213,1,12)" rx="2" ry="2" />
<text  x="781.75" y="287.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,std::atomic&lt;double&gt;, (10 samples, 0.76%)</title><rect x="1069.9" y="341" width="9.0" height="15.0" fill="rgb(251,162,17)" rx="2" ry="2" />
<text  x="1072.94" y="351.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;PageId (1 samples, 0.08%)</title><rect x="661.4" y="309" width="0.9" height="15.0" fill="rgb(242,154,6)" rx="2" ry="2" />
<text  x="664.37" y="319.5" ></text>
</g>
<g >
<title>SimpleNetworkGenerator::generateNetworkOfSize (1 samples, 0.08%)</title><rect x="660.5" y="357" width="0.9" height="15.0" fill="rgb(224,197,30)" rx="2" ry="2" />
<text  x="663.48" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x55b9ef4a8b40) (1 samples, 0.08%)</title><rect x="772.5" y="37" width="0.9" height="15.0" fill="rgb(229,174,42)" rx="2" ry="2" />
<text  x="775.48" y="47.5" ></text>
</g>
<g >
<title>PageId::~PageId (4 samples, 0.30%)</title><rect x="1130.9" y="213" width="3.5" height="15.0" fill="rgb(245,171,6)" rx="2" ry="2" />
<text  x="1133.87" y="223.5" ></text>
</g>
<g >
<title>NetworkGenerator::generatePageFromNum (5 samples, 0.38%)</title><rect x="726.8" y="325" width="4.5" height="15.0" fill="rgb(239,130,34)" rx="2" ry="2" />
<text  x="729.78" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;PageId*&gt;, (1 samples, 0.08%)</title><rect x="669.4" y="245" width="0.9" height="15.0" fill="rgb(238,103,49)" rx="2" ry="2" />
<text  x="672.44" y="255.5" ></text>
</g>
<g >
<title>PageId::PageId (13 samples, 0.99%)</title><rect x="1102.2" y="341" width="11.6" height="15.0" fill="rgb(212,168,5)" rx="2" ry="2" />
<text  x="1105.19" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.08%)</title><rect x="1176.6" y="293" width="0.9" height="15.0" fill="rgb(229,146,43)" rx="2" ry="2" />
<text  x="1179.56" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.08%)</title><rect x="773.4" y="165" width="0.9" height="15.0" fill="rgb(236,181,36)" rx="2" ry="2" />
<text  x="776.37" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1016.2" y="309" width="1.8" height="15.0" fill="rgb(220,176,4)" rx="2" ry="2" />
<text  x="1019.18" y="319.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (1 samples, 0.08%)</title><rect x="742.0" y="261" width="0.9" height="15.0" fill="rgb(232,87,50)" rx="2" ry="2" />
<text  x="745.01" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (4 samples, 0.30%)</title><rect x="770.7" y="309" width="3.6" height="15.0" fill="rgb(236,218,16)" rx="2" ry="2" />
<text  x="773.68" y="319.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::pageRankWorkFunc (697 samples, 52.92%)</title><rect x="36.0" y="261" width="624.5" height="15.0" fill="rgb(210,49,31)" rx="2" ry="2" />
<text  x="38.98" y="271.5" >MultiThreadedPageRankComputer::pageRankWorkFunc</text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fbb0beb0c40 (4 samples, 0.30%)</title><rect x="1125.5" y="213" width="3.6" height="15.0" fill="rgb(240,203,16)" rx="2" ry="2" />
<text  x="1128.49" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.08%)</title><rect x="668.5" y="293" width="0.9" height="15.0" fill="rgb(225,1,32)" rx="2" ry="2" />
<text  x="671.54" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Insert&lt;PageId, (1 samples, 0.08%)</title><rect x="1181.0" y="325" width="0.9" height="15.0" fill="rgb(253,122,48)" rx="2" ry="2" />
<text  x="1184.04" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (32 samples, 2.43%)</title><rect x="1018.9" y="325" width="28.6" height="15.0" fill="rgb(253,217,32)" rx="2" ry="2" />
<text  x="1021.87" y="335.5" >st..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55b9d95d4f38, (1 samples, 0.08%)</title><rect x="1044.0" y="133" width="0.9" height="15.0" fill="rgb(215,159,15)" rx="2" ry="2" />
<text  x="1046.96" y="143.5" ></text>
</g>
<g >
<title>SimpleNetworkGenerator::generateNetworkOfSize(this=0x7fffbcd4f1d0, (2 samples, 0.15%)</title><rect x="723.2" y="357" width="1.8" height="15.0" fill="rgb(234,42,53)" rx="2" ry="2" />
<text  x="726.20" y="367.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="1114.7" y="213" width="0.9" height="15.0" fill="rgb(215,130,44)" rx="2" ry="2" />
<text  x="1117.74" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x55b9eb719750) (1 samples, 0.08%)</title><rect x="771.6" y="37" width="0.9" height="15.0" fill="rgb(227,107,39)" rx="2" ry="2" />
<text  x="774.58" y="47.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;std::pair&lt;PageId, (1 samples, 0.08%)</title><rect x="722.3" y="245" width="0.9" height="15.0" fill="rgb(211,202,54)" rx="2" ry="2" />
<text  x="725.30" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (15 samples, 1.14%)</title><rect x="1138.9" y="277" width="13.5" height="15.0" fill="rgb(250,90,32)" rx="2" ry="2" />
<text  x="1141.93" y="287.5" ></text>
</g>
<g >
<title>std::condition_variable::wait&lt;MultiThreadedPageRankComputer::CyclicBarrier::await()::{lambda()#1}&gt;(std::unique_lock&lt;std::mutex&gt;&amp;,MultiThreadedPageRankComputer::CyclicBarrier::await()::{lambda()#1}) (69 samples, 5.24%)</title><rect x="36.0" y="229" width="61.8" height="15.0" fill="rgb(254,41,6)" rx="2" ry="2" />
<text  x="38.98" y="239.5" >std::c..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (11 samples, 0.84%)</title><rect x="1047.5" y="309" width="9.9" height="15.0" fill="rgb(252,86,2)" rx="2" ry="2" />
<text  x="1050.54" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId,std::allocator&lt;PageId&gt; (1 samples, 0.08%)</title><rect x="779.6" y="325" width="0.9" height="15.0" fill="rgb(243,4,54)" rx="2" ry="2" />
<text  x="782.64" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55b9e625bb88, (1 samples, 0.08%)</title><rect x="773.4" y="149" width="0.9" height="15.0" fill="rgb(205,169,21)" rx="2" ry="2" />
<text  x="776.37" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.08%)</title><rect x="739.3" y="277" width="0.9" height="15.0" fill="rgb(228,28,9)" rx="2" ry="2" />
<text  x="742.32" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1100.4" y="293" width="0.9" height="15.0" fill="rgb(246,0,52)" rx="2" ry="2" />
<text  x="1103.40" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (3 samples, 0.23%)</title><rect x="764.4" y="261" width="2.7" height="15.0" fill="rgb(215,159,25)" rx="2" ry="2" />
<text  x="767.41" y="271.5" ></text>
</g>
<g >
<title>malloc_consolidate (5 samples, 0.38%)</title><rect x="1018.9" y="213" width="4.4" height="15.0" fill="rgb(236,106,16)" rx="2" ry="2" />
<text  x="1021.87" y="223.5" ></text>
</g>
<g >
<title>futex_wait_cancelable (43 samples, 3.26%)</title><rect x="670.3" y="261" width="38.6" height="15.0" fill="rgb(226,86,47)" rx="2" ry="2" />
<text  x="673.33" y="271.5" >fut..</text>
</g>
<g >
<title>__GI___libc_malloc(bytes=69) (1 samples, 0.08%)</title><rect x="745.6" y="229" width="0.9" height="15.0" fill="rgb(253,145,13)" rx="2" ry="2" />
<text  x="748.60" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=65) (2 samples, 0.15%)</title><rect x="10.0" y="197" width="1.8" height="15.0" fill="rgb(217,183,8)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="1016.2" y="181" width="1.8" height="15.0" fill="rgb(243,116,22)" rx="2" ry="2" />
<text  x="1019.18" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (5 samples, 0.38%)</title><rect x="112.1" y="181" width="4.5" height="15.0" fill="rgb(236,38,54)" rx="2" ry="2" />
<text  x="115.14" y="191.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="737.5" y="165" width="0.9" height="15.0" fill="rgb(220,41,8)" rx="2" ry="2" />
<text  x="740.53" y="175.5" ></text>
</g>
<g >
<title>std::atomic&lt;double&gt;::load(__m=std::memory_order_seq_cst, (1 samples, 0.08%)</title><rect x="111.2" y="245" width="0.9" height="15.0" fill="rgb(233,67,2)" rx="2" ry="2" />
<text  x="114.25" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (1 samples, 0.08%)</title><rect x="667.6" y="165" width="0.9" height="15.0" fill="rgb(239,128,41)" rx="2" ry="2" />
<text  x="670.65" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (6 samples, 0.46%)</title><rect x="1058.3" y="245" width="5.4" height="15.0" fill="rgb(251,140,37)" rx="2" ry="2" />
<text  x="1061.29" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="726.8" y="293" width="0.9" height="15.0" fill="rgb(252,10,6)" rx="2" ry="2" />
<text  x="729.78" y="303.5" ></text>
</g>
<g >
<title>PageId::PageId (2 samples, 0.15%)</title><rect x="1016.2" y="325" width="1.8" height="15.0" fill="rgb(209,119,34)" rx="2" ry="2" />
<text  x="1019.18" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (5 samples, 0.38%)</title><rect x="1039.5" y="149" width="4.5" height="15.0" fill="rgb(249,82,48)" rx="2" ry="2" />
<text  x="1042.48" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (4 samples, 0.30%)</title><rect x="1044.0" y="149" width="3.5" height="15.0" fill="rgb(209,1,24)" rx="2" ry="2" />
<text  x="1046.96" y="159.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="661.4" y="133" width="0.9" height="15.0" fill="rgb(244,46,18)" rx="2" ry="2" />
<text  x="664.37" y="143.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=69) (1 samples, 0.08%)</title><rect x="1114.7" y="229" width="0.9" height="15.0" fill="rgb(238,161,17)" rx="2" ry="2" />
<text  x="1117.74" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.30%)</title><rect x="662.3" y="261" width="3.6" height="15.0" fill="rgb(214,169,3)" rx="2" ry="2" />
<text  x="665.27" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (77 samples, 5.85%)</title><rect x="151.6" y="197" width="69.0" height="15.0" fill="rgb(215,24,4)" rx="2" ry="2" />
<text  x="154.56" y="207.5" >std::_H..</text>
</g>
<g >
<title>_int_malloc (1 samples, 0.08%)</title><rect x="709.8" y="213" width="0.9" height="15.0" fill="rgb(219,147,53)" rx="2" ry="2" />
<text  x="712.76" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (3 samples, 0.23%)</title><rect x="1054.7" y="277" width="2.7" height="15.0" fill="rgb(251,49,12)" rx="2" ry="2" />
<text  x="1057.71" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.08%)</title><rect x="1181.9" y="181" width="0.9" height="15.0" fill="rgb(218,91,48)" rx="2" ry="2" />
<text  x="1184.94" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="761.7" y="293" width="1.8" height="15.0" fill="rgb(230,161,1)" rx="2" ry="2" />
<text  x="764.72" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="1101.3" y="261" width="0.9" height="15.0" fill="rgb(211,154,24)" rx="2" ry="2" />
<text  x="1104.30" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.08%)</title><rect x="668.5" y="277" width="0.9" height="15.0" fill="rgb(226,53,47)" rx="2" ry="2" />
<text  x="671.54" y="287.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7fffbcd4e780 (1 samples, 0.08%)</title><rect x="1096.8" y="293" width="0.9" height="15.0" fill="rgb(246,45,48)" rx="2" ry="2" />
<text  x="1099.82" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.08%)</title><rect x="774.3" y="245" width="0.9" height="15.0" fill="rgb(214,202,22)" rx="2" ry="2" />
<text  x="777.27" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="660.5" y="229" width="0.9" height="15.0" fill="rgb(229,41,41)" rx="2" ry="2" />
<text  x="663.48" y="239.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.08%)</title><rect x="1136.2" y="245" width="0.9" height="15.0" fill="rgb(239,1,27)" rx="2" ry="2" />
<text  x="1139.24" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (44 samples, 3.34%)</title><rect x="220.6" y="197" width="39.4" height="15.0" fill="rgb(215,173,45)" rx="2" ry="2" />
<text  x="223.55" y="207.5" >std..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (4 samples, 0.30%)</title><rect x="1082.5" y="277" width="3.6" height="15.0" fill="rgb(222,16,39)" rx="2" ry="2" />
<text  x="1085.48" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;Page, (2 samples, 0.15%)</title><rect x="725.0" y="325" width="1.8" height="15.0" fill="rgb(242,100,27)" rx="2" ry="2" />
<text  x="727.99" y="335.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.08%)</title><rect x="1186.4" y="149" width="0.9" height="15.0" fill="rgb(221,188,3)" rx="2" ry="2" />
<text  x="1189.42" y="159.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, (1 samples, 0.08%)</title><rect x="1100.4" y="309" width="0.9" height="15.0" fill="rgb(235,124,51)" rx="2" ry="2" />
<text  x="1103.40" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.30%)</title><rect x="1110.3" y="197" width="3.5" height="15.0" fill="rgb(220,22,39)" rx="2" ry="2" />
<text  x="1113.26" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (1 samples, 0.08%)</title><rect x="1095.9" y="181" width="0.9" height="15.0" fill="rgb(246,176,12)" rx="2" ry="2" />
<text  x="1098.92" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.15%)</title><rect x="1177.5" y="277" width="1.7" height="15.0" fill="rgb(254,20,23)" rx="2" ry="2" />
<text  x="1180.46" y="287.5" ></text>
</g>
<g >
<title>pageRankComputationWithNumNodes (6 samples, 0.46%)</title><rect x="1184.6" y="373" width="5.4" height="15.0" fill="rgb(206,151,24)" rx="2" ry="2" />
<text  x="1187.62" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1121.9" y="213" width="1.8" height="15.0" fill="rgb(236,72,23)" rx="2" ry="2" />
<text  x="1124.91" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (3 samples, 0.23%)</title><rect x="1152.4" y="309" width="2.7" height="15.0" fill="rgb(217,208,46)" rx="2" ry="2" />
<text  x="1155.37" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;PageId, (2 samples, 0.15%)</title><rect x="719.6" y="309" width="1.8" height="15.0" fill="rgb(241,203,53)" rx="2" ry="2" />
<text  x="722.61" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;PageId (1 samples, 0.08%)</title><rect x="742.9" y="309" width="0.9" height="15.0" fill="rgb(246,161,24)" rx="2" ry="2" />
<text  x="745.91" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.08%)</title><rect x="660.5" y="325" width="0.9" height="15.0" fill="rgb(231,36,12)" rx="2" ry="2" />
<text  x="663.48" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.08%)</title><rect x="665.9" y="325" width="0.9" height="15.0" fill="rgb(209,45,14)" rx="2" ry="2" />
<text  x="668.85" y="335.5" ></text>
</g>
<g >
<title>std::condition_variable::wait&lt;MultiThreadedPageRankComputer::CyclicBarrier::wait()::{lambda()#1}&gt;(std::unique_lock&lt;std::mutex&gt;&amp;,MultiThreadedPageRankComputer::CyclicBarrier::wait()::{lambda()#1}) (260 samples, 19.74%)</title><rect x="782.3" y="325" width="233.0" height="15.0" fill="rgb(226,73,46)" rx="2" ry="2" />
<text  x="785.33" y="335.5" >std::condition_variable::wait&lt;..</text>
</g>
<g >
<title>std::vector&lt;PageId, (9 samples, 0.68%)</title><rect x="1087.9" y="341" width="8.0" height="15.0" fill="rgb(233,1,53)" rx="2" ry="2" />
<text  x="1090.86" y="351.5" ></text>
</g>
<g >
<title>std::atomic_compare_exchange_weak_explicit&lt;double&gt; (12 samples, 0.91%)</title><rect x="100.5" y="213" width="10.7" height="15.0" fill="rgb(238,193,33)" rx="2" ry="2" />
<text  x="103.49" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (13 samples, 0.99%)</title><rect x="1102.2" y="325" width="11.6" height="15.0" fill="rgb(206,149,9)" rx="2" ry="2" />
<text  x="1105.19" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;PageId, (3 samples, 0.23%)</title><rect x="716.9" y="325" width="2.7" height="15.0" fill="rgb(230,52,27)" rx="2" ry="2" />
<text  x="719.92" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.15%)</title><rect x="744.7" y="261" width="1.8" height="15.0" fill="rgb(231,24,31)" rx="2" ry="2" />
<text  x="747.70" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.53%)</title><rect x="1107.6" y="261" width="6.2" height="15.0" fill="rgb(213,19,48)" rx="2" ry="2" />
<text  x="1110.57" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="660.5" y="245" width="0.9" height="15.0" fill="rgb(225,33,5)" rx="2" ry="2" />
<text  x="663.48" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.08%)</title><rect x="667.6" y="293" width="0.9" height="15.0" fill="rgb(235,92,16)" rx="2" ry="2" />
<text  x="670.65" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.08%)</title><rect x="667.6" y="213" width="0.9" height="15.0" fill="rgb(226,26,26)" rx="2" ry="2" />
<text  x="670.65" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (4 samples, 0.30%)</title><rect x="1130.9" y="261" width="3.5" height="15.0" fill="rgb(239,47,24)" rx="2" ry="2" />
<text  x="1133.87" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (14 samples, 1.06%)</title><rect x="1124.6" y="325" width="12.5" height="15.0" fill="rgb(250,85,4)" rx="2" ry="2" />
<text  x="1127.59" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.08%)</title><rect x="669.4" y="341" width="0.9" height="15.0" fill="rgb(231,125,6)" rx="2" ry="2" />
<text  x="672.44" y="351.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=140441308546816, (1 samples, 0.08%)</title><rect x="1015.3" y="213" width="0.9" height="15.0" fill="rgb(220,161,22)" rx="2" ry="2" />
<text  x="1018.28" y="223.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1136.2" y="277" width="0.9" height="15.0" fill="rgb(227,108,13)" rx="2" ry="2" />
<text  x="1139.24" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (4 samples, 0.30%)</title><rect x="1146.1" y="117" width="3.6" height="15.0" fill="rgb(247,66,46)" rx="2" ry="2" />
<text  x="1149.10" y="127.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.08%)</title><rect x="731.3" y="149" width="0.9" height="15.0" fill="rgb(221,155,1)" rx="2" ry="2" />
<text  x="734.26" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (3 samples, 0.23%)</title><rect x="1131.8" y="149" width="2.6" height="15.0" fill="rgb(218,164,7)" rx="2" ry="2" />
<text  x="1134.76" y="159.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (1 samples, 0.08%)</title><rect x="776.1" y="197" width="0.9" height="15.0" fill="rgb(210,102,6)" rx="2" ry="2" />
<text  x="779.06" y="207.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.08%)</title><rect x="774.3" y="261" width="0.9" height="15.0" fill="rgb(240,70,47)" rx="2" ry="2" />
<text  x="777.27" y="271.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (2 samples, 0.15%)</title><rect x="765.3" y="245" width="1.8" height="15.0" fill="rgb(244,30,40)" rx="2" ry="2" />
<text  x="768.31" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank, (3 samples, 0.23%)</title><rect x="1181.9" y="341" width="2.7" height="15.0" fill="rgb(222,17,54)" rx="2" ry="2" />
<text  x="1184.94" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1016.2" y="229" width="1.8" height="15.0" fill="rgb(214,142,17)" rx="2" ry="2" />
<text  x="1019.18" y="239.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=70, (1 samples, 0.08%)</title><rect x="1099.5" y="197" width="0.9" height="15.0" fill="rgb(240,101,13)" rx="2" ry="2" />
<text  x="1102.51" y="207.5" ></text>
</g>
<g >
<title>PageId::operator== (1 samples, 0.08%)</title><rect x="668.5" y="229" width="0.9" height="15.0" fill="rgb(241,89,47)" rx="2" ry="2" />
<text  x="671.54" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageIdAndRank&gt; (3 samples, 0.23%)</title><rect x="1187.3" y="309" width="2.7" height="15.0" fill="rgb(234,150,38)" rx="2" ry="2" />
<text  x="1190.31" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55b9e8302eb8, (1 samples, 0.08%)</title><rect x="1131.8" y="133" width="0.9" height="15.0" fill="rgb(248,176,23)" rx="2" ry="2" />
<text  x="1134.76" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="742.9" y="197" width="0.9" height="15.0" fill="rgb(213,129,16)" rx="2" ry="2" />
<text  x="745.91" y="207.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fbb0beb0c40 (23 samples, 1.75%)</title><rect x="1018.9" y="229" width="20.6" height="15.0" fill="rgb(232,121,33)" rx="2" ry="2" />
<text  x="1021.87" y="239.5" ></text>
</g>
<g >
<title>malloc_consolidate (3 samples, 0.23%)</title><rect x="1187.3" y="261" width="2.7" height="15.0" fill="rgb(244,104,31)" rx="2" ry="2" />
<text  x="1190.31" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55b9f6757ff8, (1 samples, 0.08%)</title><rect x="1133.6" y="133" width="0.8" height="15.0" fill="rgb(214,171,0)" rx="2" ry="2" />
<text  x="1136.55" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::allocate(this=0x7fffbcd4e840, (1 samples, 0.08%)</title><rect x="781.4" y="277" width="0.9" height="15.0" fill="rgb(215,8,36)" rx="2" ry="2" />
<text  x="784.44" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=&lt;optimized (2 samples, 0.15%)</title><rect x="1177.5" y="245" width="1.7" height="15.0" fill="rgb(220,49,35)" rx="2" ry="2" />
<text  x="1180.46" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=56) (3 samples, 0.23%)</title><rect x="1149.7" y="213" width="2.7" height="15.0" fill="rgb(236,150,34)" rx="2" ry="2" />
<text  x="1152.68" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::deallocate(this=&lt;synthetic (5 samples, 0.38%)</title><rect x="1124.6" y="245" width="4.5" height="15.0" fill="rgb(232,125,48)" rx="2" ry="2" />
<text  x="1127.59" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fffbcd4ed20, (1 samples, 0.08%)</title><rect x="1113.8" y="261" width="0.9" height="15.0" fill="rgb(227,0,6)" rx="2" ry="2" />
<text  x="1116.84" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.08%)</title><rect x="781.4" y="293" width="0.9" height="15.0" fill="rgb(245,130,7)" rx="2" ry="2" />
<text  x="784.44" y="303.5" ></text>
</g>
<g >
<title>std::(__val=90451) (1 samples, 0.08%)</title><rect x="1098.6" y="325" width="0.9" height="15.0" fill="rgb(209,192,5)" rx="2" ry="2" />
<text  x="1101.61" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (3 samples, 0.23%)</title><rect x="708.9" y="261" width="2.6" height="15.0" fill="rgb(245,5,35)" rx="2" ry="2" />
<text  x="711.86" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.23%)</title><rect x="663.2" y="197" width="2.7" height="15.0" fill="rgb(246,122,41)" rx="2" ry="2" />
<text  x="666.17" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (1 samples, 0.08%)</title><rect x="1101.3" y="229" width="0.9" height="15.0" fill="rgb(213,135,40)" rx="2" ry="2" />
<text  x="1104.30" y="239.5" ></text>
</g>
<g >
<title>Page::addLink (6 samples, 0.46%)</title><rect x="735.7" y="341" width="5.4" height="15.0" fill="rgb(243,146,49)" rx="2" ry="2" />
<text  x="738.74" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (4 samples, 0.30%)</title><rect x="1173.0" y="309" width="3.6" height="15.0" fill="rgb(233,126,10)" rx="2" ry="2" />
<text  x="1175.98" y="319.5" ></text>
</g>
<g >
<title>Network::addPage (1 samples, 0.08%)</title><rect x="1095.9" y="341" width="0.9" height="15.0" fill="rgb(237,222,1)" rx="2" ry="2" />
<text  x="1098.92" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fbaf232f1b0, (1 samples, 0.08%)</title><rect x="716.9" y="165" width="0.9" height="15.0" fill="rgb(213,139,42)" rx="2" ry="2" />
<text  x="719.92" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1016.2" y="213" width="1.8" height="15.0" fill="rgb(211,141,2)" rx="2" ry="2" />
<text  x="1019.18" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="731.3" y="245" width="1.8" height="15.0" fill="rgb(238,162,13)" rx="2" ry="2" />
<text  x="734.26" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="10.0" y="277" width="1.8" height="15.0" fill="rgb(212,139,7)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>PageId::~PageId (9 samples, 0.68%)</title><rect x="1039.5" y="213" width="8.0" height="15.0" fill="rgb(251,75,24)" rx="2" ry="2" />
<text  x="1042.48" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.15%)</title><rect x="1177.5" y="261" width="1.7" height="15.0" fill="rgb(216,149,32)" rx="2" ry="2" />
<text  x="1180.46" y="271.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::atomic_increase (15 samples, 1.14%)</title><rect x="97.8" y="245" width="13.4" height="15.0" fill="rgb(221,184,7)" rx="2" ry="2" />
<text  x="100.81" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (5 samples, 0.38%)</title><rect x="775.2" y="325" width="4.4" height="15.0" fill="rgb(208,89,36)" rx="2" ry="2" />
<text  x="778.16" y="335.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.38%)</title><rect x="1156.0" y="181" width="4.4" height="15.0" fill="rgb(246,36,1)" rx="2" ry="2" />
<text  x="1158.95" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="661.4" y="213" width="0.9" height="15.0" fill="rgb(254,67,7)" rx="2" ry="2" />
<text  x="664.37" y="223.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="774.3" y="277" width="0.9" height="15.0" fill="rgb(254,3,47)" rx="2" ry="2" />
<text  x="777.27" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.08%)</title><rect x="1136.2" y="261" width="0.9" height="15.0" fill="rgb(240,125,46)" rx="2" ry="2" />
<text  x="1139.24" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (4 samples, 0.30%)</title><rect x="1092.3" y="245" width="3.6" height="15.0" fill="rgb(230,149,39)" rx="2" ry="2" />
<text  x="1095.34" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank, (2 samples, 0.15%)</title><rect x="1182.8" y="309" width="1.8" height="15.0" fill="rgb(233,85,27)" rx="2" ry="2" />
<text  x="1185.83" y="319.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, (3 samples, 0.23%)</title><rect x="10.0" y="293" width="2.7" height="15.0" fill="rgb(229,208,28)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (6 samples, 0.46%)</title><rect x="1155.1" y="277" width="5.3" height="15.0" fill="rgb(242,164,51)" rx="2" ry="2" />
<text  x="1158.06" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (4 samples, 0.30%)</title><rect x="770.7" y="293" width="3.6" height="15.0" fill="rgb(209,137,14)" rx="2" ry="2" />
<text  x="773.68" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.08%)</title><rect x="714.2" y="293" width="0.9" height="15.0" fill="rgb(211,142,17)" rx="2" ry="2" />
<text  x="717.24" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;Page*, (1 samples, 0.08%)</title><rect x="1095.9" y="293" width="0.9" height="15.0" fill="rgb(249,114,12)" rx="2" ry="2" />
<text  x="1098.92" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (1 samples, 0.08%)</title><rect x="1087.9" y="309" width="0.9" height="15.0" fill="rgb(244,156,8)" rx="2" ry="2" />
<text  x="1090.86" y="319.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (57 samples, 4.33%)</title><rect x="1018.9" y="341" width="51.0" height="15.0" fill="rgb(209,132,3)" rx="2" ry="2" />
<text  x="1021.87" y="351.5" >std::..</text>
</g>
<g >
<title>__find_specmb(format=0x55b9d81bd097 (1 samples, 0.08%)</title><rect x="1098.6" y="261" width="0.9" height="15.0" fill="rgb(247,70,25)" rx="2" ry="2" />
<text  x="1101.61" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55b9e7a596d8, (1 samples, 0.08%)</title><rect x="1044.9" y="133" width="0.8" height="15.0" fill="rgb(251,119,47)" rx="2" ry="2" />
<text  x="1047.85" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="1100.4" y="245" width="0.9" height="15.0" fill="rgb(234,126,26)" rx="2" ry="2" />
<text  x="1103.40" y="255.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal(s=s@entry=0x7fffbcd4e610, (1 samples, 0.08%)</title><rect x="1096.8" y="277" width="0.9" height="15.0" fill="rgb(241,206,44)" rx="2" ry="2" />
<text  x="1099.82" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.08%)</title><rect x="1058.3" y="229" width="0.9" height="15.0" fill="rgb(222,97,37)" rx="2" ry="2" />
<text  x="1061.29" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.08%)</title><rect x="773.4" y="181" width="0.9" height="15.0" fill="rgb(251,57,3)" rx="2" ry="2" />
<text  x="776.37" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1018.0" y="309" width="0.9" height="15.0" fill="rgb(215,103,41)" rx="2" ry="2" />
<text  x="1020.97" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="742.0" y="213" width="0.9" height="15.0" fill="rgb(212,78,3)" rx="2" ry="2" />
<text  x="745.01" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.08%)</title><rect x="773.4" y="197" width="0.9" height="15.0" fill="rgb(251,87,6)" rx="2" ry="2" />
<text  x="776.37" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1113.8" y="325" width="0.9" height="15.0" fill="rgb(230,136,32)" rx="2" ry="2" />
<text  x="1116.84" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (3 samples, 0.23%)</title><rect x="711.5" y="309" width="2.7" height="15.0" fill="rgb(245,225,31)" rx="2" ry="2" />
<text  x="714.55" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.15%)</title><rect x="1047.5" y="245" width="1.8" height="15.0" fill="rgb(208,157,5)" rx="2" ry="2" />
<text  x="1050.54" y="255.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="1185.5" y="165" width="0.9" height="15.0" fill="rgb(252,223,31)" rx="2" ry="2" />
<text  x="1188.52" y="175.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fbb0beb0c40 (4 samples, 0.30%)</title><rect x="1088.8" y="261" width="3.5" height="15.0" fill="rgb(223,207,30)" rx="2" ry="2" />
<text  x="1091.75" y="271.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (2 samples, 0.15%)</title><rect x="725.0" y="229" width="1.8" height="15.0" fill="rgb(246,70,1)" rx="2" ry="2" />
<text  x="727.99" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.08%)</title><rect x="666.8" y="309" width="0.8" height="15.0" fill="rgb(211,39,32)" rx="2" ry="2" />
<text  x="669.75" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="743.8" y="293" width="2.7" height="15.0" fill="rgb(236,139,44)" rx="2" ry="2" />
<text  x="746.80" y="303.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.08%)</title><rect x="779.6" y="261" width="0.9" height="15.0" fill="rgb(245,62,44)" rx="2" ry="2" />
<text  x="782.64" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (2 samples, 0.15%)</title><rect x="1049.3" y="245" width="1.8" height="15.0" fill="rgb(220,23,20)" rx="2" ry="2" />
<text  x="1052.33" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="779.6" y="245" width="0.9" height="15.0" fill="rgb(242,62,45)" rx="2" ry="2" />
<text  x="782.64" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (4 samples, 0.30%)</title><rect x="1078.9" y="309" width="3.6" height="15.0" fill="rgb(211,1,42)" rx="2" ry="2" />
<text  x="1081.90" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.30%)</title><rect x="1130.9" y="165" width="3.5" height="15.0" fill="rgb(222,124,33)" rx="2" ry="2" />
<text  x="1133.87" y="175.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,double, (8 samples, 0.61%)</title><rect x="763.5" y="341" width="7.2" height="15.0" fill="rgb(235,134,19)" rx="2" ry="2" />
<text  x="766.52" y="351.5" ></text>
</g>
<g >
<title>alloc_perturb (1 samples, 0.08%)</title><rect x="725.9" y="53" width="0.9" height="15.0" fill="rgb(245,84,44)" rx="2" ry="2" />
<text  x="728.88" y="63.5" ></text>
</g>
<g >
<title>std::(__val=745) (1 samples, 0.08%)</title><rect x="729.5" y="309" width="0.9" height="15.0" fill="rgb(226,138,54)" rx="2" ry="2" />
<text  x="732.47" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (119 samples, 9.04%)</title><rect x="277.0" y="197" width="106.6" height="15.0" fill="rgb(240,153,38)" rx="2" ry="2" />
<text  x="280.00" y="207.5" >std::_Hashtab..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (17 samples, 1.29%)</title><rect x="746.5" y="277" width="15.2" height="15.0" fill="rgb(211,162,17)" rx="2" ry="2" />
<text  x="749.49" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.08%)</title><rect x="743.8" y="181" width="0.9" height="15.0" fill="rgb(247,108,42)" rx="2" ry="2" />
<text  x="746.80" y="191.5" ></text>
</g>
<g >
<title>PageId::operator== (14 samples, 1.06%)</title><rect x="139.0" y="133" width="12.6" height="15.0" fill="rgb(205,38,2)" rx="2" ry="2" />
<text  x="142.02" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (1 samples, 0.08%)</title><rect x="666.8" y="325" width="0.8" height="15.0" fill="rgb(219,108,47)" rx="2" ry="2" />
<text  x="669.75" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.08%)</title><rect x="666.8" y="261" width="0.8" height="15.0" fill="rgb(213,66,24)" rx="2" ry="2" />
<text  x="669.75" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (1 samples, 0.08%)</title><rect x="668.5" y="325" width="0.9" height="15.0" fill="rgb(207,81,48)" rx="2" ry="2" />
<text  x="671.54" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1099.5" y="277" width="0.9" height="15.0" fill="rgb(224,120,30)" rx="2" ry="2" />
<text  x="1102.51" y="287.5" ></text>
</g>
<g >
<title>std::(__val=756) (1 samples, 0.08%)</title><rect x="730.4" y="309" width="0.9" height="15.0" fill="rgb(224,118,16)" rx="2" ry="2" />
<text  x="733.36" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7fffbcd4e900, (88 samples, 6.68%)</title><rect x="528.8" y="181" width="78.8" height="15.0" fill="rgb(223,158,45)" rx="2" ry="2" />
<text  x="531.77" y="191.5" >std::__de..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;PageId, (2 samples, 0.15%)</title><rect x="721.4" y="309" width="1.8" height="15.0" fill="rgb(217,76,48)" rx="2" ry="2" />
<text  x="724.40" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.08%)</title><rect x="776.1" y="277" width="0.9" height="15.0" fill="rgb(228,90,33)" rx="2" ry="2" />
<text  x="779.06" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1101.3" y="309" width="0.9" height="15.0" fill="rgb(237,125,53)" rx="2" ry="2" />
<text  x="1104.30" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55b9f1655c00, (1 samples, 0.08%)</title><rect x="1087.9" y="181" width="0.9" height="15.0" fill="rgb(237,194,15)" rx="2" ry="2" />
<text  x="1090.86" y="191.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7fffbcd4ea20 (1 samples, 0.08%)</title><rect x="726.8" y="277" width="0.9" height="15.0" fill="rgb(223,206,39)" rx="2" ry="2" />
<text  x="729.78" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (39 samples, 2.96%)</title><rect x="116.6" y="165" width="35.0" height="15.0" fill="rgb(209,178,48)" rx="2" ry="2" />
<text  x="119.62" y="175.5" >st..</text>
</g>
<g >
<title>PageIdAndRank::~PageIdAndRank (1 samples, 0.08%)</title><rect x="1181.9" y="261" width="0.9" height="15.0" fill="rgb(222,96,32)" rx="2" ry="2" />
<text  x="1184.94" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (55 samples, 4.18%)</title><rect x="608.5" y="213" width="49.3" height="15.0" fill="rgb(226,80,28)" rx="2" ry="2" />
<text  x="611.51" y="223.5" >std:..</text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (3 samples, 0.23%)</title><rect x="770.7" y="181" width="2.7" height="15.0" fill="rgb(206,12,27)" rx="2" ry="2" />
<text  x="773.68" y="191.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;PageId, (3 samples, 0.23%)</title><rect x="716.9" y="309" width="2.7" height="15.0" fill="rgb(235,10,45)" rx="2" ry="2" />
<text  x="719.92" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (18 samples, 1.37%)</title><rect x="277.0" y="149" width="16.1" height="15.0" fill="rgb(241,7,42)" rx="2" ry="2" />
<text  x="280.00" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.30%)</title><rect x="662.3" y="245" width="3.6" height="15.0" fill="rgb(230,204,46)" rx="2" ry="2" />
<text  x="665.27" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (1 samples, 0.08%)</title><rect x="1181.0" y="245" width="0.9" height="15.0" fill="rgb(230,35,25)" rx="2" ry="2" />
<text  x="1184.04" y="255.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, (3 samples, 0.23%)</title><rect x="733.1" y="293" width="2.6" height="15.0" fill="rgb(216,30,12)" rx="2" ry="2" />
<text  x="736.05" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="1123.7" y="261" width="0.9" height="15.0" fill="rgb(228,135,33)" rx="2" ry="2" />
<text  x="1126.70" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.08%)</title><rect x="1095.9" y="213" width="0.9" height="15.0" fill="rgb(248,163,45)" rx="2" ry="2" />
<text  x="1098.92" y="223.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (4 samples, 0.30%)</title><rect x="1173.0" y="277" width="3.6" height="15.0" fill="rgb(230,136,18)" rx="2" ry="2" />
<text  x="1175.98" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55b9dc7c4de0, (1 samples, 0.08%)</title><rect x="667.6" y="53" width="0.9" height="15.0" fill="rgb(220,63,22)" rx="2" ry="2" />
<text  x="670.65" y="63.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (20 samples, 1.52%)</title><rect x="1137.1" y="325" width="18.0" height="15.0" fill="rgb(250,6,20)" rx="2" ry="2" />
<text  x="1140.14" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1087.9" y="213" width="0.9" height="15.0" fill="rgb(235,93,39)" rx="2" ry="2" />
<text  x="1090.86" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId, (1 samples, 0.08%)</title><rect x="721.4" y="229" width="0.9" height="15.0" fill="rgb(210,3,1)" rx="2" ry="2" />
<text  x="724.40" y="239.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.08%)</title><rect x="1184.6" y="165" width="0.9" height="15.0" fill="rgb(205,159,39)" rx="2" ry="2" />
<text  x="1187.62" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (2 samples, 0.15%)</title><rect x="1185.5" y="197" width="1.8" height="15.0" fill="rgb(248,64,27)" rx="2" ry="2" />
<text  x="1188.52" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.30%)</title><rect x="1130.9" y="197" width="3.5" height="15.0" fill="rgb(233,136,6)" rx="2" ry="2" />
<text  x="1133.87" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="716.9" y="229" width="2.7" height="15.0" fill="rgb(217,111,39)" rx="2" ry="2" />
<text  x="719.92" y="239.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=67, (9 samples, 0.68%)</title><rect x="747.4" y="213" width="8.1" height="15.0" fill="rgb(237,180,7)" rx="2" ry="2" />
<text  x="750.39" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (13 samples, 0.99%)</title><rect x="1058.3" y="277" width="11.6" height="15.0" fill="rgb(207,80,21)" rx="2" ry="2" />
<text  x="1061.29" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="669.4" y="197" width="0.9" height="15.0" fill="rgb(208,194,49)" rx="2" ry="2" />
<text  x="672.44" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (4 samples, 0.30%)</title><rect x="1088.8" y="309" width="3.5" height="15.0" fill="rgb(253,76,30)" rx="2" ry="2" />
<text  x="1091.75" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (101 samples, 7.67%)</title><rect x="293.1" y="181" width="90.5" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="296.13" y="191.5" >std::__det..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (17 samples, 1.29%)</title><rect x="746.5" y="261" width="15.2" height="15.0" fill="rgb(212,127,0)" rx="2" ry="2" />
<text  x="749.49" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1180.1" y="181" width="0.9" height="15.0" fill="rgb(208,89,37)" rx="2" ry="2" />
<text  x="1183.14" y="191.5" ></text>
</g>
<g >
<title>malloc_consolidate (2 samples, 0.15%)</title><rect x="1088.8" y="245" width="1.7" height="15.0" fill="rgb(250,169,15)" rx="2" ry="2" />
<text  x="1091.75" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.08%)</title><rect x="739.3" y="293" width="0.9" height="15.0" fill="rgb(230,169,50)" rx="2" ry="2" />
<text  x="742.32" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.30%)</title><rect x="735.7" y="229" width="3.6" height="15.0" fill="rgb(224,34,38)" rx="2" ry="2" />
<text  x="738.74" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (5 samples, 0.38%)</title><rect x="1070.8" y="293" width="4.5" height="15.0" fill="rgb(206,30,4)" rx="2" ry="2" />
<text  x="1073.84" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (3 samples, 0.23%)</title><rect x="1079.8" y="293" width="2.7" height="15.0" fill="rgb(222,99,5)" rx="2" ry="2" />
<text  x="1082.79" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (4 samples, 0.30%)</title><rect x="735.7" y="293" width="3.6" height="15.0" fill="rgb(208,5,1)" rx="2" ry="2" />
<text  x="738.74" y="303.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::CyclicBarrier::await (69 samples, 5.24%)</title><rect x="36.0" y="245" width="61.8" height="15.0" fill="rgb(211,196,29)" rx="2" ry="2" />
<text  x="38.98" y="255.5" >MultiT..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (2 samples, 0.15%)</title><rect x="761.7" y="277" width="1.8" height="15.0" fill="rgb(253,79,28)" rx="2" ry="2" />
<text  x="764.72" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.08%)</title><rect x="1107.6" y="197" width="0.9" height="15.0" fill="rgb(230,83,16)" rx="2" ry="2" />
<text  x="1110.57" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.08%)</title><rect x="777.0" y="293" width="0.9" height="15.0" fill="rgb(252,200,6)" rx="2" ry="2" />
<text  x="779.96" y="303.5" ></text>
</g>
<g >
<title>operatornew(unsigned (2 samples, 0.15%)</title><rect x="715.1" y="181" width="1.8" height="15.0" fill="rgb(210,210,43)" rx="2" ry="2" />
<text  x="718.13" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.08%)</title><rect x="667.6" y="325" width="0.9" height="15.0" fill="rgb(227,16,0)" rx="2" ry="2" />
<text  x="670.65" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=69) (1 samples, 0.08%)</title><rect x="710.7" y="229" width="0.8" height="15.0" fill="rgb(209,121,10)" rx="2" ry="2" />
<text  x="713.65" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (1 samples, 0.08%)</title><rect x="1184.6" y="213" width="0.9" height="15.0" fill="rgb(232,1,34)" rx="2" ry="2" />
<text  x="1187.62" y="223.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::computeForNetwork (10 samples, 0.76%)</title><rect x="661.4" y="357" width="8.9" height="15.0" fill="rgb(234,175,13)" rx="2" ry="2" />
<text  x="664.37" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageIdAndRank&gt;::deallocate(this=0x7fffbcd4ef10, (3 samples, 0.23%)</title><rect x="1187.3" y="293" width="2.7" height="15.0" fill="rgb(241,115,51)" rx="2" ry="2" />
<text  x="1190.31" y="303.5" ></text>
</g>
<g >
<title>std::_Construct&lt;PageId, (1 samples, 0.08%)</title><rect x="661.4" y="261" width="0.9" height="15.0" fill="rgb(229,141,1)" rx="2" ry="2" />
<text  x="664.37" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;Page, (1 samples, 0.08%)</title><rect x="1095.9" y="309" width="0.9" height="15.0" fill="rgb(223,14,8)" rx="2" ry="2" />
<text  x="1098.92" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (44 samples, 3.34%)</title><rect x="112.1" y="197" width="39.5" height="15.0" fill="rgb(206,73,19)" rx="2" ry="2" />
<text  x="115.14" y="207.5" >std..</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId, (1 samples, 0.08%)</title><rect x="1180.1" y="277" width="0.9" height="15.0" fill="rgb(249,38,7)" rx="2" ry="2" />
<text  x="1183.14" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (2 samples, 0.15%)</title><rect x="1185.5" y="229" width="1.8" height="15.0" fill="rgb(216,27,12)" rx="2" ry="2" />
<text  x="1188.52" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="770.7" y="101" width="2.7" height="15.0" fill="rgb(208,199,14)" rx="2" ry="2" />
<text  x="773.68" y="111.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::CyclicBarrier::wait (43 samples, 3.26%)</title><rect x="670.3" y="341" width="38.6" height="15.0" fill="rgb(230,117,0)" rx="2" ry="2" />
<text  x="673.33" y="351.5" >Mul..</text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7fffbcd4e940, (3 samples, 0.23%)</title><rect x="1079.8" y="277" width="2.7" height="15.0" fill="rgb(252,95,27)" rx="2" ry="2" />
<text  x="1082.79" y="287.5" ></text>
</g>
<g >
<title>PageId::PageId (3 samples, 0.23%)</title><rect x="743.8" y="325" width="2.7" height="15.0" fill="rgb(206,130,4)" rx="2" ry="2" />
<text  x="746.80" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (12 samples, 0.91%)</title><rect x="1138.9" y="229" width="10.8" height="15.0" fill="rgb(211,165,41)" rx="2" ry="2" />
<text  x="1141.93" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.08%)</title><rect x="1078.9" y="293" width="0.9" height="15.0" fill="rgb(221,21,20)" rx="2" ry="2" />
<text  x="1081.90" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="732.2" y="229" width="0.9" height="15.0" fill="rgb(229,118,3)" rx="2" ry="2" />
<text  x="735.16" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="660.5" y="213" width="0.9" height="15.0" fill="rgb(217,203,42)" rx="2" ry="2" />
<text  x="663.48" y="223.5" ></text>
</g>
<g >
<title>operatornew(unsigned (4 samples, 0.30%)</title><rect x="1146.1" y="133" width="3.6" height="15.0" fill="rgb(205,78,48)" rx="2" ry="2" />
<text  x="1149.10" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="770.7" y="117" width="2.7" height="15.0" fill="rgb(219,43,10)" rx="2" ry="2" />
<text  x="773.68" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (13 samples, 0.99%)</title><rect x="1058.3" y="293" width="11.6" height="15.0" fill="rgb(229,105,16)" rx="2" ry="2" />
<text  x="1061.29" y="303.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (1 samples, 0.08%)</title><rect x="661.4" y="293" width="0.9" height="15.0" fill="rgb(228,0,3)" rx="2" ry="2" />
<text  x="664.37" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (3 samples, 0.23%)</title><rect x="711.5" y="197" width="2.7" height="15.0" fill="rgb(225,30,38)" rx="2" ry="2" />
<text  x="714.55" y="207.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fbb0beb0c40 (3 samples, 0.23%)</title><rect x="1187.3" y="277" width="2.7" height="15.0" fill="rgb(209,120,53)" rx="2" ry="2" />
<text  x="1190.31" y="287.5" ></text>
</g>
<g >
<title>operatornew(unsigned (2 samples, 0.15%)</title><rect x="1114.7" y="245" width="1.8" height="15.0" fill="rgb(227,64,22)" rx="2" ry="2" />
<text  x="1117.74" y="255.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::computeForNetwork(this=0x7fffbcd4f1f0, (2 samples, 0.15%)</title><rect x="780.5" y="357" width="1.8" height="15.0" fill="rgb(219,185,26)" rx="2" ry="2" />
<text  x="783.54" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (18 samples, 1.37%)</title><rect x="277.0" y="165" width="16.1" height="15.0" fill="rgb(233,75,13)" rx="2" ry="2" />
<text  x="280.00" y="175.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (2 samples, 0.15%)</title><rect x="1094.1" y="197" width="1.8" height="15.0" fill="rgb(233,62,53)" rx="2" ry="2" />
<text  x="1097.13" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x55b9f6758030) (1 samples, 0.08%)</title><rect x="1133.6" y="117" width="0.8" height="15.0" fill="rgb(247,143,15)" rx="2" ry="2" />
<text  x="1136.55" y="127.5" ></text>
</g>
<g >
<title>__pthread_cond_wait (69 samples, 5.24%)</title><rect x="36.0" y="197" width="61.8" height="15.0" fill="rgb(206,65,37)" rx="2" ry="2" />
<text  x="38.98" y="207.5" >__pthr..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.08%)</title><rect x="1184.6" y="101" width="0.9" height="15.0" fill="rgb(206,189,12)" rx="2" ry="2" />
<text  x="1187.62" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55b9de3f38a0, (1 samples, 0.08%)</title><rect x="712.4" y="181" width="0.9" height="15.0" fill="rgb(223,37,18)" rx="2" ry="2" />
<text  x="715.44" y="191.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId, (3 samples, 0.23%)</title><rect x="708.9" y="341" width="2.6" height="15.0" fill="rgb(225,228,43)" rx="2" ry="2" />
<text  x="711.86" y="351.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="734.8" y="229" width="0.9" height="15.0" fill="rgb(251,158,22)" rx="2" ry="2" />
<text  x="737.84" y="239.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (1 samples, 0.08%)</title><rect x="1098.6" y="245" width="0.9" height="15.0" fill="rgb(212,181,14)" rx="2" ry="2" />
<text  x="1101.61" y="255.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (43 samples, 3.26%)</title><rect x="670.3" y="277" width="38.6" height="15.0" fill="rgb(253,188,1)" rx="2" ry="2" />
<text  x="673.33" y="287.5" >__p..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.08%)</title><rect x="1143.4" y="69" width="0.9" height="15.0" fill="rgb(237,109,28)" rx="2" ry="2" />
<text  x="1146.41" y="79.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId, (2 samples, 0.15%)</title><rect x="719.6" y="277" width="1.8" height="15.0" fill="rgb(208,1,10)" rx="2" ry="2" />
<text  x="722.61" y="287.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.08%)</title><rect x="722.3" y="197" width="0.9" height="15.0" fill="rgb(234,78,32)" rx="2" ry="2" />
<text  x="725.30" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (6 samples, 0.46%)</title><rect x="1058.3" y="261" width="5.4" height="15.0" fill="rgb(211,62,14)" rx="2" ry="2" />
<text  x="1061.29" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (9 samples, 0.68%)</title><rect x="1039.5" y="245" width="8.0" height="15.0" fill="rgb(208,222,0)" rx="2" ry="2" />
<text  x="1042.48" y="255.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (260 samples, 19.74%)</title><rect x="782.3" y="277" width="233.0" height="15.0" fill="rgb(242,103,42)" rx="2" ry="2" />
<text  x="785.33" y="287.5" >__pthread_cond_wait_common</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1114.7" y="277" width="1.8" height="15.0" fill="rgb(234,156,20)" rx="2" ry="2" />
<text  x="1117.74" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="728.6" y="293" width="0.9" height="15.0" fill="rgb(221,198,42)" rx="2" ry="2" />
<text  x="731.57" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.15%)</title><rect x="733.9" y="245" width="1.8" height="15.0" fill="rgb(240,89,13)" rx="2" ry="2" />
<text  x="736.95" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (23 samples, 1.75%)</title><rect x="1018.9" y="293" width="20.6" height="15.0" fill="rgb(230,195,41)" rx="2" ry="2" />
<text  x="1021.87" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (1 samples, 0.08%)</title><rect x="668.5" y="261" width="0.9" height="15.0" fill="rgb(216,118,54)" rx="2" ry="2" />
<text  x="671.54" y="271.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.08%)</title><rect x="1101.3" y="245" width="0.9" height="15.0" fill="rgb(205,225,16)" rx="2" ry="2" />
<text  x="1104.30" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (2 samples, 0.15%)</title><rect x="1134.4" y="309" width="1.8" height="15.0" fill="rgb(243,17,27)" rx="2" ry="2" />
<text  x="1137.45" y="319.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fbaf4000020, (1 samples, 0.08%)</title><rect x="10.0" y="181" width="0.9" height="15.0" fill="rgb(209,179,54)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="733.1" y="245" width="0.8" height="15.0" fill="rgb(230,83,4)" rx="2" ry="2" />
<text  x="736.05" y="255.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.08%)</title><rect x="742.9" y="165" width="0.9" height="15.0" fill="rgb(241,152,0)" rx="2" ry="2" />
<text  x="745.91" y="175.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (1 samples, 0.08%)</title><rect x="667.6" y="149" width="0.9" height="15.0" fill="rgb(250,12,15)" rx="2" ry="2" />
<text  x="670.65" y="159.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (41 samples, 3.11%)</title><rect x="621.1" y="149" width="36.7" height="15.0" fill="rgb(213,60,19)" rx="2" ry="2" />
<text  x="624.06" y="159.5" >std..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="1181.0" y="181" width="0.9" height="15.0" fill="rgb(235,79,27)" rx="2" ry="2" />
<text  x="1184.04" y="191.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=70, (4 samples, 0.30%)</title><rect x="1110.3" y="213" width="3.5" height="15.0" fill="rgb(242,103,22)" rx="2" ry="2" />
<text  x="1113.26" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=16384) (1 samples, 0.08%)</title><rect x="739.3" y="229" width="0.9" height="15.0" fill="rgb(244,89,54)" rx="2" ry="2" />
<text  x="742.32" y="239.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.08%)</title><rect x="744.7" y="213" width="0.9" height="15.0" fill="rgb(252,25,31)" rx="2" ry="2" />
<text  x="747.70" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="1108.5" y="197" width="1.8" height="15.0" fill="rgb(251,223,20)" rx="2" ry="2" />
<text  x="1111.47" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="729.5" y="293" width="0.9" height="15.0" fill="rgb(222,29,48)" rx="2" ry="2" />
<text  x="732.47" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (9 samples, 0.68%)</title><rect x="1039.5" y="293" width="8.0" height="15.0" fill="rgb(251,205,31)" rx="2" ry="2" />
<text  x="1042.48" y="303.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;PageIdAndRank*&gt;, (2 samples, 0.15%)</title><rect x="1182.8" y="261" width="1.8" height="15.0" fill="rgb(249,12,10)" rx="2" ry="2" />
<text  x="1185.83" y="271.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (19 samples, 1.44%)</title><rect x="260.0" y="165" width="17.0" height="15.0" fill="rgb(205,194,25)" rx="2" ry="2" />
<text  x="262.98" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.15%)</title><rect x="1179.2" y="309" width="1.8" height="15.0" fill="rgb(244,53,45)" rx="2" ry="2" />
<text  x="1182.25" y="319.5" ></text>
</g>
<g >
<title>std::atomic&lt;double&gt;::load(__m=std::memory_order_seq_cst, (3 samples, 0.23%)</title><rect x="97.8" y="229" width="2.7" height="15.0" fill="rgb(207,52,1)" rx="2" ry="2" />
<text  x="100.81" y="239.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="1186.4" y="165" width="0.9" height="15.0" fill="rgb(245,184,30)" rx="2" ry="2" />
<text  x="1189.42" y="175.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=69, (2 samples, 0.15%)</title><rect x="1108.5" y="213" width="1.8" height="15.0" fill="rgb(226,145,9)" rx="2" ry="2" />
<text  x="1111.47" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (4 samples, 0.30%)</title><rect x="1130.9" y="293" width="3.5" height="15.0" fill="rgb(231,48,50)" rx="2" ry="2" />
<text  x="1133.87" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (10 samples, 0.76%)</title><rect x="1069.9" y="309" width="9.0" height="15.0" fill="rgb(253,8,20)" rx="2" ry="2" />
<text  x="1072.94" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="1121.9" y="277" width="2.7" height="15.0" fill="rgb(221,28,34)" rx="2" ry="2" />
<text  x="1124.91" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (55 samples, 4.18%)</title><rect x="608.5" y="165" width="49.3" height="15.0" fill="rgb(249,39,44)" rx="2" ry="2" />
<text  x="611.51" y="175.5" >std:..</text>
</g>
<g >
<title>PageId::PageId (2 samples, 0.15%)</title><rect x="715.1" y="261" width="1.8" height="15.0" fill="rgb(235,186,39)" rx="2" ry="2" />
<text  x="718.13" y="271.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,unsigned (1 samples, 0.08%)</title><rect x="668.5" y="341" width="0.9" height="15.0" fill="rgb(226,155,51)" rx="2" ry="2" />
<text  x="671.54" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="1130.9" y="149" width="0.9" height="15.0" fill="rgb(215,201,25)" rx="2" ry="2" />
<text  x="1133.87" y="159.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=68) (1 samples, 0.08%)</title><rect x="744.7" y="229" width="0.9" height="15.0" fill="rgb(226,30,50)" rx="2" ry="2" />
<text  x="747.70" y="239.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (14 samples, 1.06%)</title><rect x="139.0" y="117" width="12.6" height="15.0" fill="rgb(224,67,44)" rx="2" ry="2" />
<text  x="142.02" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.53%)</title><rect x="1143.4" y="181" width="6.3" height="15.0" fill="rgb(217,104,15)" rx="2" ry="2" />
<text  x="1146.41" y="191.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (1 samples, 0.08%)</title><rect x="742.0" y="293" width="0.9" height="15.0" fill="rgb(246,218,32)" rx="2" ry="2" />
<text  x="745.01" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (4 samples, 0.30%)</title><rect x="770.7" y="229" width="3.6" height="15.0" fill="rgb(246,15,45)" rx="2" ry="2" />
<text  x="773.68" y="239.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="742.9" y="133" width="0.9" height="15.0" fill="rgb(209,135,34)" rx="2" ry="2" />
<text  x="745.91" y="143.5" ></text>
</g>
<g >
<title>pageRankComputationWithNumNodes(num=500000, (451 samples, 34.24%)</title><rect x="780.5" y="373" width="404.1" height="15.0" fill="rgb(247,204,12)" rx="2" ry="2" />
<text  x="783.54" y="383.5" >pageRankComputationWithNumNodes(num=500000,</text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;std::pair&lt;PageId, (1 samples, 0.08%)</title><rect x="722.3" y="277" width="0.9" height="15.0" fill="rgb(215,115,42)" rx="2" ry="2" />
<text  x="725.30" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;MultiThreadedPageRankComputer::ThreadRAII&gt; (1 samples, 0.08%)</title><rect x="1015.3" y="261" width="0.9" height="15.0" fill="rgb(233,187,39)" rx="2" ry="2" />
<text  x="1018.28" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Page&gt; (2 samples, 0.15%)</title><rect x="725.0" y="309" width="1.8" height="15.0" fill="rgb(213,89,33)" rx="2" ry="2" />
<text  x="727.99" y="319.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::CyclicBarrier::wait (260 samples, 19.74%)</title><rect x="782.3" y="341" width="233.0" height="15.0" fill="rgb(254,211,13)" rx="2" ry="2" />
<text  x="785.33" y="351.5" >MultiThreadedPageRankComputer:..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55b9ef807408, (1 samples, 0.08%)</title><rect x="1186.4" y="181" width="0.9" height="15.0" fill="rgb(205,138,4)" rx="2" ry="2" />
<text  x="1189.42" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1099.5" y="213" width="0.9" height="15.0" fill="rgb(219,82,41)" rx="2" ry="2" />
<text  x="1102.51" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank,std::allocator&lt;PageIdAndRank&gt; (2 samples, 0.15%)</title><rect x="1182.8" y="325" width="1.8" height="15.0" fill="rgb(219,205,20)" rx="2" ry="2" />
<text  x="1185.83" y="335.5" ></text>
</g>
<g >
<title>Page::Page (1 samples, 0.08%)</title><rect x="742.9" y="341" width="0.9" height="15.0" fill="rgb(220,34,37)" rx="2" ry="2" />
<text  x="745.91" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.08%)</title><rect x="1176.6" y="277" width="0.9" height="15.0" fill="rgb(253,161,5)" rx="2" ry="2" />
<text  x="1179.56" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (1 samples, 0.08%)</title><rect x="742.9" y="277" width="0.9" height="15.0" fill="rgb(253,199,3)" rx="2" ry="2" />
<text  x="745.91" y="287.5" ></text>
</g>
<g >
<title>std::(__val=187066) (1 samples, 0.08%)</title><rect x="1096.8" y="325" width="0.9" height="15.0" fill="rgb(211,158,54)" rx="2" ry="2" />
<text  x="1099.82" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.08%)</title><rect x="1069.9" y="261" width="0.9" height="15.0" fill="rgb(232,164,1)" rx="2" ry="2" />
<text  x="1072.94" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (1 samples, 0.08%)</title><rect x="1184.6" y="181" width="0.9" height="15.0" fill="rgb(247,72,33)" rx="2" ry="2" />
<text  x="1187.62" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (2 samples, 0.15%)</title><rect x="715.1" y="293" width="1.8" height="15.0" fill="rgb(222,169,30)" rx="2" ry="2" />
<text  x="718.13" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (11 samples, 0.84%)</title><rect x="1047.5" y="293" width="9.9" height="15.0" fill="rgb(252,43,34)" rx="2" ry="2" />
<text  x="1050.54" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;Page*&gt; (1 samples, 0.08%)</title><rect x="1095.9" y="277" width="0.9" height="15.0" fill="rgb(241,25,15)" rx="2" ry="2" />
<text  x="1098.92" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (1 samples, 0.08%)</title><rect x="774.3" y="325" width="0.9" height="15.0" fill="rgb(249,158,23)" rx="2" ry="2" />
<text  x="777.27" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1184.6" y="149" width="0.9" height="15.0" fill="rgb(217,207,46)" rx="2" ry="2" />
<text  x="1187.62" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="731.3" y="213" width="0.9" height="15.0" fill="rgb(242,66,3)" rx="2" ry="2" />
<text  x="734.26" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="708.9" y="293" width="2.6" height="15.0" fill="rgb(215,44,26)" rx="2" ry="2" />
<text  x="711.86" y="303.5" ></text>
</g>
<g >
<title>pageRankComputationWithNumNodes(num=1000, (11 samples, 0.84%)</title><rect x="660.5" y="373" width="9.8" height="15.0" fill="rgb(235,171,43)" rx="2" ry="2" />
<text  x="663.48" y="383.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.08%)</title><rect x="741.1" y="325" width="0.9" height="15.0" fill="rgb(238,63,48)" rx="2" ry="2" />
<text  x="744.12" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="725.0" y="165" width="1.8" height="15.0" fill="rgb(222,118,43)" rx="2" ry="2" />
<text  x="727.99" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1121.9" y="245" width="1.8" height="15.0" fill="rgb(209,105,47)" rx="2" ry="2" />
<text  x="1124.91" y="255.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=68, (1 samples, 0.08%)</title><rect x="1107.6" y="213" width="0.9" height="15.0" fill="rgb(221,89,54)" rx="2" ry="2" />
<text  x="1110.57" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x55b9dcf26e20) (1 samples, 0.08%)</title><rect x="667.6" y="37" width="0.9" height="15.0" fill="rgb(238,227,24)" rx="2" ry="2" />
<text  x="670.65" y="47.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="743.8" y="213" width="0.9" height="15.0" fill="rgb(211,208,20)" rx="2" ry="2" />
<text  x="746.80" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;PageIdAndRank*&gt;,PageIdAndRank*&gt; (2 samples, 0.15%)</title><rect x="1182.8" y="245" width="1.8" height="15.0" fill="rgb(250,162,45)" rx="2" ry="2" />
<text  x="1185.83" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.08%)</title><rect x="716.0" y="149" width="0.9" height="15.0" fill="rgb(239,63,19)" rx="2" ry="2" />
<text  x="719.03" y="159.5" ></text>
</g>
<g >
<title>PageId::PageId (2 samples, 0.15%)</title><rect x="731.3" y="293" width="1.8" height="15.0" fill="rgb(217,119,33)" rx="2" ry="2" />
<text  x="734.26" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.08%)</title><rect x="661.4" y="325" width="0.9" height="15.0" fill="rgb(246,51,53)" rx="2" ry="2" />
<text  x="664.37" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (39 samples, 2.96%)</title><rect x="116.6" y="181" width="35.0" height="15.0" fill="rgb(242,222,30)" rx="2" ry="2" />
<text  x="119.62" y="191.5" >st..</text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.08%)</title><rect x="761.7" y="245" width="0.9" height="15.0" fill="rgb(239,129,7)" rx="2" ry="2" />
<text  x="764.72" y="255.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.08%)</title><rect x="781.4" y="261" width="0.9" height="15.0" fill="rgb(241,140,32)" rx="2" ry="2" />
<text  x="784.44" y="271.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=67, (1 samples, 0.08%)</title><rect x="743.8" y="197" width="0.9" height="15.0" fill="rgb(253,71,20)" rx="2" ry="2" />
<text  x="746.80" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7fffbcd4e8c0, (1 samples, 0.08%)</title><rect x="1054.7" y="261" width="0.9" height="15.0" fill="rgb(229,209,10)" rx="2" ry="2" />
<text  x="1057.71" y="271.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="762.6" y="245" width="0.9" height="15.0" fill="rgb(218,156,54)" rx="2" ry="2" />
<text  x="765.62" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;PageId, (1 samples, 0.08%)</title><rect x="1180.1" y="245" width="0.9" height="15.0" fill="rgb(209,171,14)" rx="2" ry="2" />
<text  x="1183.14" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="743.8" y="261" width="0.9" height="15.0" fill="rgb(251,50,32)" rx="2" ry="2" />
<text  x="746.80" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="1101.3" y="277" width="0.9" height="15.0" fill="rgb(225,181,9)" rx="2" ry="2" />
<text  x="1104.30" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (1 samples, 0.08%)</title><rect x="661.4" y="277" width="0.9" height="15.0" fill="rgb(253,10,45)" rx="2" ry="2" />
<text  x="664.37" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="721.4" y="181" width="0.9" height="15.0" fill="rgb(228,219,48)" rx="2" ry="2" />
<text  x="724.40" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.08%)</title><rect x="667.6" y="309" width="0.9" height="15.0" fill="rgb(220,130,21)" rx="2" ry="2" />
<text  x="670.65" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (9 samples, 0.68%)</title><rect x="1039.5" y="165" width="8.0" height="15.0" fill="rgb(233,220,33)" rx="2" ry="2" />
<text  x="1042.48" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.53%)</title><rect x="1107.6" y="229" width="6.2" height="15.0" fill="rgb(207,180,22)" rx="2" ry="2" />
<text  x="1110.57" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.30%)</title><rect x="662.3" y="325" width="3.6" height="15.0" fill="rgb(241,12,26)" rx="2" ry="2" />
<text  x="665.27" y="335.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void (723 samples, 54.90%)</title><rect x="12.7" y="309" width="647.8" height="15.0" fill="rgb(253,149,42)" rx="2" ry="2" />
<text  x="15.69" y="319.5" >std::thread::_Invoker&lt;std::tuple&lt;void</text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (1 samples, 0.08%)</title><rect x="742.9" y="293" width="0.9" height="15.0" fill="rgb(247,205,2)" rx="2" ry="2" />
<text  x="745.91" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="1100.4" y="261" width="0.9" height="15.0" fill="rgb(227,107,44)" rx="2" ry="2" />
<text  x="1103.40" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;PageId*, (1 samples, 0.08%)</title><rect x="740.2" y="293" width="0.9" height="15.0" fill="rgb(221,9,10)" rx="2" ry="2" />
<text  x="743.22" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (15 samples, 1.14%)</title><rect x="1138.9" y="309" width="13.5" height="15.0" fill="rgb(228,96,2)" rx="2" ry="2" />
<text  x="1141.93" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1121.9" y="261" width="1.8" height="15.0" fill="rgb(214,173,27)" rx="2" ry="2" />
<text  x="1124.91" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (4 samples, 0.30%)</title><rect x="1075.3" y="293" width="3.6" height="15.0" fill="rgb(220,117,5)" rx="2" ry="2" />
<text  x="1078.32" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1181.9" y="197" width="0.9" height="15.0" fill="rgb(246,131,20)" rx="2" ry="2" />
<text  x="1184.94" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.15%)</title><rect x="1177.5" y="293" width="1.7" height="15.0" fill="rgb(243,65,11)" rx="2" ry="2" />
<text  x="1180.46" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::deallocate(this=&lt;synthetic (23 samples, 1.75%)</title><rect x="1018.9" y="245" width="20.6" height="15.0" fill="rgb(254,113,12)" rx="2" ry="2" />
<text  x="1021.87" y="255.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="1113.8" y="245" width="0.9" height="15.0" fill="rgb(210,164,49)" rx="2" ry="2" />
<text  x="1116.84" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1018.0" y="293" width="0.9" height="15.0" fill="rgb(227,159,31)" rx="2" ry="2" />
<text  x="1020.97" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;PageId, (1 samples, 0.08%)</title><rect x="721.4" y="261" width="0.9" height="15.0" fill="rgb(230,30,1)" rx="2" ry="2" />
<text  x="724.40" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;PageId (2 samples, 0.15%)</title><rect x="725.0" y="245" width="1.8" height="15.0" fill="rgb(235,47,1)" rx="2" ry="2" />
<text  x="727.99" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="743.8" y="229" width="0.9" height="15.0" fill="rgb(230,214,2)" rx="2" ry="2" />
<text  x="746.80" y="239.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=70, (2 samples, 0.15%)</title><rect x="1121.9" y="197" width="1.8" height="15.0" fill="rgb(211,130,17)" rx="2" ry="2" />
<text  x="1124.91" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (5 samples, 0.38%)</title><rect x="112.1" y="165" width="4.5" height="15.0" fill="rgb(210,50,19)" rx="2" ry="2" />
<text  x="115.14" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (165 samples, 12.53%)</title><rect x="112.1" y="213" width="147.9" height="15.0" fill="rgb(227,134,26)" rx="2" ry="2" />
<text  x="115.14" y="223.5" >std::_Hashtable&lt;Pa..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; (5 samples, 0.38%)</title><rect x="1124.6" y="261" width="4.5" height="15.0" fill="rgb(214,83,33)" rx="2" ry="2" />
<text  x="1127.59" y="271.5" ></text>
</g>
<g >
<title>operatornew(unsigned (4 samples, 0.30%)</title><rect x="1092.3" y="213" width="3.6" height="15.0" fill="rgb(216,59,49)" rx="2" ry="2" />
<text  x="1095.34" y="223.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="1179.2" y="229" width="0.9" height="15.0" fill="rgb(249,151,39)" rx="2" ry="2" />
<text  x="1182.25" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (117 samples, 8.88%)</title><rect x="503.7" y="197" width="104.8" height="15.0" fill="rgb(210,60,54)" rx="2" ry="2" />
<text  x="506.68" y="207.5" >std::__detai..</text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;PageId, (3 samples, 0.23%)</title><rect x="716.9" y="277" width="2.7" height="15.0" fill="rgb(222,191,27)" rx="2" ry="2" />
<text  x="719.92" y="287.5" ></text>
</g>
<g >
<title>NetworkWithoutManyEdgesGenerator::generateNetworkOfSize (4 samples, 0.30%)</title><rect x="1095.9" y="357" width="3.6" height="15.0" fill="rgb(245,167,29)" rx="2" ry="2" />
<text  x="1098.92" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="1096.8" y="309" width="0.9" height="15.0" fill="rgb(230,38,3)" rx="2" ry="2" />
<text  x="1099.82" y="319.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;PageId, (1 samples, 0.08%)</title><rect x="721.4" y="293" width="0.9" height="15.0" fill="rgb(229,215,22)" rx="2" ry="2" />
<text  x="724.40" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (4 samples, 0.30%)</title><rect x="1092.3" y="229" width="3.6" height="15.0" fill="rgb(219,7,26)" rx="2" ry="2" />
<text  x="1095.34" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=68) (1 samples, 0.08%)</title><rect x="742.9" y="149" width="0.9" height="15.0" fill="rgb(229,15,4)" rx="2" ry="2" />
<text  x="745.91" y="159.5" ></text>
</g>
<g >
<title>main() (591 samples, 44.87%)</title><rect x="660.5" y="389" width="529.5" height="15.0" fill="rgb(238,101,13)" rx="2" ry="2" />
<text  x="663.48" y="399.5" >main()</text>
</g>
<g >
<title>_IO_vfprintf_internal(s=s@entry=0x7fffbcd4e8b0, (1 samples, 0.08%)</title><rect x="729.5" y="261" width="0.9" height="15.0" fill="rgb(205,79,12)" rx="2" ry="2" />
<text  x="732.47" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (32 samples, 2.43%)</title><rect x="1018.9" y="309" width="28.6" height="15.0" fill="rgb(249,65,24)" rx="2" ry="2" />
<text  x="1021.87" y="319.5" >st..</text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="732.2" y="197" width="0.9" height="15.0" fill="rgb(217,23,5)" rx="2" ry="2" />
<text  x="735.16" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (19 samples, 1.44%)</title><rect x="260.0" y="213" width="17.0" height="15.0" fill="rgb(245,87,0)" rx="2" ry="2" />
<text  x="262.98" y="223.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (2 samples, 0.15%)</title><rect x="765.3" y="197" width="1.8" height="15.0" fill="rgb(233,48,25)" rx="2" ry="2" />
<text  x="768.31" y="207.5" ></text>
</g>
<g >
<title>Network::addPage (2 samples, 0.15%)</title><rect x="725.0" y="341" width="1.8" height="15.0" fill="rgb(240,112,16)" rx="2" ry="2" />
<text  x="727.99" y="351.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;PageId*&gt;, (1 samples, 0.08%)</title><rect x="669.4" y="261" width="0.9" height="15.0" fill="rgb(207,61,52)" rx="2" ry="2" />
<text  x="672.44" y="271.5" ></text>
</g>
<g >
<title>__GI__IO_default_xsputn(f=&lt;optimized (1 samples, 0.08%)</title><rect x="1096.8" y="261" width="0.9" height="15.0" fill="rgb(239,47,28)" rx="2" ry="2" />
<text  x="1099.82" y="271.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.08%)</title><rect x="745.6" y="213" width="0.9" height="15.0" fill="rgb(254,9,9)" rx="2" ry="2" />
<text  x="748.60" y="223.5" ></text>
</g>
<g >
<title>PageId::PageId (4 samples, 0.30%)</title><rect x="662.3" y="341" width="3.6" height="15.0" fill="rgb(214,125,39)" rx="2" ry="2" />
<text  x="665.27" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (4 samples, 0.30%)</title><rect x="112.1" y="149" width="3.6" height="15.0" fill="rgb(219,36,19)" rx="2" ry="2" />
<text  x="115.14" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (3 samples, 0.23%)</title><rect x="767.1" y="293" width="2.7" height="15.0" fill="rgb(231,118,18)" rx="2" ry="2" />
<text  x="770.10" y="303.5" ></text>
</g>
<g >
<title>Page::generateId (1 samples, 0.08%)</title><rect x="1100.4" y="341" width="0.9" height="15.0" fill="rgb(235,81,22)" rx="2" ry="2" />
<text  x="1103.40" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (1 samples, 0.08%)</title><rect x="779.6" y="277" width="0.9" height="15.0" fill="rgb(250,28,7)" rx="2" ry="2" />
<text  x="782.64" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="1143.4" y="133" width="2.7" height="15.0" fill="rgb(233,115,51)" rx="2" ry="2" />
<text  x="1146.41" y="143.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;PageIdAndRank*, (2 samples, 0.15%)</title><rect x="1182.8" y="293" width="1.8" height="15.0" fill="rgb(210,208,20)" rx="2" ry="2" />
<text  x="1185.83" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId, (1 samples, 0.08%)</title><rect x="1180.1" y="261" width="0.9" height="15.0" fill="rgb(243,156,16)" rx="2" ry="2" />
<text  x="1183.14" y="271.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.08%)</title><rect x="742.0" y="245" width="0.9" height="15.0" fill="rgb(249,167,18)" rx="2" ry="2" />
<text  x="745.01" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageIdAndRank*&gt; (1 samples, 0.08%)</title><rect x="1181.9" y="293" width="0.9" height="15.0" fill="rgb(219,117,19)" rx="2" ry="2" />
<text  x="1184.94" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.08%)</title><rect x="775.2" y="277" width="0.9" height="15.0" fill="rgb(228,167,41)" rx="2" ry="2" />
<text  x="778.16" y="287.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=66, (1 samples, 0.08%)</title><rect x="662.3" y="213" width="0.9" height="15.0" fill="rgb(236,224,28)" rx="2" ry="2" />
<text  x="665.27" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="711.5" y="213" width="2.7" height="15.0" fill="rgb(228,16,17)" rx="2" ry="2" />
<text  x="714.55" y="223.5" ></text>
</g>
<g >
<title>std::(__val=617) (1 samples, 0.08%)</title><rect x="728.6" y="309" width="0.9" height="15.0" fill="rgb(240,7,8)" rx="2" ry="2" />
<text  x="731.57" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.15%)</title><rect x="733.9" y="261" width="1.8" height="15.0" fill="rgb(237,116,54)" rx="2" ry="2" />
<text  x="736.95" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x7fffbcd4e820, (4 samples, 0.30%)</title><rect x="1088.8" y="277" width="3.5" height="15.0" fill="rgb(254,21,41)" rx="2" ry="2" />
<text  x="1091.75" y="287.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=67, (3 samples, 0.23%)</title><rect x="663.2" y="213" width="2.7" height="15.0" fill="rgb(246,34,50)" rx="2" ry="2" />
<text  x="666.17" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::allocate(this=&lt;optimized (1 samples, 0.08%)</title><rect x="739.3" y="261" width="0.9" height="15.0" fill="rgb(219,117,24)" rx="2" ry="2" />
<text  x="742.32" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (4 samples, 0.30%)</title><rect x="1047.5" y="277" width="3.6" height="15.0" fill="rgb(236,27,46)" rx="2" ry="2" />
<text  x="1050.54" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.08%)</title><rect x="763.5" y="277" width="0.9" height="15.0" fill="rgb(246,217,52)" rx="2" ry="2" />
<text  x="766.52" y="287.5" ></text>
</g>
<g >
<title>PageId::PageId (2 samples, 0.15%)</title><rect x="719.6" y="261" width="1.8" height="15.0" fill="rgb(234,25,26)" rx="2" ry="2" />
<text  x="722.61" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.15%)</title><rect x="1129.1" y="293" width="1.8" height="15.0" fill="rgb(234,152,25)" rx="2" ry="2" />
<text  x="1132.07" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="779.6" y="229" width="0.9" height="15.0" fill="rgb(236,125,53)" rx="2" ry="2" />
<text  x="782.64" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (184 samples, 13.97%)</title><rect x="112.1" y="229" width="164.9" height="15.0" fill="rgb(239,150,38)" rx="2" ry="2" />
<text  x="115.14" y="239.5" >std::__detail::_Map_b..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (17 samples, 1.29%)</title><rect x="746.5" y="325" width="15.2" height="15.0" fill="rgb(216,129,15)" rx="2" ry="2" />
<text  x="749.49" y="335.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal(s=s@entry=0x7fffbcd4e8b0, (1 samples, 0.08%)</title><rect x="726.8" y="261" width="0.9" height="15.0" fill="rgb(221,123,49)" rx="2" ry="2" />
<text  x="729.78" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="731.3" y="277" width="1.8" height="15.0" fill="rgb(252,21,18)" rx="2" ry="2" />
<text  x="734.26" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.08%)</title><rect x="667.6" y="261" width="0.9" height="15.0" fill="rgb(212,83,49)" rx="2" ry="2" />
<text  x="670.65" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;PageIdAndRank*&gt;, (2 samples, 0.15%)</title><rect x="1182.8" y="277" width="1.8" height="15.0" fill="rgb(236,6,3)" rx="2" ry="2" />
<text  x="1185.83" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7fffbcd4e440, (1 samples, 0.08%)</title><rect x="769.8" y="277" width="0.9" height="15.0" fill="rgb(216,124,15)" rx="2" ry="2" />
<text  x="772.79" y="287.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7fffbcd4ea20 (1 samples, 0.08%)</title><rect x="730.4" y="277" width="0.9" height="15.0" fill="rgb(240,74,45)" rx="2" ry="2" />
<text  x="733.36" y="287.5" ></text>
</g>
<g >
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;)() (69 samples, 5.24%)</title><rect x="36.0" y="213" width="61.8" height="15.0" fill="rgb(219,134,14)" rx="2" ry="2" />
<text  x="38.98" y="223.5" >std::c..</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (4 samples, 0.30%)</title><rect x="1130.9" y="277" width="3.5" height="15.0" fill="rgb(222,191,28)" rx="2" ry="2" />
<text  x="1133.87" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="1121.9" y="293" width="2.7" height="15.0" fill="rgb(246,70,27)" rx="2" ry="2" />
<text  x="1124.91" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (1 samples, 0.08%)</title><rect x="660.5" y="293" width="0.9" height="15.0" fill="rgb(240,86,50)" rx="2" ry="2" />
<text  x="663.48" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=66) (1 samples, 0.08%)</title><rect x="735.7" y="181" width="0.9" height="15.0" fill="rgb(245,146,4)" rx="2" ry="2" />
<text  x="738.74" y="191.5" ></text>
</g>
<g >
<title>Page::Page (1 samples, 0.08%)</title><rect x="1099.5" y="341" width="0.9" height="15.0" fill="rgb(222,196,50)" rx="2" ry="2" />
<text  x="1102.51" y="351.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7fffbcd4e780 (1 samples, 0.08%)</title><rect x="1097.7" y="293" width="0.9" height="15.0" fill="rgb(216,50,2)" rx="2" ry="2" />
<text  x="1100.71" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.08%)</title><rect x="742.9" y="325" width="0.9" height="15.0" fill="rgb(226,72,49)" rx="2" ry="2" />
<text  x="745.91" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (4 samples, 0.30%)</title><rect x="1130.9" y="245" width="3.5" height="15.0" fill="rgb(254,131,50)" rx="2" ry="2" />
<text  x="1133.87" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (23 samples, 1.75%)</title><rect x="1018.9" y="277" width="20.6" height="15.0" fill="rgb(223,167,15)" rx="2" ry="2" />
<text  x="1021.87" y="287.5" ></text>
</g>
<g >
<title>PageIdAndRank::PageIdAndRank (2 samples, 0.15%)</title><rect x="1114.7" y="341" width="1.8" height="15.0" fill="rgb(210,172,0)" rx="2" ry="2" />
<text  x="1117.74" y="351.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7fffbcd4ea20 (1 samples, 0.08%)</title><rect x="728.6" y="277" width="0.9" height="15.0" fill="rgb(220,90,40)" rx="2" ry="2" />
<text  x="731.57" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="11.8" y="245" width="0.9" height="15.0" fill="rgb(205,130,7)" rx="2" ry="2" />
<text  x="14.79" y="255.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;std::pair&lt;PageId, (1 samples, 0.08%)</title><rect x="722.3" y="261" width="0.9" height="15.0" fill="rgb(215,1,48)" rx="2" ry="2" />
<text  x="725.30" y="271.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.08%)</title><rect x="746.5" y="213" width="0.9" height="15.0" fill="rgb(226,22,13)" rx="2" ry="2" />
<text  x="749.49" y="223.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (1 samples, 0.08%)</title><rect x="1087.9" y="277" width="0.9" height="15.0" fill="rgb(233,171,48)" rx="2" ry="2" />
<text  x="1090.86" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x55b9e79f0688, (1 samples, 0.08%)</title><rect x="1185.5" y="181" width="0.9" height="15.0" fill="rgb(221,159,6)" rx="2" ry="2" />
<text  x="1188.52" y="191.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (1 samples, 0.08%)</title><rect x="776.1" y="245" width="0.9" height="15.0" fill="rgb(240,219,23)" rx="2" ry="2" />
<text  x="779.06" y="255.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="773.4" y="133" width="0.9" height="15.0" fill="rgb(223,63,29)" rx="2" ry="2" />
<text  x="776.37" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.53%)</title><rect x="1143.4" y="165" width="6.3" height="15.0" fill="rgb(239,51,50)" rx="2" ry="2" />
<text  x="1146.41" y="175.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="1144.3" y="69" width="1.8" height="15.0" fill="rgb(236,30,6)" rx="2" ry="2" />
<text  x="1147.31" y="79.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fbb0beb0c40 (5 samples, 0.38%)</title><rect x="1124.6" y="229" width="4.5" height="15.0" fill="rgb(241,205,16)" rx="2" ry="2" />
<text  x="1127.59" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;PageId*, (1 samples, 0.08%)</title><rect x="669.4" y="293" width="0.9" height="15.0" fill="rgb(246,0,6)" rx="2" ry="2" />
<text  x="672.44" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="715.1" y="229" width="1.8" height="15.0" fill="rgb(224,85,20)" rx="2" ry="2" />
<text  x="718.13" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;PageId (2 samples, 0.15%)</title><rect x="715.1" y="325" width="1.8" height="15.0" fill="rgb(227,6,51)" rx="2" ry="2" />
<text  x="718.13" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x7fffbcd4ea20, (1 samples, 0.08%)</title><rect x="714.2" y="277" width="0.9" height="15.0" fill="rgb(230,112,42)" rx="2" ry="2" />
<text  x="717.24" y="287.5" ></text>
</g>
<g >
<title>std::(__val=1178) (1 samples, 0.08%)</title><rect x="727.7" y="309" width="0.9" height="15.0" fill="rgb(254,12,15)" rx="2" ry="2" />
<text  x="730.68" y="319.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7fffbcd4ea20 (1 samples, 0.08%)</title><rect x="729.5" y="277" width="0.9" height="15.0" fill="rgb(206,205,51)" rx="2" ry="2" />
<text  x="732.47" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (3 samples, 0.23%)</title><rect x="770.7" y="197" width="2.7" height="15.0" fill="rgb(235,210,10)" rx="2" ry="2" />
<text  x="773.68" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (5 samples, 0.38%)</title><rect x="1124.6" y="293" width="4.5" height="15.0" fill="rgb(250,55,5)" rx="2" ry="2" />
<text  x="1127.59" y="303.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.08%)</title><rect x="721.4" y="213" width="0.9" height="15.0" fill="rgb(227,64,47)" rx="2" ry="2" />
<text  x="724.40" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;PageId,PageId&gt;, (2 samples, 0.15%)</title><rect x="721.4" y="325" width="1.8" height="15.0" fill="rgb(211,105,40)" rx="2" ry="2" />
<text  x="724.40" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1099.5" y="229" width="0.9" height="15.0" fill="rgb(242,81,17)" rx="2" ry="2" />
<text  x="1102.51" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55b9f547f728, (1 samples, 0.08%)</title><rect x="1132.7" y="133" width="0.9" height="15.0" fill="rgb(227,170,24)" rx="2" ry="2" />
<text  x="1135.66" y="143.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (3 samples, 0.23%)</title><rect x="711.5" y="277" width="2.7" height="15.0" fill="rgb(223,209,33)" rx="2" ry="2" />
<text  x="714.55" y="287.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7fffbcd4e780 (1 samples, 0.08%)</title><rect x="1098.6" y="293" width="0.9" height="15.0" fill="rgb(242,136,41)" rx="2" ry="2" />
<text  x="1101.61" y="303.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal(sf=sf@entry=0x7fffbcd4e8b0, (1 samples, 0.08%)</title><rect x="730.4" y="261" width="0.9" height="15.0" fill="rgb(212,51,50)" rx="2" ry="2" />
<text  x="733.36" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.08%)</title><rect x="667.6" y="277" width="0.9" height="15.0" fill="rgb(220,159,19)" rx="2" ry="2" />
<text  x="670.65" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="770.7" y="85" width="2.7" height="15.0" fill="rgb(250,38,30)" rx="2" ry="2" />
<text  x="773.68" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (3 samples, 0.23%)</title><rect x="1184.6" y="245" width="2.7" height="15.0" fill="rgb(246,59,43)" rx="2" ry="2" />
<text  x="1187.62" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (425 samples, 32.27%)</title><rect x="277.0" y="229" width="380.8" height="15.0" fill="rgb(214,1,30)" rx="2" ry="2" />
<text  x="280.00" y="239.5" >std::__detail::_Map_base&lt;PageId,</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.53%)</title><rect x="755.5" y="197" width="6.2" height="15.0" fill="rgb(241,212,0)" rx="2" ry="2" />
<text  x="758.45" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageIdAndRank, (3 samples, 0.23%)</title><rect x="1187.3" y="325" width="2.7" height="15.0" fill="rgb(251,16,33)" rx="2" ry="2" />
<text  x="1190.31" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="743.8" y="245" width="0.9" height="15.0" fill="rgb(249,104,16)" rx="2" ry="2" />
<text  x="746.80" y="255.5" ></text>
</g>
<g >
<title>SimpleIdGenerator::generateId (5 samples, 0.38%)</title><rect x="731.3" y="309" width="4.4" height="15.0" fill="rgb(236,74,22)" rx="2" ry="2" />
<text  x="734.26" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.15%)</title><rect x="715.1" y="197" width="1.8" height="15.0" fill="rgb(208,8,7)" rx="2" ry="2" />
<text  x="718.13" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.15%)</title><rect x="1179.2" y="325" width="1.8" height="15.0" fill="rgb(252,57,28)" rx="2" ry="2" />
<text  x="1182.25" y="335.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal(s=s@entry=0x7fffbcd4e8b0, (1 samples, 0.08%)</title><rect x="727.7" y="261" width="0.9" height="15.0" fill="rgb(245,202,8)" rx="2" ry="2" />
<text  x="730.68" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (3 samples, 0.23%)</title><rect x="770.7" y="165" width="2.7" height="15.0" fill="rgb(242,11,18)" rx="2" ry="2" />
<text  x="773.68" y="175.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.08%)</title><rect x="1100.4" y="229" width="0.9" height="15.0" fill="rgb(252,70,19)" rx="2" ry="2" />
<text  x="1103.40" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (25 samples, 1.90%)</title><rect x="1047.5" y="325" width="22.4" height="15.0" fill="rgb(253,105,38)" rx="2" ry="2" />
<text  x="1050.54" y="335.5" >s..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (14 samples, 1.06%)</title><rect x="1057.4" y="309" width="12.5" height="15.0" fill="rgb(232,175,54)" rx="2" ry="2" />
<text  x="1060.40" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId, (1 samples, 0.08%)</title><rect x="722.3" y="213" width="0.9" height="15.0" fill="rgb(214,110,10)" rx="2" ry="2" />
<text  x="725.30" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.15%)</title><rect x="1114.7" y="261" width="1.8" height="15.0" fill="rgb(241,136,35)" rx="2" ry="2" />
<text  x="1117.74" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fbaf54b3310, (1 samples, 0.08%)</title><rect x="717.8" y="165" width="0.9" height="15.0" fill="rgb(228,43,11)" rx="2" ry="2" />
<text  x="720.82" y="175.5" ></text>
</g>
<g >
<title>std::atomic&lt;double&gt;::compare_exchange_weak(__f=std::memory_order_seq_cst, (12 samples, 0.91%)</title><rect x="100.5" y="197" width="10.7" height="15.0" fill="rgb(245,32,10)" rx="2" ry="2" />
<text  x="103.49" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1114.7" y="309" width="1.8" height="15.0" fill="rgb(216,214,30)" rx="2" ry="2" />
<text  x="1117.74" y="319.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (38 samples, 2.89%)</title><rect x="349.6" y="149" width="34.0" height="15.0" fill="rgb(210,10,17)" rx="2" ry="2" />
<text  x="352.57" y="159.5" >st..</text>
</g>
<g >
<title>std::unordered_map&lt;PageId,std::atomic&lt;double&gt;, (427 samples, 32.42%)</title><rect x="277.0" y="245" width="382.6" height="15.0" fill="rgb(236,153,4)" rx="2" ry="2" />
<text  x="280.00" y="255.5" >std::unordered_map&lt;PageId,std::atomic&lt;double&gt;,</text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="1098.6" y="309" width="0.9" height="15.0" fill="rgb(207,212,22)" rx="2" ry="2" />
<text  x="1101.61" y="319.5" ></text>
</g>
<g >
<title>__pthread_cond_wait (260 samples, 19.74%)</title><rect x="782.3" y="293" width="233.0" height="15.0" fill="rgb(252,23,38)" rx="2" ry="2" />
<text  x="785.33" y="303.5" >__pthread_cond_wait</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.08%)</title><rect x="774.3" y="309" width="0.9" height="15.0" fill="rgb(244,206,8)" rx="2" ry="2" />
<text  x="777.27" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="742.9" y="181" width="0.9" height="15.0" fill="rgb(212,97,5)" rx="2" ry="2" />
<text  x="745.91" y="191.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (9 samples, 0.68%)</title><rect x="1039.5" y="229" width="8.0" height="15.0" fill="rgb(218,203,11)" rx="2" ry="2" />
<text  x="1042.48" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55b9f074a820, (1 samples, 0.08%)</title><rect x="771.6" y="53" width="0.9" height="15.0" fill="rgb(236,220,48)" rx="2" ry="2" />
<text  x="774.58" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId,std::pair&lt;PageId (2 samples, 0.15%)</title><rect x="1177.5" y="325" width="1.7" height="15.0" fill="rgb(234,72,8)" rx="2" ry="2" />
<text  x="1180.46" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55b9f02c9048, (1 samples, 0.08%)</title><rect x="1046.6" y="133" width="0.9" height="15.0" fill="rgb(232,208,12)" rx="2" ry="2" />
<text  x="1049.64" y="143.5" ></text>
</g>
<g >
<title>PageId::~PageId (2 samples, 0.15%)</title><rect x="761.7" y="341" width="1.8" height="15.0" fill="rgb(241,68,47)" rx="2" ry="2" />
<text  x="764.72" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.08%)</title><rect x="742.0" y="181" width="0.9" height="15.0" fill="rgb(225,177,5)" rx="2" ry="2" />
<text  x="745.01" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="669.4" y="181" width="0.9" height="15.0" fill="rgb(235,42,15)" rx="2" ry="2" />
<text  x="672.44" y="191.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::ThreadRAII::~ThreadRAII(this=0x55b9dc193020, (1 samples, 0.08%)</title><rect x="1015.3" y="245" width="0.9" height="15.0" fill="rgb(218,165,34)" rx="2" ry="2" />
<text  x="1018.28" y="255.5" ></text>
</g>
<g >
<title>std::(__val=1021) (1 samples, 0.08%)</title><rect x="726.8" y="309" width="0.9" height="15.0" fill="rgb(253,133,40)" rx="2" ry="2" />
<text  x="729.78" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (2 samples, 0.15%)</title><rect x="739.3" y="309" width="1.8" height="15.0" fill="rgb(216,22,0)" rx="2" ry="2" />
<text  x="742.32" y="319.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal (1 samples, 0.08%)</title><rect x="1098.6" y="277" width="0.9" height="15.0" fill="rgb(226,103,52)" rx="2" ry="2" />
<text  x="1101.61" y="287.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="1185.5" y="149" width="0.9" height="15.0" fill="rgb(251,68,17)" rx="2" ry="2" />
<text  x="1188.52" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.53%)</title><rect x="1107.6" y="277" width="6.2" height="15.0" fill="rgb(229,181,40)" rx="2" ry="2" />
<text  x="1110.57" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1087.9" y="245" width="0.9" height="15.0" fill="rgb(237,140,31)" rx="2" ry="2" />
<text  x="1090.86" y="255.5" ></text>
</g>
<g >
<title>PageId::operator== (2 samples, 0.15%)</title><rect x="765.3" y="229" width="1.8" height="15.0" fill="rgb(214,124,48)" rx="2" ry="2" />
<text  x="768.31" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;Page,std::allocator&lt;Page&gt; (1 samples, 0.08%)</title><rect x="1095.9" y="325" width="0.9" height="15.0" fill="rgb(213,143,52)" rx="2" ry="2" />
<text  x="1098.92" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (6 samples, 0.46%)</title><rect x="711.5" y="341" width="5.4" height="15.0" fill="rgb(249,56,39)" rx="2" ry="2" />
<text  x="714.55" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (1 samples, 0.08%)</title><rect x="667.6" y="197" width="0.9" height="15.0" fill="rgb(239,25,31)" rx="2" ry="2" />
<text  x="670.65" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (5 samples, 0.38%)</title><rect x="1124.6" y="277" width="4.5" height="15.0" fill="rgb(215,210,18)" rx="2" ry="2" />
<text  x="1127.59" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (1 samples, 0.08%)</title><rect x="1095.9" y="165" width="0.9" height="15.0" fill="rgb(227,160,32)" rx="2" ry="2" />
<text  x="1098.92" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (13 samples, 0.99%)</title><rect x="1161.3" y="293" width="11.7" height="15.0" fill="rgb(221,78,33)" rx="2" ry="2" />
<text  x="1164.33" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (2 samples, 0.15%)</title><rect x="1177.5" y="309" width="1.7" height="15.0" fill="rgb(206,63,7)" rx="2" ry="2" />
<text  x="1180.46" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (1 samples, 0.08%)</title><rect x="667.6" y="229" width="0.9" height="15.0" fill="rgb(215,204,24)" rx="2" ry="2" />
<text  x="670.65" y="239.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.08%)</title><rect x="1018.0" y="325" width="0.9" height="15.0" fill="rgb(240,155,31)" rx="2" ry="2" />
<text  x="1020.97" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="708.9" y="309" width="2.6" height="15.0" fill="rgb(209,110,37)" rx="2" ry="2" />
<text  x="711.86" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (15 samples, 1.14%)</title><rect x="1138.9" y="293" width="13.5" height="15.0" fill="rgb(254,54,35)" rx="2" ry="2" />
<text  x="1141.93" y="303.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::computeForNetwork (59 samples, 4.48%)</title><rect x="670.3" y="357" width="52.9" height="15.0" fill="rgb(240,157,15)" rx="2" ry="2" />
<text  x="673.33" y="367.5" >Multi..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;PageId, (7 samples, 0.53%)</title><rect x="716.9" y="341" width="6.3" height="15.0" fill="rgb(226,24,44)" rx="2" ry="2" />
<text  x="719.92" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=&lt;optimized (1 samples, 0.08%)</title><rect x="607.6" y="181" width="0.9" height="15.0" fill="rgb(224,156,36)" rx="2" ry="2" />
<text  x="610.62" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.08%)</title><rect x="763.5" y="261" width="0.9" height="15.0" fill="rgb(244,134,1)" rx="2" ry="2" />
<text  x="766.52" y="271.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::gen_id_thread(frst_free=..., (3 samples, 0.23%)</title><rect x="10.0" y="341" width="2.7" height="15.0" fill="rgb(215,91,8)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.08%)</title><rect x="1084.3" y="245" width="0.9" height="15.0" fill="rgb(218,53,51)" rx="2" ry="2" />
<text  x="1087.27" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="661.4" y="229" width="0.9" height="15.0" fill="rgb(230,26,22)" rx="2" ry="2" />
<text  x="664.37" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="667.6" y="117" width="0.9" height="15.0" fill="rgb(229,85,40)" rx="2" ry="2" />
<text  x="670.65" y="127.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (2 samples, 0.15%)</title><rect x="765.3" y="213" width="1.8" height="15.0" fill="rgb(236,165,3)" rx="2" ry="2" />
<text  x="768.31" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.30%)</title><rect x="662.3" y="229" width="3.6" height="15.0" fill="rgb(242,39,38)" rx="2" ry="2" />
<text  x="665.27" y="239.5" ></text>
</g>
<g >
<title>PageId::PageId (17 samples, 1.29%)</title><rect x="746.5" y="341" width="15.2" height="15.0" fill="rgb(230,105,46)" rx="2" ry="2" />
<text  x="749.49" y="351.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (2 samples, 0.15%)</title><rect x="715.1" y="309" width="1.8" height="15.0" fill="rgb(240,202,15)" rx="2" ry="2" />
<text  x="718.13" y="319.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (1 samples, 0.08%)</title><rect x="668.5" y="213" width="0.9" height="15.0" fill="rgb(250,5,48)" rx="2" ry="2" />
<text  x="671.54" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="711.5" y="229" width="2.7" height="15.0" fill="rgb(206,23,30)" rx="2" ry="2" />
<text  x="714.55" y="239.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void,void (723 samples, 54.90%)</title><rect x="12.7" y="277" width="647.8" height="15.0" fill="rgb(248,42,30)" rx="2" ry="2" />
<text  x="15.69" y="287.5" >std::__invoke_impl&lt;void,void</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=70, (2 samples, 0.15%)</title><rect x="1144.3" y="85" width="1.8" height="15.0" fill="rgb(210,41,40)" rx="2" ry="2" />
<text  x="1147.31" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.08%)</title><rect x="659.6" y="245" width="0.9" height="15.0" fill="rgb(237,211,47)" rx="2" ry="2" />
<text  x="662.58" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.53%)</title><rect x="1107.6" y="309" width="6.2" height="15.0" fill="rgb(253,182,22)" rx="2" ry="2" />
<text  x="1110.57" y="319.5" ></text>
</g>
<g >
<title>Page::getId (2 samples, 0.15%)</title><rect x="1016.2" y="341" width="1.8" height="15.0" fill="rgb(219,89,48)" rx="2" ry="2" />
<text  x="1019.18" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=69) (2 samples, 0.15%)</title><rect x="715.1" y="165" width="1.8" height="15.0" fill="rgb(252,38,31)" rx="2" ry="2" />
<text  x="718.13" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7fffbcd4e440, (9 samples, 0.68%)</title><rect x="1164.9" y="277" width="8.1" height="15.0" fill="rgb(243,72,21)" rx="2" ry="2" />
<text  x="1167.91" y="287.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void (723 samples, 54.90%)</title><rect x="12.7" y="325" width="647.8" height="15.0" fill="rgb(249,226,27)" rx="2" ry="2" />
<text  x="15.69" y="335.5" >std::thread::_Invoker&lt;std::tuple&lt;void</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="667.6" y="101" width="0.9" height="15.0" fill="rgb(241,2,51)" rx="2" ry="2" />
<text  x="670.65" y="111.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.08%)</title><rect x="725.9" y="69" width="0.9" height="15.0" fill="rgb(236,80,45)" rx="2" ry="2" />
<text  x="728.88" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.53%)</title><rect x="1107.6" y="293" width="6.2" height="15.0" fill="rgb(251,4,41)" rx="2" ry="2" />
<text  x="1110.57" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.15%)</title><rect x="10.0" y="245" width="1.8" height="15.0" fill="rgb(247,10,15)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>PageId::PageId (12 samples, 0.91%)</title><rect x="1138.9" y="213" width="10.8" height="15.0" fill="rgb(244,88,52)" rx="2" ry="2" />
<text  x="1141.93" y="223.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (69 samples, 5.24%)</title><rect x="36.0" y="181" width="61.8" height="15.0" fill="rgb(223,43,34)" rx="2" ry="2" />
<text  x="38.98" y="191.5" >__pthr..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (4 samples, 0.30%)</title><rect x="763.5" y="293" width="3.6" height="15.0" fill="rgb(231,154,23)" rx="2" ry="2" />
<text  x="766.52" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="730.4" y="293" width="0.9" height="15.0" fill="rgb(254,150,29)" rx="2" ry="2" />
<text  x="733.36" y="303.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="1184.6" y="69" width="0.9" height="15.0" fill="rgb(207,197,37)" rx="2" ry="2" />
<text  x="1187.62" y="79.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.08%)</title><rect x="774.3" y="293" width="0.9" height="15.0" fill="rgb(223,210,1)" rx="2" ry="2" />
<text  x="777.27" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x55b9d95d4f70) (1 samples, 0.08%)</title><rect x="1044.0" y="117" width="0.9" height="15.0" fill="rgb(250,110,9)" rx="2" ry="2" />
<text  x="1046.96" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="719.6" y="229" width="1.8" height="15.0" fill="rgb(211,184,43)" rx="2" ry="2" />
<text  x="722.61" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.30%)</title><rect x="735.7" y="245" width="3.6" height="15.0" fill="rgb(222,113,49)" rx="2" ry="2" />
<text  x="738.74" y="255.5" ></text>
</g>
<g >
<title>_itoa_word(value=7, (1 samples, 0.08%)</title><rect x="729.5" y="245" width="0.9" height="15.0" fill="rgb(235,221,29)" rx="2" ry="2" />
<text  x="732.47" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.08%)</title><rect x="1069.9" y="293" width="0.9" height="15.0" fill="rgb(240,119,32)" rx="2" ry="2" />
<text  x="1072.94" y="303.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=70, (2 samples, 0.15%)</title><rect x="1016.2" y="197" width="1.8" height="15.0" fill="rgb(246,91,37)" rx="2" ry="2" />
<text  x="1019.18" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7fffbcd4e8c0, (44 samples, 3.34%)</title><rect x="220.6" y="181" width="39.4" height="15.0" fill="rgb(208,49,34)" rx="2" ry="2" />
<text  x="223.55" y="191.5" >std..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.08%)</title><rect x="1087.9" y="197" width="0.9" height="15.0" fill="rgb(212,151,19)" rx="2" ry="2" />
<text  x="1090.86" y="207.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7fffbcd4ea20 (1 samples, 0.08%)</title><rect x="727.7" y="277" width="0.9" height="15.0" fill="rgb(253,100,25)" rx="2" ry="2" />
<text  x="730.68" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (7 samples, 0.53%)</title><rect x="1063.7" y="261" width="6.2" height="15.0" fill="rgb(224,88,23)" rx="2" ry="2" />
<text  x="1066.67" y="271.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (5 samples, 0.38%)</title><rect x="1156.0" y="245" width="4.4" height="15.0" fill="rgb(209,67,32)" rx="2" ry="2" />
<text  x="1158.95" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (11 samples, 0.84%)</title><rect x="1124.6" y="309" width="9.8" height="15.0" fill="rgb(237,105,20)" rx="2" ry="2" />
<text  x="1127.59" y="319.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;Page*&gt; (3 samples, 0.23%)</title><rect x="1184.6" y="293" width="2.7" height="15.0" fill="rgb(216,9,31)" rx="2" ry="2" />
<text  x="1187.62" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1184.6" y="133" width="0.9" height="15.0" fill="rgb(211,176,32)" rx="2" ry="2" />
<text  x="1187.62" y="143.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.08%)</title><rect x="1087.9" y="261" width="0.9" height="15.0" fill="rgb(216,151,5)" rx="2" ry="2" />
<text  x="1090.86" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x55b9e7653030) (1 samples, 0.08%)</title><rect x="770.7" y="37" width="0.9" height="15.0" fill="rgb(246,86,40)" rx="2" ry="2" />
<text  x="773.68" y="47.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (1 samples, 0.08%)</title><rect x="1115.6" y="229" width="0.9" height="15.0" fill="rgb(229,74,24)" rx="2" ry="2" />
<text  x="1118.63" y="239.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="1131.8" y="117" width="0.9" height="15.0" fill="rgb(207,69,28)" rx="2" ry="2" />
<text  x="1134.76" y="127.5" ></text>
</g>
<g >
<title>PageId::PageId (2 samples, 0.15%)</title><rect x="1114.7" y="325" width="1.8" height="15.0" fill="rgb(227,166,18)" rx="2" ry="2" />
<text  x="1117.74" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.08%)</title><rect x="1113.8" y="277" width="0.9" height="15.0" fill="rgb(225,138,34)" rx="2" ry="2" />
<text  x="1116.84" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.30%)</title><rect x="662.3" y="293" width="3.6" height="15.0" fill="rgb(216,19,40)" rx="2" ry="2" />
<text  x="665.27" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="731.3" y="197" width="0.9" height="15.0" fill="rgb(241,4,15)" rx="2" ry="2" />
<text  x="734.26" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1113.8" y="309" width="0.9" height="15.0" fill="rgb(247,137,31)" rx="2" ry="2" />
<text  x="1116.84" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.30%)</title><rect x="1092.3" y="277" width="3.6" height="15.0" fill="rgb(222,6,0)" rx="2" ry="2" />
<text  x="1095.34" y="287.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__rhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a8725995&quot;, (1 samples, 0.08%)</title><rect x="353.2" y="117" width="0.9" height="15.0" fill="rgb(223,171,53)" rx="2" ry="2" />
<text  x="356.16" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.30%)</title><rect x="662.3" y="309" width="3.6" height="15.0" fill="rgb(229,201,43)" rx="2" ry="2" />
<text  x="665.27" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="742.9" y="229" width="0.9" height="15.0" fill="rgb(238,100,51)" rx="2" ry="2" />
<text  x="745.91" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (9 samples, 0.68%)</title><rect x="1039.5" y="277" width="8.0" height="15.0" fill="rgb(223,65,27)" rx="2" ry="2" />
<text  x="1042.48" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.15%)</title><rect x="725.0" y="117" width="1.8" height="15.0" fill="rgb(232,45,35)" rx="2" ry="2" />
<text  x="727.99" y="127.5" ></text>
</g>
<g >
<title>std::(__val=441529) (1 samples, 0.08%)</title><rect x="1097.7" y="325" width="0.9" height="15.0" fill="rgb(224,192,16)" rx="2" ry="2" />
<text  x="1100.71" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (12 samples, 0.91%)</title><rect x="1138.9" y="245" width="10.8" height="15.0" fill="rgb(230,61,36)" rx="2" ry="2" />
<text  x="1141.93" y="255.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (6 samples, 0.46%)</title><rect x="354.1" y="101" width="5.3" height="15.0" fill="rgb(206,204,30)" rx="2" ry="2" />
<text  x="357.05" y="111.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (27 samples, 2.05%)</title><rect x="359.4" y="85" width="24.2" height="15.0" fill="rgb(247,146,48)" rx="2" ry="2" />
<text  x="362.43" y="95.5" >_..</text>
</g>
<g >
<title>_int_free (1 samples, 0.08%)</title><rect x="1046.6" y="117" width="0.9" height="15.0" fill="rgb(222,222,14)" rx="2" ry="2" />
<text  x="1049.64" y="127.5" ></text>
</g>
<g >
<title>Page::~Page (3 samples, 0.23%)</title><rect x="1184.6" y="261" width="2.7" height="15.0" fill="rgb(237,158,16)" rx="2" ry="2" />
<text  x="1187.62" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (17 samples, 1.29%)</title><rect x="746.5" y="229" width="15.2" height="15.0" fill="rgb(216,154,29)" rx="2" ry="2" />
<text  x="749.49" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (2 samples, 0.15%)</title><rect x="1129.1" y="277" width="1.8" height="15.0" fill="rgb(236,112,5)" rx="2" ry="2" />
<text  x="1132.07" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="731.3" y="181" width="0.9" height="15.0" fill="rgb(248,211,29)" rx="2" ry="2" />
<text  x="734.26" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fbafb409010, (1 samples, 0.08%)</title><rect x="718.7" y="165" width="0.9" height="15.0" fill="rgb(227,40,28)" rx="2" ry="2" />
<text  x="721.72" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="742.0" y="229" width="0.9" height="15.0" fill="rgb(238,47,29)" rx="2" ry="2" />
<text  x="745.01" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.08%)</title><rect x="1069.9" y="245" width="0.9" height="15.0" fill="rgb(246,143,20)" rx="2" ry="2" />
<text  x="1072.94" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="1097.7" y="309" width="0.9" height="15.0" fill="rgb(245,85,20)" rx="2" ry="2" />
<text  x="1100.71" y="319.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (1 samples, 0.08%)</title><rect x="1184.6" y="229" width="0.9" height="15.0" fill="rgb(206,72,9)" rx="2" ry="2" />
<text  x="1187.62" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="1180.1" y="165" width="0.9" height="15.0" fill="rgb(209,175,37)" rx="2" ry="2" />
<text  x="1183.14" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (2 samples, 0.15%)</title><rect x="1049.3" y="261" width="1.8" height="15.0" fill="rgb(239,83,36)" rx="2" ry="2" />
<text  x="1052.33" y="271.5" ></text>
</g>
<g >
<title>SimpleIdGenerator::generateId (1 samples, 0.08%)</title><rect x="1100.4" y="325" width="0.9" height="15.0" fill="rgb(239,222,51)" rx="2" ry="2" />
<text  x="1103.40" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=68) (2 samples, 0.15%)</title><rect x="736.6" y="181" width="1.8" height="15.0" fill="rgb(234,200,42)" rx="2" ry="2" />
<text  x="739.64" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="715.1" y="245" width="1.8" height="15.0" fill="rgb(227,12,11)" rx="2" ry="2" />
<text  x="718.13" y="255.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.08%)</title><rect x="733.1" y="213" width="0.8" height="15.0" fill="rgb(236,229,41)" rx="2" ry="2" />
<text  x="736.05" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.08%)</title><rect x="781.4" y="309" width="0.9" height="15.0" fill="rgb(238,146,9)" rx="2" ry="2" />
<text  x="784.44" y="319.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.08%)</title><rect x="11.8" y="229" width="0.9" height="15.0" fill="rgb(247,131,51)" rx="2" ry="2" />
<text  x="14.79" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.15%)</title><rect x="775.2" y="293" width="1.8" height="15.0" fill="rgb(208,229,44)" rx="2" ry="2" />
<text  x="778.16" y="303.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.08%)</title><rect x="1181.9" y="245" width="0.9" height="15.0" fill="rgb(225,221,15)" rx="2" ry="2" />
<text  x="1184.94" y="255.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.08%)</title><rect x="10.9" y="165" width="0.9" height="15.0" fill="rgb(235,42,13)" rx="2" ry="2" />
<text  x="13.90" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.08%)</title><rect x="781.4" y="325" width="0.9" height="15.0" fill="rgb(218,223,36)" rx="2" ry="2" />
<text  x="784.44" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (101 samples, 7.67%)</title><rect x="293.1" y="165" width="90.5" height="15.0" fill="rgb(247,170,40)" rx="2" ry="2" />
<text  x="296.13" y="175.5" >std::__det..</text>
</g>
<g >
<title>NetworkGenerator::generatePageFromNum (3 samples, 0.23%)</title><rect x="1096.8" y="341" width="2.7" height="15.0" fill="rgb(222,92,52)" rx="2" ry="2" />
<text  x="1099.82" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=16000000) (1 samples, 0.08%)</title><rect x="781.4" y="245" width="0.9" height="15.0" fill="rgb(232,4,36)" rx="2" ry="2" />
<text  x="784.44" y="255.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.08%)</title><rect x="1018.0" y="245" width="0.9" height="15.0" fill="rgb(241,168,10)" rx="2" ry="2" />
<text  x="1020.97" y="255.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="666.8" y="277" width="0.8" height="15.0" fill="rgb(244,113,21)" rx="2" ry="2" />
<text  x="669.75" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (2 samples, 0.15%)</title><rect x="1082.5" y="229" width="1.8" height="15.0" fill="rgb(217,28,33)" rx="2" ry="2" />
<text  x="1085.48" y="239.5" ></text>
</g>
<g >
<title>Page::Page (1 samples, 0.08%)</title><rect x="661.4" y="341" width="0.9" height="15.0" fill="rgb(234,39,39)" rx="2" ry="2" />
<text  x="664.37" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (3 samples, 0.23%)</title><rect x="716.9" y="181" width="2.7" height="15.0" fill="rgb(206,140,6)" rx="2" ry="2" />
<text  x="719.92" y="191.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.15%)</title><rect x="765.3" y="181" width="1.8" height="15.0" fill="rgb(209,111,0)" rx="2" ry="2" />
<text  x="768.31" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1113.8" y="293" width="0.9" height="15.0" fill="rgb(251,192,40)" rx="2" ry="2" />
<text  x="1116.84" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.08%)</title><rect x="1078.9" y="277" width="0.9" height="15.0" fill="rgb(228,59,21)" rx="2" ry="2" />
<text  x="1081.90" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="725.0" y="133" width="1.8" height="15.0" fill="rgb(227,215,48)" rx="2" ry="2" />
<text  x="727.99" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="722.3" y="165" width="0.9" height="15.0" fill="rgb(206,147,19)" rx="2" ry="2" />
<text  x="725.30" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (4 samples, 0.30%)</title><rect x="1146.1" y="149" width="3.6" height="15.0" fill="rgb(215,173,54)" rx="2" ry="2" />
<text  x="1149.10" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1099.5" y="309" width="0.9" height="15.0" fill="rgb(228,66,3)" rx="2" ry="2" />
<text  x="1102.51" y="319.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.08%)</title><rect x="667.6" y="133" width="0.9" height="15.0" fill="rgb(236,221,10)" rx="2" ry="2" />
<text  x="670.65" y="143.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,unsigned (5 samples, 0.38%)</title><rect x="775.2" y="341" width="4.4" height="15.0" fill="rgb(237,217,13)" rx="2" ry="2" />
<text  x="778.16" y="351.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (1 samples, 0.08%)</title><rect x="776.1" y="213" width="0.9" height="15.0" fill="rgb(208,54,11)" rx="2" ry="2" />
<text  x="779.06" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.08%)</title><rect x="1078.9" y="245" width="0.9" height="15.0" fill="rgb(220,97,43)" rx="2" ry="2" />
<text  x="1081.90" y="255.5" ></text>
</g>
<g >
<title>PageId::PageId (2 samples, 0.15%)</title><rect x="725.0" y="181" width="1.8" height="15.0" fill="rgb(252,80,6)" rx="2" ry="2" />
<text  x="727.99" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.08%)</title><rect x="667.6" y="245" width="0.9" height="15.0" fill="rgb(207,152,50)" rx="2" ry="2" />
<text  x="670.65" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId, (1 samples, 0.08%)</title><rect x="1180.1" y="293" width="0.9" height="15.0" fill="rgb(250,53,8)" rx="2" ry="2" />
<text  x="1183.14" y="303.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::pair&lt;PageId, (1 samples, 0.08%)</title><rect x="722.3" y="229" width="0.9" height="15.0" fill="rgb(220,228,53)" rx="2" ry="2" />
<text  x="725.30" y="239.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (55 samples, 4.18%)</title><rect x="608.5" y="197" width="49.3" height="15.0" fill="rgb(241,14,16)" rx="2" ry="2" />
<text  x="611.51" y="207.5" >Page..</text>
</g>
<g >
<title>PageId::PageId (9 samples, 0.68%)</title><rect x="1116.5" y="325" width="8.1" height="15.0" fill="rgb(210,159,27)" rx="2" ry="2" />
<text  x="1119.53" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.08%)</title><rect x="713.3" y="165" width="0.9" height="15.0" fill="rgb(223,45,7)" rx="2" ry="2" />
<text  x="716.34" y="175.5" ></text>
</g>
<g >
<title>std::condition_variable::wait&lt;MultiThreadedPageRankComputer::CyclicBarrier::wait()::{lambda()#1}&gt;(std::unique_lock&lt;std::mutex&gt;&amp;,MultiThreadedPageRankComputer::CyclicBarrier::wait()::{lambda()#1}) (43 samples, 3.26%)</title><rect x="670.3" y="325" width="38.6" height="15.0" fill="rgb(242,169,15)" rx="2" ry="2" />
<text  x="673.33" y="335.5" >std..</text>
</g>
<g >
<title>PageId::operator== (1 samples, 0.08%)</title><rect x="1181.0" y="213" width="0.9" height="15.0" fill="rgb(210,174,19)" rx="2" ry="2" />
<text  x="1184.04" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.30%)</title><rect x="735.7" y="261" width="3.6" height="15.0" fill="rgb(241,12,24)" rx="2" ry="2" />
<text  x="738.74" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7fffbcd4e900, (4 samples, 0.30%)</title><rect x="1075.3" y="277" width="3.6" height="15.0" fill="rgb(217,106,34)" rx="2" ry="2" />
<text  x="1078.32" y="287.5" ></text>
</g>
<g >
<title>PageId::PageId (4 samples, 0.30%)</title><rect x="1092.3" y="293" width="3.6" height="15.0" fill="rgb(230,137,24)" rx="2" ry="2" />
<text  x="1095.34" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.08%)</title><rect x="779.6" y="341" width="0.9" height="15.0" fill="rgb(231,55,11)" rx="2" ry="2" />
<text  x="782.64" y="351.5" ></text>
</g>
<g >
<title>PageId::operator== (1 samples, 0.08%)</title><rect x="776.1" y="229" width="0.9" height="15.0" fill="rgb(231,168,15)" rx="2" ry="2" />
<text  x="779.06" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="733.1" y="261" width="0.8" height="15.0" fill="rgb(239,50,32)" rx="2" ry="2" />
<text  x="736.05" y="271.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (4 samples, 0.30%)</title><rect x="1173.0" y="245" width="3.6" height="15.0" fill="rgb(247,148,34)" rx="2" ry="2" />
<text  x="1175.98" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (4 samples, 0.30%)</title><rect x="1078.9" y="325" width="3.6" height="15.0" fill="rgb(248,141,11)" rx="2" ry="2" />
<text  x="1081.90" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (134 samples, 10.17%)</title><rect x="383.6" y="197" width="120.1" height="15.0" fill="rgb(229,3,2)" rx="2" ry="2" />
<text  x="386.62" y="207.5" >std::_Hashtabl..</text>
</g>
<g >
<title>PageId::~PageId (3 samples, 0.23%)</title><rect x="770.7" y="133" width="2.7" height="15.0" fill="rgb(243,215,15)" rx="2" ry="2" />
<text  x="773.68" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.15%)</title><rect x="1047.5" y="261" width="1.8" height="15.0" fill="rgb(242,226,36)" rx="2" ry="2" />
<text  x="1050.54" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.08%)</title><rect x="1099.5" y="181" width="0.9" height="15.0" fill="rgb(247,82,7)" rx="2" ry="2" />
<text  x="1102.51" y="191.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.08%)</title><rect x="660.5" y="277" width="0.9" height="15.0" fill="rgb(248,8,0)" rx="2" ry="2" />
<text  x="663.48" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (1 samples, 0.08%)</title><rect x="742.0" y="277" width="0.9" height="15.0" fill="rgb(243,207,42)" rx="2" ry="2" />
<text  x="745.01" y="287.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fbafc000020, (1 samples, 0.08%)</title><rect x="10.9" y="181" width="0.9" height="15.0" fill="rgb(252,135,51)" rx="2" ry="2" />
<text  x="13.90" y="191.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,unsigned (2 samples, 0.15%)</title><rect x="1177.5" y="341" width="1.7" height="15.0" fill="rgb(211,61,54)" rx="2" ry="2" />
<text  x="1180.46" y="351.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (723 samples, 54.90%)</title><rect x="12.7" y="293" width="647.8" height="15.0" fill="rgb(222,70,47)" rx="2" ry="2" />
<text  x="15.69" y="303.5" >std::__invoke&lt;void</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="1143.4" y="101" width="2.7" height="15.0" fill="rgb(248,22,16)" rx="2" ry="2" />
<text  x="1146.41" y="111.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.08%)</title><rect x="1093.2" y="181" width="0.9" height="15.0" fill="rgb(210,100,18)" rx="2" ry="2" />
<text  x="1096.23" y="191.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.08%)</title><rect x="776.1" y="181" width="0.9" height="15.0" fill="rgb(246,137,34)" rx="2" ry="2" />
<text  x="779.06" y="191.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x55b9f6e34850) (1 samples, 0.08%)</title><rect x="1087.9" y="165" width="0.9" height="15.0" fill="rgb(231,23,25)" rx="2" ry="2" />
<text  x="1090.86" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; (23 samples, 1.75%)</title><rect x="1018.9" y="261" width="20.6" height="15.0" fill="rgb(226,68,11)" rx="2" ry="2" />
<text  x="1021.87" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (1 samples, 0.08%)</title><rect x="776.1" y="261" width="0.9" height="15.0" fill="rgb(241,15,22)" rx="2" ry="2" />
<text  x="779.06" y="271.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::generateIds (1 samples, 0.08%)</title><rect x="1015.3" y="341" width="0.9" height="15.0" fill="rgb(205,41,52)" rx="2" ry="2" />
<text  x="1018.28" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId,std::pair&lt;PageId (2 samples, 0.15%)</title><rect x="657.8" y="229" width="1.8" height="15.0" fill="rgb(213,126,30)" rx="2" ry="2" />
<text  x="660.79" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (4 samples, 0.30%)</title><rect x="1130.9" y="229" width="3.5" height="15.0" fill="rgb(232,211,21)" rx="2" ry="2" />
<text  x="1133.87" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55b9de3a11c8, (1 samples, 0.08%)</title><rect x="1181.9" y="165" width="0.9" height="15.0" fill="rgb(210,125,42)" rx="2" ry="2" />
<text  x="1184.94" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1180.1" y="197" width="0.9" height="15.0" fill="rgb(247,210,15)" rx="2" ry="2" />
<text  x="1183.14" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1016.2" y="261" width="1.8" height="15.0" fill="rgb(217,132,47)" rx="2" ry="2" />
<text  x="1019.18" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (1 samples, 0.08%)</title><rect x="1087.9" y="293" width="0.9" height="15.0" fill="rgb(254,170,7)" rx="2" ry="2" />
<text  x="1090.86" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.23%)</title><rect x="1143.4" y="117" width="2.7" height="15.0" fill="rgb(228,124,51)" rx="2" ry="2" />
<text  x="1146.41" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="731.3" y="229" width="0.9" height="15.0" fill="rgb(222,71,47)" rx="2" ry="2" />
<text  x="734.26" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (4 samples, 0.30%)</title><rect x="770.7" y="277" width="3.6" height="15.0" fill="rgb(235,70,41)" rx="2" ry="2" />
<text  x="773.68" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (5 samples, 0.38%)</title><rect x="775.2" y="309" width="4.4" height="15.0" fill="rgb(237,123,49)" rx="2" ry="2" />
<text  x="778.16" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.08%)</title><rect x="660.5" y="309" width="0.9" height="15.0" fill="rgb(246,96,45)" rx="2" ry="2" />
<text  x="663.48" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (2 samples, 0.15%)</title><rect x="1086.1" y="277" width="1.8" height="15.0" fill="rgb(222,41,42)" rx="2" ry="2" />
<text  x="1089.07" y="287.5" ></text>
</g>
<g >
<title>Page::generateId (5 samples, 0.38%)</title><rect x="731.3" y="325" width="4.4" height="15.0" fill="rgb(249,98,12)" rx="2" ry="2" />
<text  x="734.26" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId,std::pair&lt;PageId (6 samples, 0.46%)</title><rect x="1082.5" y="325" width="5.4" height="15.0" fill="rgb(222,19,26)" rx="2" ry="2" />
<text  x="1085.48" y="335.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=68, (1 samples, 0.08%)</title><rect x="731.3" y="165" width="0.9" height="15.0" fill="rgb(241,74,9)" rx="2" ry="2" />
<text  x="734.26" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1016.2" y="277" width="1.8" height="15.0" fill="rgb(246,49,16)" rx="2" ry="2" />
<text  x="1019.18" y="287.5" ></text>
</g>
<g >
<title>PageId::operator== (38 samples, 2.89%)</title><rect x="349.6" y="133" width="34.0" height="15.0" fill="rgb(218,32,36)" rx="2" ry="2" />
<text  x="352.57" y="143.5" >Pa..</text>
</g>
<g >
<title>operatornew(unsigned (2 samples, 0.15%)</title><rect x="725.0" y="101" width="1.8" height="15.0" fill="rgb(225,69,37)" rx="2" ry="2" />
<text  x="727.99" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.15%)</title><rect x="10.0" y="229" width="1.8" height="15.0" fill="rgb(219,224,31)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x55b9e7a59710) (1 samples, 0.08%)</title><rect x="1044.9" y="117" width="0.8" height="15.0" fill="rgb(213,214,12)" rx="2" ry="2" />
<text  x="1047.85" y="127.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.08%)</title><rect x="661.4" y="245" width="0.9" height="15.0" fill="rgb(252,25,25)" rx="2" ry="2" />
<text  x="664.37" y="255.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="1179.2" y="213" width="0.9" height="15.0" fill="rgb(213,63,29)" rx="2" ry="2" />
<text  x="1182.25" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1099.5" y="293" width="0.9" height="15.0" fill="rgb(212,106,15)" rx="2" ry="2" />
<text  x="1102.51" y="303.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.08%)</title><rect x="1099.5" y="325" width="0.9" height="15.0" fill="rgb(243,55,52)" rx="2" ry="2" />
<text  x="1102.51" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55b9eceaffd8, (1 samples, 0.08%)</title><rect x="1045.7" y="133" width="0.9" height="15.0" fill="rgb(242,95,6)" rx="2" ry="2" />
<text  x="1048.75" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId, (1 samples, 0.08%)</title><rect x="1179.2" y="277" width="0.9" height="15.0" fill="rgb(219,109,24)" rx="2" ry="2" />
<text  x="1182.25" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x55b9f7b2cb90, (1 samples, 0.08%)</title><rect x="713.3" y="181" width="0.9" height="15.0" fill="rgb(250,226,7)" rx="2" ry="2" />
<text  x="716.34" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.08%)</title><rect x="779.6" y="293" width="0.9" height="15.0" fill="rgb(249,217,0)" rx="2" ry="2" />
<text  x="782.64" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.15%)</title><rect x="1084.3" y="261" width="1.8" height="15.0" fill="rgb(217,209,32)" rx="2" ry="2" />
<text  x="1087.27" y="271.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.08%)</title><rect x="732.2" y="213" width="0.9" height="15.0" fill="rgb(218,210,46)" rx="2" ry="2" />
<text  x="735.16" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.08%)</title><rect x="660.5" y="197" width="0.9" height="15.0" fill="rgb(216,195,37)" rx="2" ry="2" />
<text  x="663.48" y="207.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;PageId, (3 samples, 0.23%)</title><rect x="1179.2" y="341" width="2.7" height="15.0" fill="rgb(241,38,0)" rx="2" ry="2" />
<text  x="1182.25" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (2 samples, 0.15%)</title><rect x="1047.5" y="229" width="1.8" height="15.0" fill="rgb(219,113,7)" rx="2" ry="2" />
<text  x="1050.54" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.30%)</title><rect x="1092.3" y="261" width="3.6" height="15.0" fill="rgb(235,78,1)" rx="2" ry="2" />
<text  x="1095.34" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.08%)</title><rect x="1184.6" y="117" width="0.9" height="15.0" fill="rgb(218,183,32)" rx="2" ry="2" />
<text  x="1187.62" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageIdAndRank, (3 samples, 0.23%)</title><rect x="1187.3" y="341" width="2.7" height="15.0" fill="rgb(253,28,49)" rx="2" ry="2" />
<text  x="1190.31" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.08%)</title><rect x="775.2" y="245" width="0.9" height="15.0" fill="rgb(231,210,29)" rx="2" ry="2" />
<text  x="778.16" y="255.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.08%)</title><rect x="669.4" y="213" width="0.9" height="15.0" fill="rgb(227,57,40)" rx="2" ry="2" />
<text  x="672.44" y="223.5" ></text>
</g>
<g >
<title>__pthread_cond_wait (43 samples, 3.26%)</title><rect x="670.3" y="293" width="38.6" height="15.0" fill="rgb(243,52,15)" rx="2" ry="2" />
<text  x="673.33" y="303.5" >__p..</text>
</g>
<g >
<title>std::_Destroy&lt;MultiThreadedPageRankComputer::ThreadRAII*&gt; (1 samples, 0.08%)</title><rect x="1015.3" y="293" width="0.9" height="15.0" fill="rgb(254,130,14)" rx="2" ry="2" />
<text  x="1018.28" y="303.5" ></text>
</g>
<g >
<title>Page::~Page (1 samples, 0.08%)</title><rect x="1095.9" y="229" width="0.9" height="15.0" fill="rgb(222,209,14)" rx="2" ry="2" />
<text  x="1098.92" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1016.2" y="245" width="1.8" height="15.0" fill="rgb(243,26,26)" rx="2" ry="2" />
<text  x="1019.18" y="255.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (11 samples, 0.84%)</title><rect x="141.7" y="101" width="9.9" height="15.0" fill="rgb(211,76,42)" rx="2" ry="2" />
<text  x="144.71" y="111.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.08%)</title><rect x="1136.2" y="293" width="0.9" height="15.0" fill="rgb(224,16,42)" rx="2" ry="2" />
<text  x="1139.24" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7fffbcd4e340, (4 samples, 0.30%)</title><rect x="1161.3" y="277" width="3.6" height="15.0" fill="rgb(232,170,15)" rx="2" ry="2" />
<text  x="1164.33" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId,std::allocator&lt;PageId&gt; (1 samples, 0.08%)</title><rect x="669.4" y="325" width="0.9" height="15.0" fill="rgb(232,161,23)" rx="2" ry="2" />
<text  x="672.44" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.08%)</title><rect x="1181.0" y="261" width="0.9" height="15.0" fill="rgb(208,193,14)" rx="2" ry="2" />
<text  x="1184.04" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.08%)</title><rect x="714.2" y="325" width="0.9" height="15.0" fill="rgb(247,216,50)" rx="2" ry="2" />
<text  x="717.24" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.15%)</title><rect x="733.9" y="277" width="1.8" height="15.0" fill="rgb(232,17,47)" rx="2" ry="2" />
<text  x="736.95" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (15 samples, 1.14%)</title><rect x="1138.9" y="261" width="13.5" height="15.0" fill="rgb(253,173,27)" rx="2" ry="2" />
<text  x="1141.93" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.08%)</title><rect x="1136.2" y="309" width="0.9" height="15.0" fill="rgb(220,159,47)" rx="2" ry="2" />
<text  x="1139.24" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (4 samples, 0.30%)</title><rect x="770.7" y="261" width="3.6" height="15.0" fill="rgb(236,75,19)" rx="2" ry="2" />
<text  x="773.68" y="271.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.08%)</title><rect x="1113.8" y="341" width="0.9" height="15.0" fill="rgb(232,193,10)" rx="2" ry="2" />
<text  x="1116.84" y="351.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fbb0beb0c40 (1 samples, 0.08%)</title><rect x="725.0" y="69" width="0.9" height="15.0" fill="rgb(211,203,9)" rx="2" ry="2" />
<text  x="727.99" y="79.5" ></text>
</g>
<g >
<title>std::_Construct&lt;PageId, (2 samples, 0.15%)</title><rect x="715.1" y="277" width="1.8" height="15.0" fill="rgb(239,109,42)" rx="2" ry="2" />
<text  x="718.13" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7fffbcd4ed20, (2 samples, 0.15%)</title><rect x="761.7" y="261" width="1.8" height="15.0" fill="rgb(224,196,21)" rx="2" ry="2" />
<text  x="764.72" y="271.5" ></text>
</g>
<g >
<title>PageIdAndRank::PageIdAndRank (1 samples, 0.08%)</title><rect x="1018.0" y="341" width="0.9" height="15.0" fill="rgb(218,36,22)" rx="2" ry="2" />
<text  x="1020.97" y="351.5" ></text>
</g>
<g >
<title>PageId::operator== (5 samples, 0.38%)</title><rect x="1156.0" y="229" width="4.4" height="15.0" fill="rgb(252,29,28)" rx="2" ry="2" />
<text  x="1158.95" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.15%)</title><rect x="1082.5" y="261" width="1.8" height="15.0" fill="rgb(231,60,40)" rx="2" ry="2" />
<text  x="1085.48" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.08%)</title><rect x="1181.0" y="293" width="0.9" height="15.0" fill="rgb(224,122,19)" rx="2" ry="2" />
<text  x="1184.04" y="303.5" ></text>
</g>
</g>
</svg>
