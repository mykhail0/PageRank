<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="406.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="389" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="389" > </text>
<g id="frames">
<g >
<title>std::__cxx11::basic_stringstream&lt;char, (1 samples, 0.96%)</title><rect x="566.0" y="309" width="11.3" height="15.0" fill="rgb(226,147,45)" rx="2" ry="2" />
<text  x="568.96" y="319.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (1 samples, 0.96%)</title><rect x="531.9" y="101" width="11.4" height="15.0" fill="rgb(252,148,36)" rx="2" ry="2" />
<text  x="534.92" y="111.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="271.0" y="261" width="11.3" height="15.0" fill="rgb(253,229,47)" rx="2" ry="2" />
<text  x="273.96" y="271.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.96%)</title><rect x="1178.7" y="277" width="11.3" height="15.0" fill="rgb(209,192,26)" rx="2" ry="2" />
<text  x="1181.65" y="287.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="475.2" y="245" width="11.3" height="15.0" fill="rgb(250,162,35)" rx="2" ry="2" />
<text  x="478.19" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.96%)</title><rect x="566.0" y="181" width="11.3" height="15.0" fill="rgb(217,150,15)" rx="2" ry="2" />
<text  x="568.96" y="191.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd60830, (1 samples, 0.96%)</title><rect x="146.2" y="277" width="11.3" height="15.0" fill="rgb(211,180,41)" rx="2" ry="2" />
<text  x="149.15" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.96%)</title><rect x="486.5" y="149" width="11.4" height="15.0" fill="rgb(232,13,52)" rx="2" ry="2" />
<text  x="489.54" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.96%)</title><rect x="1178.7" y="261" width="11.3" height="15.0" fill="rgb(218,153,21)" rx="2" ry="2" />
<text  x="1181.65" y="271.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (7 samples, 6.73%)</title><rect x="486.5" y="245" width="79.5" height="15.0" fill="rgb(207,195,11)" rx="2" ry="2" />
<text  x="489.54" y="255.5" >std::__in..</text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.96%)</title><rect x="509.2" y="117" width="11.4" height="15.0" fill="rgb(251,114,41)" rx="2" ry="2" />
<text  x="512.23" y="127.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="429.8" y="229" width="11.4" height="15.0" fill="rgb(233,125,27)" rx="2" ry="2" />
<text  x="432.81" y="239.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void (7 samples, 6.73%)</title><rect x="486.5" y="277" width="79.5" height="15.0" fill="rgb(231,49,32)" rx="2" ry="2" />
<text  x="489.54" y="287.5" >std::thre..</text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="55.4" y="229" width="11.3" height="15.0" fill="rgb(205,106,28)" rx="2" ry="2" />
<text  x="58.38" y="239.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd6b510, (1 samples, 0.96%)</title><rect x="327.7" y="277" width="11.3" height="15.0" fill="rgb(244,138,48)" rx="2" ry="2" />
<text  x="330.69" y="287.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="429.8" y="261" width="11.4" height="15.0" fill="rgb(239,60,1)" rx="2" ry="2" />
<text  x="432.81" y="271.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="361.7" y="261" width="11.4" height="15.0" fill="rgb(254,226,40)" rx="2" ry="2" />
<text  x="364.73" y="271.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="282.3" y="245" width="11.4" height="15.0" fill="rgb(252,192,34)" rx="2" ry="2" />
<text  x="285.31" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.96%)</title><rect x="566.0" y="277" width="11.3" height="15.0" fill="rgb(238,125,11)" rx="2" ry="2" />
<text  x="568.96" y="287.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 0.96%)</title><rect x="134.8" y="245" width="11.4" height="15.0" fill="rgb(213,45,53)" rx="2" ry="2" />
<text  x="137.81" y="255.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="452.5" y="261" width="11.3" height="15.0" fill="rgb(247,206,4)" rx="2" ry="2" />
<text  x="455.50" y="271.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="157.5" y="261" width="11.3" height="15.0" fill="rgb(218,113,9)" rx="2" ry="2" />
<text  x="160.50" y="271.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Young (1 samples, 0.96%)</title><rect x="21.3" y="261" width="11.4" height="15.0" fill="rgb(236,110,51)" rx="2" ry="2" />
<text  x="24.35" y="271.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;New (1 samples, 0.96%)</title><rect x="100.8" y="261" width="11.3" height="15.0" fill="rgb(235,198,23)" rx="2" ry="2" />
<text  x="103.77" y="271.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.96%)</title><rect x="566.0" y="213" width="11.3" height="15.0" fill="rgb(238,143,47)" rx="2" ry="2" />
<text  x="568.96" y="223.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="44.0" y="261" width="11.4" height="15.0" fill="rgb(208,21,17)" rx="2" ry="2" />
<text  x="47.04" y="271.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="112.1" y="261" width="11.4" height="15.0" fill="rgb(240,179,39)" rx="2" ry="2" />
<text  x="115.12" y="271.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId (1 samples, 0.96%)</title><rect x="180.2" y="261" width="11.3" height="15.0" fill="rgb(238,88,11)" rx="2" ry="2" />
<text  x="183.19" y="271.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="236.9" y="261" width="11.4" height="15.0" fill="rgb(222,52,34)" rx="2" ry="2" />
<text  x="239.92" y="271.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="282.3" y="229" width="11.4" height="15.0" fill="rgb(226,24,24)" rx="2" ry="2" />
<text  x="285.31" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=50961) (1 samples, 0.96%)</title><rect x="566.0" y="197" width="11.3" height="15.0" fill="rgb(216,123,22)" rx="2" ry="2" />
<text  x="568.96" y="207.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.96%)</title><rect x="554.6" y="117" width="11.4" height="15.0" fill="rgb(216,37,29)" rx="2" ry="2" />
<text  x="557.62" y="127.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.96%)</title><rect x="509.2" y="101" width="11.4" height="15.0" fill="rgb(233,119,20)" rx="2" ry="2" />
<text  x="512.23" y="111.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="316.3" y="261" width="11.4" height="15.0" fill="rgb(226,222,0)" rx="2" ry="2" />
<text  x="319.35" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.96%)</title><rect x="180.2" y="245" width="11.3" height="15.0" fill="rgb(253,151,23)" rx="2" ry="2" />
<text  x="183.19" y="255.5" ></text>
</g>
<g >
<title>std::condition_variable::wait&lt;MultiThreadedPageRankComputer::CyclicBarrier::wait()::{lambda()#1}&gt;(std::unique_lock&lt;std::mutex&gt;&amp;,MultiThreadedPageRankComputer::CyclicBarrier::wait()::{lambda()#1}) (7 samples, 6.73%)</title><rect x="622.7" y="277" width="79.4" height="15.0" fill="rgb(233,89,32)" rx="2" ry="2" />
<text  x="625.69" y="287.5" >std::cond..</text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.96%)</title><rect x="554.6" y="101" width="11.4" height="15.0" fill="rgb(254,65,28)" rx="2" ry="2" />
<text  x="557.62" y="111.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="146.2" y="261" width="11.3" height="15.0" fill="rgb(245,190,27)" rx="2" ry="2" />
<text  x="149.15" y="271.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,double, (4 samples, 3.85%)</title><rect x="520.6" y="197" width="45.4" height="15.0" fill="rgb(232,108,18)" rx="2" ry="2" />
<text  x="523.58" y="207.5" >std:..</text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="293.7" y="261" width="11.3" height="15.0" fill="rgb(230,177,36)" rx="2" ry="2" />
<text  x="296.65" y="271.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="475.2" y="229" width="11.3" height="15.0" fill="rgb(218,119,39)" rx="2" ry="2" />
<text  x="478.19" y="239.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd71d50, (1 samples, 0.96%)</title><rect x="441.2" y="277" width="11.3" height="15.0" fill="rgb(207,174,11)" rx="2" ry="2" />
<text  x="444.15" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::stdio_sync_filebuf&lt;char,std::char_traits&lt;char&gt; (2 samples, 1.92%)</title><rect x="600.0" y="277" width="22.7" height="15.0" fill="rgb(221,202,3)" rx="2" ry="2" />
<text  x="603.00" y="287.5" >_..</text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="384.4" y="261" width="11.4" height="15.0" fill="rgb(251,84,52)" rx="2" ry="2" />
<text  x="387.42" y="271.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd6fe90, (1 samples, 0.96%)</title><rect x="407.1" y="277" width="11.4" height="15.0" fill="rgb(234,140,25)" rx="2" ry="2" />
<text  x="410.12" y="287.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd67eb0, (1 samples, 0.96%)</title><rect x="271.0" y="277" width="11.3" height="15.0" fill="rgb(226,211,27)" rx="2" ry="2" />
<text  x="273.96" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.96%)</title><rect x="180.2" y="213" width="11.3" height="15.0" fill="rgb(248,192,13)" rx="2" ry="2" />
<text  x="183.19" y="223.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=140292917606144, (42 samples, 40.38%)</title><rect x="702.1" y="165" width="476.6" height="15.0" fill="rgb(211,205,18)" rx="2" ry="2" />
<text  x="705.12" y="175.5" >__GI___pthread_timedjoin_ex(threadid=140292917606144,</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (3 samples, 2.88%)</title><rect x="486.5" y="181" width="34.1" height="15.0" fill="rgb(237,138,34)" rx="2" ry="2" />
<text  x="489.54" y="191.5" >st..</text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd6f4d0, (1 samples, 0.96%)</title><rect x="395.8" y="277" width="11.3" height="15.0" fill="rgb(250,197,51)" rx="2" ry="2" />
<text  x="398.77" y="287.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="407.1" y="261" width="11.4" height="15.0" fill="rgb(254,9,47)" rx="2" ry="2" />
<text  x="410.12" y="271.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="55.4" y="245" width="11.3" height="15.0" fill="rgb(211,31,33)" rx="2" ry="2" />
<text  x="58.38" y="255.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="429.8" y="245" width="11.4" height="15.0" fill="rgb(228,204,14)" rx="2" ry="2" />
<text  x="432.81" y="255.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (7 samples, 6.73%)</title><rect x="622.7" y="229" width="79.4" height="15.0" fill="rgb(206,210,2)" rx="2" ry="2" />
<text  x="625.69" y="239.5" >__pthread..</text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="327.7" y="245" width="11.3" height="15.0" fill="rgb(245,112,4)" rx="2" ry="2" />
<text  x="330.69" y="255.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="361.7" y="245" width="11.4" height="15.0" fill="rgb(243,213,29)" rx="2" ry="2" />
<text  x="364.73" y="255.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.96%)</title><rect x="486.5" y="37" width="11.4" height="15.0" fill="rgb(235,205,49)" rx="2" ry="2" />
<text  x="489.54" y="47.5" ></text>
</g>
<g >
<title>std::basic_istream&lt;char,std::char_traits&lt;char&gt; (4 samples, 3.85%)</title><rect x="577.3" y="293" width="45.4" height="15.0" fill="rgb(210,152,10)" rx="2" ry="2" />
<text  x="580.31" y="303.5" >std:..</text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="407.1" y="229" width="11.4" height="15.0" fill="rgb(205,175,7)" rx="2" ry="2" />
<text  x="410.12" y="239.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="146.2" y="229" width="11.3" height="15.0" fill="rgb(241,221,9)" rx="2" ry="2" />
<text  x="149.15" y="239.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="157.5" y="245" width="11.3" height="15.0" fill="rgb(245,206,35)" rx="2" ry="2" />
<text  x="160.50" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;MultiThreadedPageRankComputer::ThreadRAII*&gt; (42 samples, 40.38%)</title><rect x="702.1" y="229" width="476.6" height="15.0" fill="rgb(216,222,27)" rx="2" ry="2" />
<text  x="705.12" y="239.5" >std::_Destroy_aux&lt;false&gt;::__destroy&lt;MultiThreadedPageRankComputer..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (1 samples, 0.96%)</title><rect x="486.5" y="53" width="11.4" height="15.0" fill="rgb(209,196,18)" rx="2" ry="2" />
<text  x="489.54" y="63.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.96%)</title><rect x="180.2" y="229" width="11.3" height="15.0" fill="rgb(229,101,0)" rx="2" ry="2" />
<text  x="183.19" y="239.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd71330, (1 samples, 0.96%)</title><rect x="429.8" y="277" width="11.4" height="15.0" fill="rgb(251,216,24)" rx="2" ry="2" />
<text  x="432.81" y="287.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="384.4" y="245" width="11.4" height="15.0" fill="rgb(251,7,20)" rx="2" ry="2" />
<text  x="387.42" y="255.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="373.1" y="229" width="11.3" height="15.0" fill="rgb(229,216,50)" rx="2" ry="2" />
<text  x="376.08" y="239.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd6ca70, (1 samples, 0.96%)</title><rect x="350.4" y="277" width="11.3" height="15.0" fill="rgb(251,9,36)" rx="2" ry="2" />
<text  x="353.38" y="287.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (1 samples, 0.96%)</title><rect x="486.5" y="101" width="11.4" height="15.0" fill="rgb(215,176,37)" rx="2" ry="2" />
<text  x="489.54" y="111.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd6bff0, (1 samples, 0.96%)</title><rect x="339.0" y="277" width="11.4" height="15.0" fill="rgb(210,45,52)" rx="2" ry="2" />
<text  x="342.04" y="287.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::gen_id_thread(frst_free=..., (42 samples, 40.38%)</title><rect x="10.0" y="293" width="476.5" height="15.0" fill="rgb(240,156,2)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >MultiThreadedPageRankComputer::gen_id_thread(frst_free=...,</text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="214.2" y="261" width="11.4" height="15.0" fill="rgb(212,8,29)" rx="2" ry="2" />
<text  x="217.23" y="271.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 0.96%)</title><rect x="21.3" y="245" width="11.4" height="15.0" fill="rgb(228,158,24)" rx="2" ry="2" />
<text  x="24.35" y="255.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="305.0" y="245" width="11.3" height="15.0" fill="rgb(253,202,13)" rx="2" ry="2" />
<text  x="308.00" y="255.5" ></text>
</g>
<g >
<title>__libc_wait(stat_loc=stat_loc@entry=0x0) (1 samples, 0.96%)</title><rect x="236.9" y="245" width="11.4" height="15.0" fill="rgb(209,118,15)" rx="2" ry="2" />
<text  x="239.92" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (1 samples, 0.96%)</title><rect x="486.5" y="117" width="11.4" height="15.0" fill="rgb(245,80,39)" rx="2" ry="2" />
<text  x="489.54" y="127.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd5a5f0, (1 samples, 0.96%)</title><rect x="44.0" y="277" width="11.4" height="15.0" fill="rgb(233,51,19)" rx="2" ry="2" />
<text  x="47.04" y="287.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.96%)</title><rect x="509.2" y="149" width="11.4" height="15.0" fill="rgb(206,131,4)" rx="2" ry="2" />
<text  x="512.23" y="159.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="225.6" y="229" width="11.3" height="15.0" fill="rgb(217,213,34)" rx="2" ry="2" />
<text  x="228.58" y="239.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="395.8" y="261" width="11.3" height="15.0" fill="rgb(226,76,4)" rx="2" ry="2" />
<text  x="398.77" y="271.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd6dfd0, (1 samples, 0.96%)</title><rect x="373.1" y="277" width="11.3" height="15.0" fill="rgb(222,210,44)" rx="2" ry="2" />
<text  x="376.08" y="287.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd692f0, (1 samples, 0.96%)</title><rect x="293.7" y="277" width="11.3" height="15.0" fill="rgb(243,167,51)" rx="2" ry="2" />
<text  x="296.65" y="287.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 0.96%)</title><rect x="21.3" y="229" width="11.4" height="15.0" fill="rgb(253,150,8)" rx="2" ry="2" />
<text  x="24.35" y="239.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (3 samples, 2.88%)</title><rect x="486.5" y="197" width="34.1" height="15.0" fill="rgb(206,75,35)" rx="2" ry="2" />
<text  x="489.54" y="207.5" >st..</text>
</g>
<g >
<title>__pthread_cond_wait (7 samples, 6.73%)</title><rect x="622.7" y="245" width="79.4" height="15.0" fill="rgb(235,128,28)" rx="2" ry="2" />
<text  x="625.69" y="255.5" >__pthread..</text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd648b0, (1 samples, 0.96%)</title><rect x="214.2" y="277" width="11.4" height="15.0" fill="rgb(231,98,5)" rx="2" ry="2" />
<text  x="217.23" y="287.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Big (1 samples, 0.96%)</title><rect x="202.9" y="261" width="11.3" height="15.0" fill="rgb(220,95,13)" rx="2" ry="2" />
<text  x="205.88" y="271.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="305.0" y="229" width="11.3" height="15.0" fill="rgb(254,132,26)" rx="2" ry="2" />
<text  x="308.00" y="239.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 0.96%)</title><rect x="202.9" y="245" width="11.3" height="15.0" fill="rgb(232,35,41)" rx="2" ry="2" />
<text  x="205.88" y="255.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::ThreadRAII::~ThreadRAII(this=0x556df9990680, (42 samples, 40.38%)</title><rect x="702.1" y="197" width="476.6" height="15.0" fill="rgb(227,224,40)" rx="2" ry="2" />
<text  x="705.12" y="207.5" >MultiThreadedPageRankComputer::ThreadRAII::~ThreadRAII(this=0x556..</text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="225.6" y="245" width="11.3" height="15.0" fill="rgb(242,199,26)" rx="2" ry="2" />
<text  x="228.58" y="255.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.96%)</title><rect x="554.6" y="149" width="11.4" height="15.0" fill="rgb(212,154,11)" rx="2" ry="2" />
<text  x="557.62" y="159.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd6ea50, (1 samples, 0.96%)</title><rect x="384.4" y="277" width="11.4" height="15.0" fill="rgb(217,58,23)" rx="2" ry="2" />
<text  x="387.42" y="287.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="350.4" y="261" width="11.3" height="15.0" fill="rgb(247,18,42)" rx="2" ry="2" />
<text  x="353.38" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.96%)</title><rect x="180.2" y="197" width="11.3" height="15.0" fill="rgb(217,137,25)" rx="2" ry="2" />
<text  x="183.19" y="207.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="327.7" y="229" width="11.3" height="15.0" fill="rgb(242,191,13)" rx="2" ry="2" />
<text  x="330.69" y="239.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="361.7" y="229" width="11.4" height="15.0" fill="rgb(231,25,20)" rx="2" ry="2" />
<text  x="364.73" y="239.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="78.1" y="261" width="11.3" height="15.0" fill="rgb(228,18,0)" rx="2" ry="2" />
<text  x="81.08" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (3 samples, 2.88%)</title><rect x="531.9" y="181" width="34.1" height="15.0" fill="rgb(250,220,37)" rx="2" ry="2" />
<text  x="534.92" y="191.5" >st..</text>
</g>
<g >
<title>std::thread::join()() (42 samples, 40.38%)</title><rect x="702.1" y="181" width="476.6" height="15.0" fill="rgb(212,228,49)" rx="2" ry="2" />
<text  x="705.12" y="191.5" >std::thread::join()()</text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="407.1" y="245" width="11.4" height="15.0" fill="rgb(233,113,18)" rx="2" ry="2" />
<text  x="410.12" y="255.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="146.2" y="245" width="11.3" height="15.0" fill="rgb(216,229,12)" rx="2" ry="2" />
<text  x="149.15" y="255.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd68870, (1 samples, 0.96%)</title><rect x="282.3" y="277" width="11.4" height="15.0" fill="rgb(212,216,51)" rx="2" ry="2" />
<text  x="285.31" y="287.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="157.5" y="229" width="11.3" height="15.0" fill="rgb(246,123,51)" rx="2" ry="2" />
<text  x="160.50" y="239.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void (7 samples, 6.73%)</title><rect x="486.5" y="261" width="79.5" height="15.0" fill="rgb(246,27,32)" rx="2" ry="2" />
<text  x="489.54" y="271.5" >std::thre..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.96%)</title><rect x="1178.7" y="229" width="11.3" height="15.0" fill="rgb(223,12,9)" rx="2" ry="2" />
<text  x="1181.65" y="239.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="418.5" y="261" width="11.3" height="15.0" fill="rgb(233,86,24)" rx="2" ry="2" />
<text  x="421.46" y="271.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="384.4" y="229" width="11.4" height="15.0" fill="rgb(228,116,3)" rx="2" ry="2" />
<text  x="387.42" y="239.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="373.1" y="245" width="11.3" height="15.0" fill="rgb(211,150,27)" rx="2" ry="2" />
<text  x="376.08" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;MultiThreadedPageRankComputer::ThreadRAII, (42 samples, 40.38%)</title><rect x="702.1" y="277" width="476.6" height="15.0" fill="rgb(238,84,43)" rx="2" ry="2" />
<text  x="705.12" y="287.5" >std::vector&lt;MultiThreadedPageRankComputer::ThreadRAII,</text>
</g>
<g >
<title>clone() (49 samples, 47.12%)</title><rect x="10.0" y="341" width="556.0" height="15.0" fill="rgb(211,5,41)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >clone()</text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="259.6" y="245" width="11.4" height="15.0" fill="rgb(243,90,21)" rx="2" ry="2" />
<text  x="262.62" y="255.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd5f2d0, (1 samples, 0.96%)</title><rect x="123.5" y="277" width="11.3" height="15.0" fill="rgb(249,149,3)" rx="2" ry="2" />
<text  x="126.46" y="287.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="271.0" y="229" width="11.3" height="15.0" fill="rgb(239,45,47)" rx="2" ry="2" />
<text  x="273.96" y="239.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="441.2" y="261" width="11.3" height="15.0" fill="rgb(237,172,43)" rx="2" ry="2" />
<text  x="444.15" y="271.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;New (1 samples, 0.96%)</title><rect x="10.0" y="261" width="11.3" height="15.0" fill="rgb(225,36,18)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.96%)</title><rect x="497.9" y="149" width="11.3" height="15.0" fill="rgb(216,86,12)" rx="2" ry="2" />
<text  x="500.88" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.96%)</title><rect x="543.3" y="149" width="11.3" height="15.0" fill="rgb(236,30,16)" rx="2" ry="2" />
<text  x="546.27" y="159.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="248.3" y="261" width="11.3" height="15.0" fill="rgb(237,80,11)" rx="2" ry="2" />
<text  x="251.27" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (1 samples, 0.96%)</title><rect x="531.9" y="117" width="11.4" height="15.0" fill="rgb(226,44,37)" rx="2" ry="2" />
<text  x="534.92" y="127.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="66.7" y="261" width="11.4" height="15.0" fill="rgb(253,208,27)" rx="2" ry="2" />
<text  x="69.73" y="271.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="282.3" y="261" width="11.4" height="15.0" fill="rgb(249,94,8)" rx="2" ry="2" />
<text  x="285.31" y="271.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="214.2" y="229" width="11.4" height="15.0" fill="rgb(254,22,34)" rx="2" ry="2" />
<text  x="217.23" y="239.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="305.0" y="261" width="11.3" height="15.0" fill="rgb(248,150,25)" rx="2" ry="2" />
<text  x="308.00" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 1.92%)</title><rect x="486.5" y="165" width="22.7" height="15.0" fill="rgb(223,64,26)" rx="2" ry="2" />
<text  x="489.54" y="175.5" >s..</text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="293.7" y="245" width="11.3" height="15.0" fill="rgb(219,18,53)" rx="2" ry="2" />
<text  x="296.65" y="255.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 0.96%)</title><rect x="134.8" y="229" width="11.4" height="15.0" fill="rgb(214,170,27)" rx="2" ry="2" />
<text  x="137.81" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.96%)</title><rect x="566.0" y="245" width="11.3" height="15.0" fill="rgb(231,203,24)" rx="2" ry="2" />
<text  x="568.96" y="255.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="66.7" y="229" width="11.4" height="15.0" fill="rgb(248,78,19)" rx="2" ry="2" />
<text  x="69.73" y="239.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd62990, (1 samples, 0.96%)</title><rect x="180.2" y="277" width="11.3" height="15.0" fill="rgb(231,42,37)" rx="2" ry="2" />
<text  x="183.19" y="287.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="463.8" y="245" width="11.4" height="15.0" fill="rgb(240,62,0)" rx="2" ry="2" />
<text  x="466.85" y="255.5" ></text>
</g>
<g >
<title>std::getline&lt;char,std::char_traits&lt;char&gt;, (4 samples, 3.85%)</title><rect x="577.3" y="309" width="45.4" height="15.0" fill="rgb(235,188,32)" rx="2" ry="2" />
<text  x="580.31" y="319.5" >std:..</text>
</g>
<g >
<title>std::_Destroy&lt;MultiThreadedPageRankComputer::ThreadRAII*&gt; (42 samples, 40.38%)</title><rect x="702.1" y="245" width="476.6" height="15.0" fill="rgb(235,66,47)" rx="2" ry="2" />
<text  x="705.12" y="255.5" >std::_Destroy&lt;MultiThreadedPageRankComputer::ThreadRAII*&gt;</text>
</g>
<g >
<title>std::_Destroy&lt;MultiThreadedPageRankComputer::ThreadRAII*, (42 samples, 40.38%)</title><rect x="702.1" y="261" width="476.6" height="15.0" fill="rgb(217,35,53)" rx="2" ry="2" />
<text  x="705.12" y="271.5" >std::_Destroy&lt;MultiThreadedPageRankComputer::ThreadRAII*,</text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="44.0" y="229" width="11.4" height="15.0" fill="rgb(208,162,27)" rx="2" ry="2" />
<text  x="47.04" y="239.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="248.3" y="229" width="11.3" height="15.0" fill="rgb(245,128,10)" rx="2" ry="2" />
<text  x="251.27" y="239.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd59030, (1 samples, 0.96%)</title><rect x="21.3" y="277" width="11.4" height="15.0" fill="rgb(221,116,17)" rx="2" ry="2" />
<text  x="24.35" y="287.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="441.2" y="229" width="11.3" height="15.0" fill="rgb(221,210,15)" rx="2" ry="2" />
<text  x="444.15" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;MultiThreadedPageRankComputer::ThreadRAII&gt; (42 samples, 40.38%)</title><rect x="702.1" y="213" width="476.6" height="15.0" fill="rgb(253,193,19)" rx="2" ry="2" />
<text  x="705.12" y="223.5" >std::_Destroy&lt;MultiThreadedPageRankComputer::ThreadRAII&gt;</text>
</g>
<g >
<title>MultiThreadedPageRankComputer::generateIds (42 samples, 40.38%)</title><rect x="702.1" y="293" width="476.6" height="15.0" fill="rgb(241,100,4)" rx="2" ry="2" />
<text  x="705.12" y="303.5" >MultiThreadedPageRankComputer::generateIds</text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd73250, (1 samples, 0.96%)</title><rect x="463.8" y="277" width="11.4" height="15.0" fill="rgb(247,89,45)" rx="2" ry="2" />
<text  x="466.85" y="287.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd652d0, (1 samples, 0.96%)</title><rect x="225.6" y="277" width="11.3" height="15.0" fill="rgb(240,155,41)" rx="2" ry="2" />
<text  x="228.58" y="287.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="339.0" y="245" width="11.4" height="15.0" fill="rgb(242,36,31)" rx="2" ry="2" />
<text  x="342.04" y="255.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd59ab0, (1 samples, 0.96%)</title><rect x="32.7" y="277" width="11.3" height="15.0" fill="rgb(248,117,26)" rx="2" ry="2" />
<text  x="35.69" y="287.5" ></text>
</g>
<g >
<title>all (104 samples, 100%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(222,182,27)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd6d550, (1 samples, 0.96%)</title><rect x="361.7" y="277" width="11.4" height="15.0" fill="rgb(223,49,35)" rx="2" ry="2" />
<text  x="364.73" y="287.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="259.6" y="261" width="11.4" height="15.0" fill="rgb(233,166,2)" rx="2" ry="2" />
<text  x="262.62" y="271.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="373.1" y="261" width="11.3" height="15.0" fill="rgb(225,80,3)" rx="2" ry="2" />
<text  x="376.08" y="271.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="418.5" y="229" width="11.3" height="15.0" fill="rgb(254,2,47)" rx="2" ry="2" />
<text  x="421.46" y="239.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::pageRankWorkFunc (7 samples, 6.73%)</title><rect x="486.5" y="213" width="79.5" height="15.0" fill="rgb(241,225,32)" rx="2" ry="2" />
<text  x="489.54" y="223.5" >MultiThre..</text>
</g>
<g >
<title>arch_fork (1 samples, 0.96%)</title><rect x="100.8" y="229" width="11.3" height="15.0" fill="rgb(221,72,9)" rx="2" ry="2" />
<text  x="103.77" y="239.5" ></text>
</g>
<g >
<title>start_thread(arg=&lt;optimized (49 samples, 47.12%)</title><rect x="10.0" y="325" width="556.0" height="15.0" fill="rgb(241,110,44)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >start_thread(arg=&lt;optimized</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.96%)</title><rect x="509.2" y="165" width="11.4" height="15.0" fill="rgb(235,166,14)" rx="2" ry="2" />
<text  x="512.23" y="175.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="112.1" y="245" width="11.4" height="15.0" fill="rgb(237,106,24)" rx="2" ry="2" />
<text  x="115.12" y="255.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="327.7" y="261" width="11.3" height="15.0" fill="rgb(244,77,25)" rx="2" ry="2" />
<text  x="330.69" y="271.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 0.96%)</title><rect x="123.5" y="245" width="11.3" height="15.0" fill="rgb(207,13,50)" rx="2" ry="2" />
<text  x="126.46" y="255.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="89.4" y="229" width="11.4" height="15.0" fill="rgb(254,127,9)" rx="2" ry="2" />
<text  x="92.42" y="239.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd585b0, (1 samples, 0.96%)</title><rect x="10.0" y="277" width="11.3" height="15.0" fill="rgb(236,181,5)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.96%)</title><rect x="509.2" y="133" width="11.4" height="15.0" fill="rgb(253,95,53)" rx="2" ry="2" />
<text  x="512.23" y="143.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="191.5" y="229" width="11.4" height="15.0" fill="rgb(222,93,25)" rx="2" ry="2" />
<text  x="194.54" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId, (1 samples, 0.96%)</title><rect x="1178.7" y="293" width="11.3" height="15.0" fill="rgb(246,208,40)" rx="2" ry="2" />
<text  x="1181.65" y="303.5" ></text>
</g>
<g >
<title>StdinGenerator::generateNetworkOfSize (5 samples, 4.81%)</title><rect x="566.0" y="325" width="56.7" height="15.0" fill="rgb(218,61,20)" rx="2" ry="2" />
<text  x="568.96" y="335.5" >StdinG..</text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.96%)</title><rect x="486.5" y="133" width="11.4" height="15.0" fill="rgb(224,34,0)" rx="2" ry="2" />
<text  x="489.54" y="143.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="339.0" y="229" width="11.4" height="15.0" fill="rgb(231,88,27)" rx="2" ry="2" />
<text  x="342.04" y="239.5" ></text>
</g>
<g >
<title>_IO_getc(fp=0x7f987da0ca00 (2 samples, 1.92%)</title><rect x="600.0" y="261" width="22.7" height="15.0" fill="rgb(224,82,43)" rx="2" ry="2" />
<text  x="603.00" y="271.5" >_..</text>
</g>
<g >
<title>main(argc=&lt;optimized (55 samples, 52.88%)</title><rect x="566.0" y="341" width="624.0" height="15.0" fill="rgb(252,107,34)" rx="2" ry="2" />
<text  x="568.96" y="351.5" >main(argc=&lt;optimized</text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="225.6" y="261" width="11.3" height="15.0" fill="rgb(234,97,23)" rx="2" ry="2" />
<text  x="228.58" y="271.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="418.5" y="245" width="11.3" height="15.0" fill="rgb(235,140,6)" rx="2" ry="2" />
<text  x="421.46" y="255.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd6aa90, (1 samples, 0.96%)</title><rect x="316.3" y="277" width="11.4" height="15.0" fill="rgb(217,105,40)" rx="2" ry="2" />
<text  x="319.35" y="287.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 0.96%)</title><rect x="32.7" y="245" width="11.3" height="15.0" fill="rgb(227,29,43)" rx="2" ry="2" />
<text  x="35.69" y="255.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::computeForNetwork (50 samples, 48.08%)</title><rect x="622.7" y="309" width="567.3" height="15.0" fill="rgb(241,211,26)" rx="2" ry="2" />
<text  x="625.69" y="319.5" >MultiThreadedPageRankComputer::computeForNetwork</text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd5dd10, (1 samples, 0.96%)</title><rect x="100.8" y="277" width="11.3" height="15.0" fill="rgb(242,180,37)" rx="2" ry="2" />
<text  x="103.77" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x556e0408b0b0, (1 samples, 0.96%)</title><rect x="543.3" y="133" width="11.3" height="15.0" fill="rgb(215,24,27)" rx="2" ry="2" />
<text  x="546.27" y="143.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 0.96%)</title><rect x="100.8" y="245" width="11.3" height="15.0" fill="rgb(225,113,52)" rx="2" ry="2" />
<text  x="103.77" y="255.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="112.1" y="229" width="11.4" height="15.0" fill="rgb(232,126,36)" rx="2" ry="2" />
<text  x="115.12" y="239.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="89.4" y="245" width="11.4" height="15.0" fill="rgb(249,73,49)" rx="2" ry="2" />
<text  x="92.42" y="255.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd727d0, (1 samples, 0.96%)</title><rect x="452.5" y="277" width="11.3" height="15.0" fill="rgb(210,111,0)" rx="2" ry="2" />
<text  x="455.50" y="287.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="89.4" y="261" width="11.4" height="15.0" fill="rgb(235,40,15)" rx="2" ry="2" />
<text  x="92.42" y="271.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd63e30, (1 samples, 0.96%)</title><rect x="202.9" y="277" width="11.3" height="15.0" fill="rgb(251,202,19)" rx="2" ry="2" />
<text  x="205.88" y="287.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="191.5" y="245" width="11.4" height="15.0" fill="rgb(248,12,30)" rx="2" ry="2" />
<text  x="194.54" y="255.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 0.96%)</title><rect x="123.5" y="229" width="11.3" height="15.0" fill="rgb(243,4,23)" rx="2" ry="2" />
<text  x="126.46" y="239.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 0.96%)</title><rect x="10.0" y="245" width="11.3" height="15.0" fill="rgb(248,80,13)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd5baf0, (1 samples, 0.96%)</title><rect x="66.7" y="277" width="11.4" height="15.0" fill="rgb(210,206,46)" rx="2" ry="2" />
<text  x="69.73" y="287.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="259.6" y="229" width="11.4" height="15.0" fill="rgb(216,148,36)" rx="2" ry="2" />
<text  x="262.62" y="239.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="271.0" y="245" width="11.3" height="15.0" fill="rgb(205,84,24)" rx="2" ry="2" />
<text  x="273.96" y="255.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="214.2" y="245" width="11.4" height="15.0" fill="rgb(208,197,20)" rx="2" ry="2" />
<text  x="217.23" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.96%)</title><rect x="1178.7" y="245" width="11.3" height="15.0" fill="rgb(248,131,14)" rx="2" ry="2" />
<text  x="1181.65" y="255.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="475.2" y="261" width="11.3" height="15.0" fill="rgb(228,211,36)" rx="2" ry="2" />
<text  x="478.19" y="271.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="293.7" y="229" width="11.3" height="15.0" fill="rgb(236,56,46)" rx="2" ry="2" />
<text  x="296.65" y="239.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="339.0" y="261" width="11.4" height="15.0" fill="rgb(250,104,20)" rx="2" ry="2" />
<text  x="342.04" y="271.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd612b0, (1 samples, 0.96%)</title><rect x="157.5" y="277" width="11.3" height="15.0" fill="rgb(225,32,43)" rx="2" ry="2" />
<text  x="160.50" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.96%)</title><rect x="1178.7" y="213" width="11.3" height="15.0" fill="rgb(224,194,46)" rx="2" ry="2" />
<text  x="1181.65" y="223.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="463.8" y="229" width="11.4" height="15.0" fill="rgb(232,195,8)" rx="2" ry="2" />
<text  x="466.85" y="239.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="66.7" y="245" width="11.4" height="15.0" fill="rgb(248,225,54)" rx="2" ry="2" />
<text  x="69.73" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, (1 samples, 0.96%)</title><rect x="566.0" y="293" width="11.3" height="15.0" fill="rgb(248,212,6)" rx="2" ry="2" />
<text  x="568.96" y="303.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="44.0" y="245" width="11.4" height="15.0" fill="rgb(211,128,26)" rx="2" ry="2" />
<text  x="47.04" y="255.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="248.3" y="245" width="11.3" height="15.0" fill="rgb(207,130,6)" rx="2" ry="2" />
<text  x="251.27" y="255.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="441.2" y="245" width="11.3" height="15.0" fill="rgb(228,200,16)" rx="2" ry="2" />
<text  x="444.15" y="255.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (1 samples, 0.96%)</title><rect x="486.5" y="69" width="11.4" height="15.0" fill="rgb(246,143,25)" rx="2" ry="2" />
<text  x="489.54" y="79.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="316.3" y="245" width="11.4" height="15.0" fill="rgb(221,130,0)" rx="2" ry="2" />
<text  x="319.35" y="255.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::CyclicBarrier::wait (7 samples, 6.73%)</title><rect x="622.7" y="293" width="79.4" height="15.0" fill="rgb(214,110,54)" rx="2" ry="2" />
<text  x="625.69" y="303.5" >MultiThre..</text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd63470, (1 samples, 0.96%)</title><rect x="191.5" y="277" width="11.4" height="15.0" fill="rgb(243,189,9)" rx="2" ry="2" />
<text  x="194.54" y="287.5" ></text>
</g>
<g >
<title>pageRankComputationWithNetwork(computer=..., (50 samples, 48.08%)</title><rect x="622.7" y="325" width="567.3" height="15.0" fill="rgb(225,91,14)" rx="2" ry="2" />
<text  x="625.69" y="335.5" >pageRankComputationWithNetwork(computer=...,</text>
</g>
<g >
<title>std::operator==&lt;char&gt; (1 samples, 0.96%)</title><rect x="531.9" y="69" width="11.4" height="15.0" fill="rgb(219,209,50)" rx="2" ry="2" />
<text  x="534.92" y="79.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.96%)</title><rect x="1178.7" y="197" width="11.3" height="15.0" fill="rgb(247,51,4)" rx="2" ry="2" />
<text  x="1181.65" y="207.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Old (1 samples, 0.96%)</title><rect x="123.5" y="261" width="11.3" height="15.0" fill="rgb(234,18,34)" rx="2" ry="2" />
<text  x="126.46" y="271.5" ></text>
</g>
<g >
<title>PageId::operator== (1 samples, 0.96%)</title><rect x="531.9" y="85" width="11.4" height="15.0" fill="rgb(218,165,9)" rx="2" ry="2" />
<text  x="534.92" y="95.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.96%)</title><rect x="1178.7" y="165" width="11.3" height="15.0" fill="rgb(212,39,12)" rx="2" ry="2" />
<text  x="1181.65" y="175.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="168.8" y="261" width="11.4" height="15.0" fill="rgb(214,151,17)" rx="2" ry="2" />
<text  x="171.85" y="271.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="350.4" y="245" width="11.3" height="15.0" fill="rgb(249,192,33)" rx="2" ry="2" />
<text  x="353.38" y="255.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 0.96%)</title><rect x="202.9" y="229" width="11.3" height="15.0" fill="rgb(216,26,21)" rx="2" ry="2" />
<text  x="205.88" y="239.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.96%)</title><rect x="531.9" y="37" width="11.4" height="15.0" fill="rgb(214,141,49)" rx="2" ry="2" />
<text  x="534.92" y="47.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="463.8" y="261" width="11.4" height="15.0" fill="rgb(221,151,7)" rx="2" ry="2" />
<text  x="466.85" y="271.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="78.1" y="229" width="11.3" height="15.0" fill="rgb(223,81,13)" rx="2" ry="2" />
<text  x="81.08" y="239.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="55.4" y="261" width="11.3" height="15.0" fill="rgb(251,157,20)" rx="2" ry="2" />
<text  x="58.38" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.96%)</title><rect x="554.6" y="165" width="11.4" height="15.0" fill="rgb(207,197,54)" rx="2" ry="2" />
<text  x="557.62" y="175.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Small (1 samples, 0.96%)</title><rect x="134.8" y="261" width="11.4" height="15.0" fill="rgb(243,130,45)" rx="2" ry="2" />
<text  x="137.81" y="271.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Large (1 samples, 0.96%)</title><rect x="32.7" y="261" width="11.3" height="15.0" fill="rgb(246,170,54)" rx="2" ry="2" />
<text  x="35.69" y="271.5" ></text>
</g>
<g >
<title>??() (49 samples, 47.12%)</title><rect x="10.0" y="309" width="556.0" height="15.0" fill="rgb(224,198,15)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >??()</text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd61eb0, (1 samples, 0.96%)</title><rect x="168.8" y="277" width="11.4" height="15.0" fill="rgb(250,2,11)" rx="2" ry="2" />
<text  x="171.85" y="287.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="168.8" y="229" width="11.4" height="15.0" fill="rgb(227,31,26)" rx="2" ry="2" />
<text  x="171.85" y="239.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="452.5" y="245" width="11.3" height="15.0" fill="rgb(208,34,49)" rx="2" ry="2" />
<text  x="455.50" y="255.5" ></text>
</g>
<g >
<title>futex_wait_cancelable (7 samples, 6.73%)</title><rect x="622.7" y="213" width="79.4" height="15.0" fill="rgb(208,176,53)" rx="2" ry="2" />
<text  x="625.69" y="223.5" >futex_wai..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 1.92%)</title><rect x="531.9" y="165" width="22.7" height="15.0" fill="rgb(226,67,40)" rx="2" ry="2" />
<text  x="534.92" y="175.5" >s..</text>
</g>
<g >
<title>arch_fork (1 samples, 0.96%)</title><rect x="10.0" y="229" width="11.3" height="15.0" fill="rgb(219,79,52)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd5e7f0, (1 samples, 0.96%)</title><rect x="112.1" y="277" width="11.4" height="15.0" fill="rgb(246,220,18)" rx="2" ry="2" />
<text  x="115.12" y="287.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="395.8" y="229" width="11.3" height="15.0" fill="rgb(219,203,14)" rx="2" ry="2" />
<text  x="398.77" y="239.5" ></text>
</g>
<g >
<title>PageId::operator== (1 samples, 0.96%)</title><rect x="486.5" y="85" width="11.4" height="15.0" fill="rgb(232,73,3)" rx="2" ry="2" />
<text  x="489.54" y="95.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 0.96%)</title><rect x="191.5" y="261" width="11.4" height="15.0" fill="rgb(241,157,35)" rx="2" ry="2" />
<text  x="194.54" y="271.5" ></text>
</g>
<g >
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;)() (7 samples, 6.73%)</title><rect x="622.7" y="261" width="79.4" height="15.0" fill="rgb(231,59,23)" rx="2" ry="2" />
<text  x="625.69" y="271.5" >std::cond..</text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd65d50, (1 samples, 0.96%)</title><rect x="236.9" y="277" width="11.4" height="15.0" fill="rgb(240,129,46)" rx="2" ry="2" />
<text  x="239.92" y="287.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd5fe10, (1 samples, 0.96%)</title><rect x="134.8" y="277" width="11.4" height="15.0" fill="rgb(249,189,17)" rx="2" ry="2" />
<text  x="137.81" y="287.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd73d30, (1 samples, 0.96%)</title><rect x="475.2" y="277" width="11.3" height="15.0" fill="rgb(213,81,50)" rx="2" ry="2" />
<text  x="478.19" y="287.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void (7 samples, 6.73%)</title><rect x="486.5" y="293" width="79.5" height="15.0" fill="rgb(230,193,31)" rx="2" ry="2" />
<text  x="489.54" y="303.5" >std::thre..</text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd5d050, (1 samples, 0.96%)</title><rect x="89.4" y="277" width="11.4" height="15.0" fill="rgb(224,103,7)" rx="2" ry="2" />
<text  x="92.42" y="287.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="168.8" y="245" width="11.4" height="15.0" fill="rgb(238,74,5)" rx="2" ry="2" />
<text  x="171.85" y="255.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd708b0, (1 samples, 0.96%)</title><rect x="418.5" y="277" width="11.3" height="15.0" fill="rgb(207,67,54)" rx="2" ry="2" />
<text  x="421.46" y="287.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="452.5" y="229" width="11.3" height="15.0" fill="rgb(212,120,13)" rx="2" ry="2" />
<text  x="455.50" y="239.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 0.96%)</title><rect x="32.7" y="229" width="11.3" height="15.0" fill="rgb(230,9,53)" rx="2" ry="2" />
<text  x="35.69" y="239.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="395.8" y="245" width="11.3" height="15.0" fill="rgb(242,13,10)" rx="2" ry="2" />
<text  x="398.77" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void,void (7 samples, 6.73%)</title><rect x="486.5" y="229" width="79.5" height="15.0" fill="rgb(245,211,2)" rx="2" ry="2" />
<text  x="489.54" y="239.5" >std::__in..</text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="316.3" y="229" width="11.4" height="15.0" fill="rgb(240,69,14)" rx="2" ry="2" />
<text  x="319.35" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=65) (1 samples, 0.96%)</title><rect x="1178.7" y="181" width="11.3" height="15.0" fill="rgb(245,218,28)" rx="2" ry="2" />
<text  x="1181.65" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.96%)</title><rect x="531.9" y="133" width="11.4" height="15.0" fill="rgb(230,82,26)" rx="2" ry="2" />
<text  x="534.92" y="143.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd5c690, (1 samples, 0.96%)</title><rect x="78.1" y="277" width="11.3" height="15.0" fill="rgb(212,84,34)" rx="2" ry="2" />
<text  x="81.08" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.96%)</title><rect x="554.6" y="133" width="11.4" height="15.0" fill="rgb(249,125,2)" rx="2" ry="2" />
<text  x="557.62" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.96%)</title><rect x="566.0" y="261" width="11.3" height="15.0" fill="rgb(220,215,42)" rx="2" ry="2" />
<text  x="568.96" y="271.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="350.4" y="229" width="11.3" height="15.0" fill="rgb(237,121,3)" rx="2" ry="2" />
<text  x="353.38" y="239.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd5b010, (1 samples, 0.96%)</title><rect x="55.4" y="277" width="11.3" height="15.0" fill="rgb(228,195,7)" rx="2" ry="2" />
<text  x="58.38" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.96%)</title><rect x="531.9" y="149" width="11.4" height="15.0" fill="rgb(205,68,46)" rx="2" ry="2" />
<text  x="534.92" y="159.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd66890, (1 samples, 0.96%)</title><rect x="248.3" y="277" width="11.3" height="15.0" fill="rgb(239,108,34)" rx="2" ry="2" />
<text  x="251.27" y="287.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd69e90, (1 samples, 0.96%)</title><rect x="305.0" y="277" width="11.3" height="15.0" fill="rgb(214,46,11)" rx="2" ry="2" />
<text  x="308.00" y="287.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.96%)</title><rect x="78.1" y="245" width="11.3" height="15.0" fill="rgb(213,50,21)" rx="2" ry="2" />
<text  x="81.08" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.96%)</title><rect x="566.0" y="229" width="11.3" height="15.0" fill="rgb(228,206,50)" rx="2" ry="2" />
<text  x="568.96" y="239.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f987dd673d0, (1 samples, 0.96%)</title><rect x="259.6" y="277" width="11.4" height="15.0" fill="rgb(215,116,14)" rx="2" ry="2" />
<text  x="262.62" y="287.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (1 samples, 0.96%)</title><rect x="531.9" y="53" width="11.4" height="15.0" fill="rgb(237,156,21)" rx="2" ry="2" />
<text  x="534.92" y="63.5" ></text>
</g>
</g>
</svg>
