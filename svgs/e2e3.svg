<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="606.1" y="181" width="12.1" height="15.0" fill="rgb(215,228,13)" rx="2" ry="2" />
<text  x="609.08" y="191.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="642.6" y="197" width="12.1" height="15.0" fill="rgb(253,79,49)" rx="2" ry="2" />
<text  x="645.58" y="207.5" ></text>
</g>
<g >
<title>start_thread(arg=&lt;optimized (69 samples, 71.13%)</title><rect x="10.0" y="261" width="839.4" height="15.0" fill="rgb(233,116,20)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >start_thread(arg=&lt;optimized</text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="95.2" y="181" width="12.1" height="15.0" fill="rgb(205,172,47)" rx="2" ry="2" />
<text  x="98.15" y="191.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="131.6" y="181" width="12.2" height="15.0" fill="rgb(250,77,7)" rx="2" ry="2" />
<text  x="134.65" y="191.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 1.03%)</title><rect x="654.7" y="181" width="12.2" height="15.0" fill="rgb(217,151,5)" rx="2" ry="2" />
<text  x="657.74" y="191.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 1.03%)</title><rect x="545.3" y="181" width="12.1" height="15.0" fill="rgb(209,79,4)" rx="2" ry="2" />
<text  x="548.26" y="191.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="241.1" y="197" width="12.2" height="15.0" fill="rgb(242,27,3)" rx="2" ry="2" />
<text  x="244.13" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 1.03%)</title><rect x="703.4" y="117" width="12.2" height="15.0" fill="rgb(252,144,33)" rx="2" ry="2" />
<text  x="706.40" y="127.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (4 samples, 4.12%)</title><rect x="739.9" y="69" width="48.7" height="15.0" fill="rgb(252,127,20)" rx="2" ry="2" />
<text  x="742.90" y="79.5" >__pt..</text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bab770, (1 samples, 1.03%)</title><rect x="156.0" y="213" width="12.1" height="15.0" fill="rgb(214,225,17)" rx="2" ry="2" />
<text  x="158.98" y="223.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bb5c10, (1 samples, 1.03%)</title><rect x="411.4" y="213" width="12.2" height="15.0" fill="rgb(232,218,3)" rx="2" ry="2" />
<text  x="414.44" y="223.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="338.5" y="181" width="12.1" height="15.0" fill="rgb(239,49,52)" rx="2" ry="2" />
<text  x="341.45" y="191.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687baa390, (1 samples, 1.03%)</title><rect x="119.5" y="213" width="12.1" height="15.0" fill="rgb(230,201,0)" rx="2" ry="2" />
<text  x="122.48" y="223.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void (9 samples, 9.28%)</title><rect x="739.9" y="213" width="109.5" height="15.0" fill="rgb(231,185,11)" rx="2" ry="2" />
<text  x="742.90" y="223.5" >std::thread::..</text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="168.1" y="165" width="12.2" height="15.0" fill="rgb(247,25,2)" rx="2" ry="2" />
<text  x="171.14" y="175.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bae710, (1 samples, 1.03%)</title><rect x="241.1" y="213" width="12.2" height="15.0" fill="rgb(248,88,11)" rx="2" ry="2" />
<text  x="244.13" y="223.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="447.9" y="181" width="12.2" height="15.0" fill="rgb(240,46,3)" rx="2" ry="2" />
<text  x="450.94" y="191.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 1.03%)</title><rect x="253.3" y="165" width="12.2" height="15.0" fill="rgb(215,222,48)" rx="2" ry="2" />
<text  x="256.30" y="175.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="496.6" y="181" width="12.2" height="15.0" fill="rgb(249,144,21)" rx="2" ry="2" />
<text  x="499.60" y="191.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 1.03%)</title><rect x="289.8" y="165" width="12.2" height="15.0" fill="rgb(254,17,3)" rx="2" ry="2" />
<text  x="292.79" y="175.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687ba6070, (1 samples, 1.03%)</title><rect x="10.0" y="213" width="12.2" height="15.0" fill="rgb(228,90,12)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;MultiThreadedPageRankComputer::ThreadRAII&gt; (20 samples, 20.62%)</title><rect x="934.5" y="149" width="243.3" height="15.0" fill="rgb(221,41,36)" rx="2" ry="2" />
<text  x="937.54" y="159.5" >std::_Destroy&lt;MultiThreadedPageR..</text>
</g>
<g >
<title>__libc_fork (1 samples, 1.03%)</title><rect x="180.3" y="181" width="12.2" height="15.0" fill="rgb(220,31,52)" rx="2" ry="2" />
<text  x="183.31" y="191.5" ></text>
</g>
<g >
<title>pipe2() (1 samples, 1.03%)</title><rect x="618.2" y="181" width="12.2" height="15.0" fill="rgb(212,171,41)" rx="2" ry="2" />
<text  x="621.25" y="191.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Great (1 samples, 1.03%)</title><rect x="545.3" y="197" width="12.1" height="15.0" fill="rgb(219,135,33)" rx="2" ry="2" />
<text  x="548.26" y="207.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 1.03%)</title><rect x="837.2" y="53" width="12.2" height="15.0" fill="rgb(253,147,42)" rx="2" ry="2" />
<text  x="840.22" y="63.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687ba6130, (1 samples, 1.03%)</title><rect x="34.3" y="213" width="12.2" height="15.0" fill="rgb(243,79,36)" rx="2" ry="2" />
<text  x="37.33" y="223.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="131.6" y="197" width="12.2" height="15.0" fill="rgb(230,9,51)" rx="2" ry="2" />
<text  x="134.65" y="207.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bc01d0, (1 samples, 1.03%)</title><rect x="666.9" y="213" width="12.2" height="15.0" fill="rgb(241,132,34)" rx="2" ry="2" />
<text  x="669.91" y="223.5" ></text>
</g>
<g >
<title>all (97 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(221,4,31)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 1.03%)</title><rect x="435.8" y="181" width="12.1" height="15.0" fill="rgb(240,63,26)" rx="2" ry="2" />
<text  x="438.77" y="191.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Odd (1 samples, 1.03%)</title><rect x="70.8" y="197" width="12.2" height="15.0" fill="rgb(241,31,7)" rx="2" ry="2" />
<text  x="73.82" y="207.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="666.9" y="197" width="12.2" height="15.0" fill="rgb(227,122,33)" rx="2" ry="2" />
<text  x="669.91" y="207.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 1.03%)</title><rect x="107.3" y="165" width="12.2" height="15.0" fill="rgb(240,26,1)" rx="2" ry="2" />
<text  x="110.32" y="175.5" ></text>
</g>
<g >
<title>futex_wait_cancelable (3 samples, 3.09%)</title><rect x="898.0" y="149" width="36.5" height="15.0" fill="rgb(205,44,13)" rx="2" ry="2" />
<text  x="901.04" y="159.5" >fut..</text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="533.1" y="165" width="12.2" height="15.0" fill="rgb(210,85,26)" rx="2" ry="2" />
<text  x="536.09" y="175.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="630.4" y="181" width="12.2" height="15.0" fill="rgb(219,97,51)" rx="2" ry="2" />
<text  x="633.41" y="191.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="593.9" y="197" width="12.2" height="15.0" fill="rgb(230,25,43)" rx="2" ry="2" />
<text  x="596.92" y="207.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="666.9" y="165" width="12.2" height="15.0" fill="rgb(209,57,42)" rx="2" ry="2" />
<text  x="669.91" y="175.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687ba8ef0, (1 samples, 1.03%)</title><rect x="95.2" y="213" width="12.1" height="15.0" fill="rgb(252,177,16)" rx="2" ry="2" />
<text  x="98.15" y="223.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687baffd0, (1 samples, 1.03%)</title><rect x="277.6" y="213" width="12.2" height="15.0" fill="rgb(213,24,34)" rx="2" ry="2" />
<text  x="280.63" y="223.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 1.03%)</title><rect x="253.3" y="181" width="12.2" height="15.0" fill="rgb(227,57,54)" rx="2" ry="2" />
<text  x="256.30" y="191.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bb8c10, (1 samples, 1.03%)</title><rect x="496.6" y="213" width="12.2" height="15.0" fill="rgb(233,113,38)" rx="2" ry="2" />
<text  x="499.60" y="223.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;New (1 samples, 1.03%)</title><rect x="362.8" y="197" width="12.1" height="15.0" fill="rgb(218,181,22)" rx="2" ry="2" />
<text  x="365.78" y="207.5" ></text>
</g>
<g >
<title>clone() (69 samples, 71.13%)</title><rect x="10.0" y="277" width="839.4" height="15.0" fill="rgb(227,201,18)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >clone()</text>
</g>
<g >
<title>__GI__IO_sputbackc (2 samples, 2.06%)</title><rect x="873.7" y="213" width="24.3" height="15.0" fill="rgb(210,178,51)" rx="2" ry="2" />
<text  x="876.71" y="223.5" >_..</text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Huge (1 samples, 1.03%)</title><rect x="289.8" y="197" width="12.2" height="15.0" fill="rgb(220,58,28)" rx="2" ry="2" />
<text  x="292.79" y="207.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bb75f0, (1 samples, 1.03%)</title><rect x="472.3" y="213" width="12.1" height="15.0" fill="rgb(219,207,39)" rx="2" ry="2" />
<text  x="475.27" y="223.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="119.5" y="181" width="12.1" height="15.0" fill="rgb(209,161,0)" rx="2" ry="2" />
<text  x="122.48" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 1.03%)</title><rect x="703.4" y="149" width="12.2" height="15.0" fill="rgb(226,211,27)" rx="2" ry="2" />
<text  x="706.40" y="159.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;MultiThreadedPageRankComputer::ThreadRAII*&gt; (20 samples, 20.62%)</title><rect x="934.5" y="181" width="243.3" height="15.0" fill="rgb(216,54,16)" rx="2" ry="2" />
<text  x="937.54" y="191.5" >std::_Destroy&lt;MultiThreadedPageR..</text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="241.1" y="165" width="12.2" height="15.0" fill="rgb(215,180,10)" rx="2" ry="2" />
<text  x="244.13" y="175.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bad030, (1 samples, 1.03%)</title><rect x="192.5" y="213" width="12.1" height="15.0" fill="rgb(225,100,7)" rx="2" ry="2" />
<text  x="195.47" y="223.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;const&amp; (1 samples, 1.03%)</title><rect x="849.4" y="229" width="12.1" height="15.0" fill="rgb(211,118,44)" rx="2" ry="2" />
<text  x="852.38" y="239.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 1.03%)</title><rect x="216.8" y="181" width="12.2" height="15.0" fill="rgb(248,97,14)" rx="2" ry="2" />
<text  x="219.80" y="191.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 1.03%)</title><rect x="399.3" y="165" width="12.1" height="15.0" fill="rgb(205,29,18)" rx="2" ry="2" />
<text  x="402.28" y="175.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="496.6" y="197" width="12.2" height="15.0" fill="rgb(254,12,20)" rx="2" ry="2" />
<text  x="499.60" y="207.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 1.03%)</title><rect x="216.8" y="165" width="12.2" height="15.0" fill="rgb(228,5,53)" rx="2" ry="2" />
<text  x="219.80" y="175.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;MultiThreadedPageRankComputer::ThreadRAII*&gt; (20 samples, 20.62%)</title><rect x="934.5" y="165" width="243.3" height="15.0" fill="rgb(206,198,33)" rx="2" ry="2" />
<text  x="937.54" y="175.5" >std::_Destroy_aux&lt;false&gt;::__dest..</text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Great (1 samples, 1.03%)</title><rect x="654.7" y="197" width="12.2" height="15.0" fill="rgb(240,129,52)" rx="2" ry="2" />
<text  x="657.74" y="207.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 1.03%)</title><rect x="143.8" y="165" width="12.2" height="15.0" fill="rgb(252,162,12)" rx="2" ry="2" />
<text  x="146.81" y="175.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bb7530, (1 samples, 1.03%)</title><rect x="447.9" y="213" width="12.2" height="15.0" fill="rgb(240,183,8)" rx="2" ry="2" />
<text  x="450.94" y="223.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="265.5" y="165" width="12.1" height="15.0" fill="rgb(230,202,9)" rx="2" ry="2" />
<text  x="268.46" y="175.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="484.4" y="181" width="12.2" height="15.0" fill="rgb(222,59,6)" rx="2" ry="2" />
<text  x="487.43" y="191.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="302.0" y="181" width="12.1" height="15.0" fill="rgb(206,29,30)" rx="2" ry="2" />
<text  x="304.96" y="191.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bae770, (1 samples, 1.03%)</title><rect x="253.3" y="213" width="12.2" height="15.0" fill="rgb(233,189,49)" rx="2" ry="2" />
<text  x="256.30" y="223.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 1.03%)</title><rect x="727.7" y="181" width="12.2" height="15.0" fill="rgb(213,223,30)" rx="2" ry="2" />
<text  x="730.73" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;MultiThreadedPageRankComputer::ThreadRAII, (20 samples, 20.62%)</title><rect x="934.5" y="213" width="243.3" height="15.0" fill="rgb(235,97,39)" rx="2" ry="2" />
<text  x="937.54" y="223.5" >std::vector&lt;MultiThreadedPageRan..</text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="679.1" y="197" width="12.1" height="15.0" fill="rgb(215,80,47)" rx="2" ry="2" />
<text  x="682.07" y="207.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Odd (1 samples, 1.03%)</title><rect x="569.6" y="197" width="12.2" height="15.0" fill="rgb(217,124,25)" rx="2" ry="2" />
<text  x="572.59" y="207.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="229.0" y="165" width="12.1" height="15.0" fill="rgb(244,215,48)" rx="2" ry="2" />
<text  x="231.97" y="175.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast(long,__cxxabiv1::__class_type_info::__sub_kind, (1 samples, 1.03%)</title><rect x="849.4" y="197" width="12.1" height="15.0" fill="rgb(213,18,49)" rx="2" ry="2" />
<text  x="852.38" y="207.5" ></text>
</g>
<g >
<title>__run_fork_handlers(who=(unknown: (1 samples, 1.03%)</title><rect x="204.6" y="165" width="12.2" height="15.0" fill="rgb(238,79,11)" rx="2" ry="2" />
<text  x="207.64" y="175.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bbebb0, (1 samples, 1.03%)</title><rect x="654.7" y="213" width="12.2" height="15.0" fill="rgb(206,24,3)" rx="2" ry="2" />
<text  x="657.74" y="223.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 1.03%)</title><rect x="362.8" y="181" width="12.1" height="15.0" fill="rgb(226,135,47)" rx="2" ry="2" />
<text  x="365.78" y="191.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bab830, (1 samples, 1.03%)</title><rect x="180.3" y="213" width="12.2" height="15.0" fill="rgb(248,108,38)" rx="2" ry="2" />
<text  x="183.31" y="223.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 1.03%)</title><rect x="46.5" y="101" width="12.2" height="15.0" fill="rgb(231,152,51)" rx="2" ry="2" />
<text  x="49.49" y="111.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="411.4" y="181" width="12.2" height="15.0" fill="rgb(252,2,4)" rx="2" ry="2" />
<text  x="414.44" y="191.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (3 samples, 3.09%)</title><rect x="898.0" y="165" width="36.5" height="15.0" fill="rgb(237,153,27)" rx="2" ry="2" />
<text  x="901.04" y="175.5" >__p..</text>
</g>
<g >
<title>MultiThreadedPageRankComputer::pageRankWorkFunc (9 samples, 9.28%)</title><rect x="739.9" y="149" width="109.5" height="15.0" fill="rgb(249,188,42)" rx="2" ry="2" />
<text  x="742.90" y="159.5" >MultiThreaded..</text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="520.9" y="197" width="12.2" height="15.0" fill="rgb(244,9,43)" rx="2" ry="2" />
<text  x="523.93" y="207.5" ></text>
</g>
<g >
<title>futex_wait_cancelable (4 samples, 4.12%)</title><rect x="739.9" y="53" width="48.7" height="15.0" fill="rgb(205,224,41)" rx="2" ry="2" />
<text  x="742.90" y="63.5" >fute..</text>
</g>
<g >
<title>Page::generateId(this=0x7f3687ba7810, (1 samples, 1.03%)</title><rect x="58.7" y="213" width="12.1" height="15.0" fill="rgb(236,134,40)" rx="2" ry="2" />
<text  x="61.66" y="223.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="10.0" y="165" width="12.2" height="15.0" fill="rgb(223,56,18)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Big (1 samples, 1.03%)</title><rect x="204.6" y="197" width="12.2" height="15.0" fill="rgb(248,40,25)" rx="2" ry="2" />
<text  x="207.64" y="207.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bb4650, (1 samples, 1.03%)</title><rect x="374.9" y="213" width="12.2" height="15.0" fill="rgb(235,156,51)" rx="2" ry="2" />
<text  x="377.95" y="223.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="22.2" y="181" width="12.1" height="15.0" fill="rgb(228,79,22)" rx="2" ry="2" />
<text  x="25.16" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 1.03%)</title><rect x="46.5" y="165" width="12.2" height="15.0" fill="rgb(205,96,51)" rx="2" ry="2" />
<text  x="49.49" y="175.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="374.9" y="165" width="12.2" height="15.0" fill="rgb(248,199,24)" rx="2" ry="2" />
<text  x="377.95" y="175.5" ></text>
</g>
<g >
<title>StdinGenerator::generateNetworkOfSize(this=this@entry=0x7ffea4af1700, (1 samples, 1.03%)</title><rect x="849.4" y="261" width="12.1" height="15.0" fill="rgb(245,192,15)" rx="2" ry="2" />
<text  x="852.38" y="271.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 1.03%)</title><rect x="326.3" y="165" width="12.2" height="15.0" fill="rgb(247,100,6)" rx="2" ry="2" />
<text  x="329.29" y="175.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 1.03%)</title><rect x="691.2" y="181" width="12.2" height="15.0" fill="rgb(250,65,13)" rx="2" ry="2" />
<text  x="694.24" y="191.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="83.0" y="165" width="12.2" height="15.0" fill="rgb(208,116,22)" rx="2" ry="2" />
<text  x="85.99" y="175.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="520.9" y="165" width="12.2" height="15.0" fill="rgb(206,122,41)" rx="2" ry="2" />
<text  x="523.93" y="175.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (9 samples, 9.28%)</title><rect x="739.9" y="181" width="109.5" height="15.0" fill="rgb(209,170,24)" rx="2" ry="2" />
<text  x="742.90" y="191.5" >std::__invoke..</text>
</g>
<g >
<title>arch_fork (1 samples, 1.03%)</title><rect x="508.8" y="165" width="12.1" height="15.0" fill="rgb(211,106,37)" rx="2" ry="2" />
<text  x="511.76" y="175.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bad090, (1 samples, 1.03%)</title><rect x="204.6" y="213" width="12.2" height="15.0" fill="rgb(231,93,23)" rx="2" ry="2" />
<text  x="207.64" y="223.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="350.6" y="181" width="12.2" height="15.0" fill="rgb(221,104,23)" rx="2" ry="2" />
<text  x="353.62" y="191.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Big (1 samples, 1.03%)</title><rect x="326.3" y="197" width="12.2" height="15.0" fill="rgb(207,18,13)" rx="2" ry="2" />
<text  x="329.29" y="207.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="460.1" y="181" width="12.2" height="15.0" fill="rgb(210,188,15)" rx="2" ry="2" />
<text  x="463.10" y="191.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="277.6" y="181" width="12.2" height="15.0" fill="rgb(210,20,28)" rx="2" ry="2" />
<text  x="280.63" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;PageId, (1 samples, 1.03%)</title><rect x="1177.8" y="181" width="12.2" height="15.0" fill="rgb(253,37,42)" rx="2" ry="2" />
<text  x="1180.84" y="191.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="192.5" y="197" width="12.1" height="15.0" fill="rgb(224,224,51)" rx="2" ry="2" />
<text  x="195.47" y="207.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="593.9" y="165" width="12.2" height="15.0" fill="rgb(246,107,4)" rx="2" ry="2" />
<text  x="596.92" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;PageId, (1 samples, 1.03%)</title><rect x="1177.8" y="229" width="12.2" height="15.0" fill="rgb(232,62,40)" rx="2" ry="2" />
<text  x="1180.84" y="239.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 1.03%)</title><rect x="837.2" y="85" width="12.2" height="15.0" fill="rgb(232,157,5)" rx="2" ry="2" />
<text  x="840.22" y="95.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="679.1" y="181" width="12.1" height="15.0" fill="rgb(232,15,46)" rx="2" ry="2" />
<text  x="682.07" y="191.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="10.0" y="197" width="12.2" height="15.0" fill="rgb(241,156,25)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Large (1 samples, 1.03%)</title><rect x="691.2" y="197" width="12.2" height="15.0" fill="rgb(207,107,28)" rx="2" ry="2" />
<text  x="694.24" y="207.5" ></text>
</g>
<g >
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;)() (4 samples, 4.12%)</title><rect x="739.9" y="101" width="48.7" height="15.0" fill="rgb(239,196,9)" rx="2" ry="2" />
<text  x="742.90" y="111.5" >std:..</text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Big (1 samples, 1.03%)</title><rect x="581.8" y="197" width="12.1" height="15.0" fill="rgb(240,10,41)" rx="2" ry="2" />
<text  x="584.75" y="207.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="265.5" y="197" width="12.1" height="15.0" fill="rgb(226,100,45)" rx="2" ry="2" />
<text  x="268.46" y="207.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::gen_id_thread(frst_free=..., (60 samples, 61.86%)</title><rect x="10.0" y="229" width="729.9" height="15.0" fill="rgb(248,178,9)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >MultiThreadedPageRankComputer::gen_id_thread(frst_free=...,</text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="156.0" y="165" width="12.1" height="15.0" fill="rgb(226,141,40)" rx="2" ry="2" />
<text  x="158.98" y="175.5" ></text>
</g>
<g >
<title>std::condition_variable::wait&lt;MultiThreadedPageRankComputer::CyclicBarrier::wait()::{lambda()#1}&gt;(std::unique_lock&lt;std::mutex&gt;&amp;,MultiThreadedPageRankComputer::CyclicBarrier::wait()::{lambda()#1}) (3 samples, 3.09%)</title><rect x="898.0" y="213" width="36.5" height="15.0" fill="rgb(254,93,5)" rx="2" ry="2" />
<text  x="901.04" y="223.5" >std..</text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="557.4" y="181" width="12.2" height="15.0" fill="rgb(229,15,7)" rx="2" ry="2" />
<text  x="560.42" y="191.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void (9 samples, 9.28%)</title><rect x="739.9" y="197" width="109.5" height="15.0" fill="rgb(214,91,50)" rx="2" ry="2" />
<text  x="742.90" y="207.5" >std::thread::..</text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="58.7" y="165" width="12.1" height="15.0" fill="rgb(231,156,12)" rx="2" ry="2" />
<text  x="61.66" y="175.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687ba77b0, (1 samples, 1.03%)</title><rect x="46.5" y="213" width="12.2" height="15.0" fill="rgb(239,101,19)" rx="2" ry="2" />
<text  x="49.49" y="223.5" ></text>
</g>
<g >
<title>main(argc=&lt;optimized (28 samples, 28.87%)</title><rect x="849.4" y="277" width="340.6" height="15.0" fill="rgb(246,174,44)" rx="2" ry="2" />
<text  x="852.38" y="287.5" >main(argc=&lt;optimized</text>
</g>
<g >
<title>MultiThreadedPageRankComputer::CyclicBarrier::wait (3 samples, 3.09%)</title><rect x="898.0" y="229" width="36.5" height="15.0" fill="rgb(217,83,48)" rx="2" ry="2" />
<text  x="901.04" y="239.5" >Mul..</text>
</g>
<g >
<title>??() (69 samples, 71.13%)</title><rect x="10.0" y="245" width="839.4" height="15.0" fill="rgb(208,152,19)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >??()</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 1.03%)</title><rect x="1177.8" y="133" width="12.2" height="15.0" fill="rgb(212,126,11)" rx="2" ry="2" />
<text  x="1180.84" y="143.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (1 samples, 1.03%)</title><rect x="703.4" y="69" width="12.2" height="15.0" fill="rgb(249,39,44)" rx="2" ry="2" />
<text  x="706.40" y="79.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bb1890, (1 samples, 1.03%)</title><rect x="314.1" y="213" width="12.2" height="15.0" fill="rgb(207,43,38)" rx="2" ry="2" />
<text  x="317.12" y="223.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bae6b0, (1 samples, 1.03%)</title><rect x="229.0" y="213" width="12.1" height="15.0" fill="rgb(222,74,36)" rx="2" ry="2" />
<text  x="231.97" y="223.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="715.6" y="165" width="12.1" height="15.0" fill="rgb(248,74,27)" rx="2" ry="2" />
<text  x="718.57" y="175.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;New (1 samples, 1.03%)</title><rect x="216.8" y="197" width="12.2" height="15.0" fill="rgb(223,61,10)" rx="2" ry="2" />
<text  x="219.80" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (5 samples, 5.15%)</title><rect x="788.6" y="117" width="60.8" height="15.0" fill="rgb(219,6,35)" rx="2" ry="2" />
<text  x="791.56" y="127.5" >std::_..</text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="533.1" y="197" width="12.2" height="15.0" fill="rgb(231,23,32)" rx="2" ry="2" />
<text  x="536.09" y="207.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="156.0" y="197" width="12.1" height="15.0" fill="rgb(213,220,39)" rx="2" ry="2" />
<text  x="158.98" y="207.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687baff70, (1 samples, 1.03%)</title><rect x="265.5" y="213" width="12.1" height="15.0" fill="rgb(237,161,43)" rx="2" ry="2" />
<text  x="268.46" y="223.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bc1bb0, (1 samples, 1.03%)</title><rect x="703.4" y="213" width="12.2" height="15.0" fill="rgb(209,124,0)" rx="2" ry="2" />
<text  x="706.40" y="223.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (1 samples, 1.03%)</title><rect x="849.4" y="181" width="12.1" height="15.0" fill="rgb(219,57,23)" rx="2" ry="2" />
<text  x="852.38" y="191.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="350.6" y="197" width="12.2" height="15.0" fill="rgb(252,193,14)" rx="2" ry="2" />
<text  x="353.62" y="207.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687ba60d0, (1 samples, 1.03%)</title><rect x="22.2" y="213" width="12.1" height="15.0" fill="rgb(250,213,38)" rx="2" ry="2" />
<text  x="25.16" y="223.5" ></text>
</g>
<g >
<title>std::basic_istream&lt;char,std::char_traits&lt;char&gt; (3 samples, 3.09%)</title><rect x="861.5" y="229" width="36.5" height="15.0" fill="rgb(228,58,25)" rx="2" ry="2" />
<text  x="864.55" y="239.5" >std..</text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bb2f70, (1 samples, 1.03%)</title><rect x="338.5" y="213" width="12.1" height="15.0" fill="rgb(249,78,52)" rx="2" ry="2" />
<text  x="341.45" y="223.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Great (1 samples, 1.03%)</title><rect x="34.3" y="197" width="12.2" height="15.0" fill="rgb(231,94,26)" rx="2" ry="2" />
<text  x="37.33" y="207.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="423.6" y="181" width="12.2" height="15.0" fill="rgb(253,13,11)" rx="2" ry="2" />
<text  x="426.61" y="191.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="387.1" y="165" width="12.2" height="15.0" fill="rgb(252,123,40)" rx="2" ry="2" />
<text  x="390.11" y="175.5" ></text>
</g>
<g >
<title>__libc_fork() (1 samples, 1.03%)</title><rect x="581.8" y="181" width="12.1" height="15.0" fill="rgb(220,87,25)" rx="2" ry="2" />
<text  x="584.75" y="191.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="192.5" y="181" width="12.1" height="15.0" fill="rgb(220,178,52)" rx="2" ry="2" />
<text  x="195.47" y="191.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 1.03%)</title><rect x="837.2" y="37" width="12.2" height="15.0" fill="rgb(242,138,39)" rx="2" ry="2" />
<text  x="840.22" y="47.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bb3030, (1 samples, 1.03%)</title><rect x="362.8" y="213" width="12.1" height="15.0" fill="rgb(247,51,54)" rx="2" ry="2" />
<text  x="365.78" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=65) (1 samples, 1.03%)</title><rect x="703.4" y="85" width="12.2" height="15.0" fill="rgb(249,39,39)" rx="2" ry="2" />
<text  x="706.40" y="95.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="642.6" y="165" width="12.1" height="15.0" fill="rgb(224,186,44)" rx="2" ry="2" />
<text  x="645.58" y="175.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 1.03%)</title><rect x="107.3" y="181" width="12.2" height="15.0" fill="rgb(215,92,19)" rx="2" ry="2" />
<text  x="110.32" y="191.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 1.03%)</title><rect x="569.6" y="181" width="12.2" height="15.0" fill="rgb(223,74,29)" rx="2" ry="2" />
<text  x="572.59" y="191.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bb8bb0, (1 samples, 1.03%)</title><rect x="484.4" y="213" width="12.2" height="15.0" fill="rgb(254,57,46)" rx="2" ry="2" />
<text  x="487.43" y="223.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Great (1 samples, 1.03%)</title><rect x="472.3" y="197" width="12.1" height="15.0" fill="rgb(220,143,10)" rx="2" ry="2" />
<text  x="475.27" y="207.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bb7590, (1 samples, 1.03%)</title><rect x="460.1" y="213" width="12.2" height="15.0" fill="rgb(209,150,16)" rx="2" ry="2" />
<text  x="463.10" y="223.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="119.5" y="197" width="12.1" height="15.0" fill="rgb(206,125,47)" rx="2" ry="2" />
<text  x="122.48" y="207.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="314.1" y="165" width="12.2" height="15.0" fill="rgb(236,176,23)" rx="2" ry="2" />
<text  x="317.12" y="175.5" ></text>
</g>
<g >
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;)() (3 samples, 3.09%)</title><rect x="898.0" y="197" width="36.5" height="15.0" fill="rgb(238,173,31)" rx="2" ry="2" />
<text  x="901.04" y="207.5" >std..</text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bb1830, (1 samples, 1.03%)</title><rect x="302.0" y="213" width="12.1" height="15.0" fill="rgb(222,24,32)" rx="2" ry="2" />
<text  x="304.96" y="223.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Clueless (1 samples, 1.03%)</title><rect x="618.2" y="197" width="12.2" height="15.0" fill="rgb(209,166,17)" rx="2" ry="2" />
<text  x="621.25" y="207.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 1.03%)</title><rect x="180.3" y="165" width="12.2" height="15.0" fill="rgb(236,48,29)" rx="2" ry="2" />
<text  x="183.31" y="175.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="58.7" y="181" width="12.1" height="15.0" fill="rgb(243,96,4)" rx="2" ry="2" />
<text  x="61.66" y="191.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="557.4" y="165" width="12.2" height="15.0" fill="rgb(237,108,13)" rx="2" ry="2" />
<text  x="560.42" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 1.03%)</title><rect x="46.5" y="133" width="12.2" height="15.0" fill="rgb(220,16,12)" rx="2" ry="2" />
<text  x="49.49" y="143.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bbd2f0, (1 samples, 1.03%)</title><rect x="606.1" y="213" width="12.1" height="15.0" fill="rgb(206,85,39)" rx="2" ry="2" />
<text  x="609.08" y="223.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::CyclicBarrier::await (4 samples, 4.12%)</title><rect x="739.9" y="133" width="48.7" height="15.0" fill="rgb(227,89,33)" rx="2" ry="2" />
<text  x="742.90" y="143.5" >Mult..</text>
</g>
<g >
<title>__libc_fork (1 samples, 1.03%)</title><rect x="326.3" y="181" width="12.2" height="15.0" fill="rgb(235,207,5)" rx="2" ry="2" />
<text  x="329.29" y="191.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (1 samples, 1.03%)</title><rect x="46.5" y="69" width="12.2" height="15.0" fill="rgb(254,9,30)" rx="2" ry="2" />
<text  x="49.49" y="79.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bb18f0, (1 samples, 1.03%)</title><rect x="326.3" y="213" width="12.2" height="15.0" fill="rgb(208,200,45)" rx="2" ry="2" />
<text  x="329.29" y="223.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="715.6" y="181" width="12.1" height="15.0" fill="rgb(219,65,26)" rx="2" ry="2" />
<text  x="718.57" y="191.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bab7d0, (1 samples, 1.03%)</title><rect x="168.1" y="213" width="12.2" height="15.0" fill="rgb(235,152,35)" rx="2" ry="2" />
<text  x="171.14" y="223.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Clueless (1 samples, 1.03%)</title><rect x="727.7" y="197" width="12.2" height="15.0" fill="rgb(241,56,0)" rx="2" ry="2" />
<text  x="730.73" y="207.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (1 samples, 1.03%)</title><rect x="581.8" y="149" width="12.1" height="15.0" fill="rgb(229,203,39)" rx="2" ry="2" />
<text  x="584.75" y="159.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bc0230, (1 samples, 1.03%)</title><rect x="679.1" y="213" width="12.1" height="15.0" fill="rgb(249,43,15)" rx="2" ry="2" />
<text  x="682.07" y="223.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687baa3f0, (1 samples, 1.03%)</title><rect x="131.6" y="213" width="12.2" height="15.0" fill="rgb(220,166,37)" rx="2" ry="2" />
<text  x="134.65" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (4 samples, 4.12%)</title><rect x="788.6" y="101" width="48.6" height="15.0" fill="rgb(209,68,20)" rx="2" ry="2" />
<text  x="791.56" y="111.5" >std:..</text>
</g>
<g >
<title>std::basic_istream&lt;char,std::char_traits&lt;char&gt; (1 samples, 1.03%)</title><rect x="849.4" y="245" width="12.1" height="15.0" fill="rgb(221,143,21)" rx="2" ry="2" />
<text  x="852.38" y="255.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="277.6" y="197" width="12.2" height="15.0" fill="rgb(222,115,50)" rx="2" ry="2" />
<text  x="280.63" y="207.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687ba8f50, (1 samples, 1.03%)</title><rect x="107.3" y="213" width="12.2" height="15.0" fill="rgb(244,145,4)" rx="2" ry="2" />
<text  x="110.32" y="223.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="387.1" y="181" width="12.2" height="15.0" fill="rgb(228,167,19)" rx="2" ry="2" />
<text  x="390.11" y="191.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="423.6" y="165" width="12.2" height="15.0" fill="rgb(238,158,35)" rx="2" ry="2" />
<text  x="426.61" y="175.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bbeb50, (1 samples, 1.03%)</title><rect x="642.6" y="213" width="12.1" height="15.0" fill="rgb(211,93,18)" rx="2" ry="2" />
<text  x="645.58" y="223.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 1.03%)</title><rect x="1177.8" y="149" width="12.2" height="15.0" fill="rgb(209,134,19)" rx="2" ry="2" />
<text  x="1180.84" y="159.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="192.5" y="165" width="12.1" height="15.0" fill="rgb(206,32,54)" rx="2" ry="2" />
<text  x="195.47" y="175.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (5 samples, 5.15%)</title><rect x="788.6" y="133" width="60.8" height="15.0" fill="rgb(235,120,0)" rx="2" ry="2" />
<text  x="791.56" y="143.5" >std::u..</text>
</g>
<g >
<title>__pthread_cond_wait (4 samples, 4.12%)</title><rect x="739.9" y="85" width="48.7" height="15.0" fill="rgb(215,84,51)" rx="2" ry="2" />
<text  x="742.90" y="95.5" >__pt..</text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="58.7" y="197" width="12.1" height="15.0" fill="rgb(213,32,6)" rx="2" ry="2" />
<text  x="61.66" y="207.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId (1 samples, 1.03%)</title><rect x="46.5" y="197" width="12.2" height="15.0" fill="rgb(216,49,38)" rx="2" ry="2" />
<text  x="49.49" y="207.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="423.6" y="197" width="12.2" height="15.0" fill="rgb(244,78,38)" rx="2" ry="2" />
<text  x="426.61" y="207.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bb0030, (1 samples, 1.03%)</title><rect x="289.8" y="213" width="12.2" height="15.0" fill="rgb(220,128,44)" rx="2" ry="2" />
<text  x="292.79" y="223.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="642.6" y="181" width="12.1" height="15.0" fill="rgb(229,197,29)" rx="2" ry="2" />
<text  x="645.58" y="191.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687baa450, (1 samples, 1.03%)</title><rect x="143.8" y="213" width="12.2" height="15.0" fill="rgb(222,14,48)" rx="2" ry="2" />
<text  x="146.81" y="223.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="630.4" y="197" width="12.2" height="15.0" fill="rgb(252,105,49)" rx="2" ry="2" />
<text  x="633.41" y="207.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 1.03%)</title><rect x="34.3" y="165" width="12.2" height="15.0" fill="rgb(254,117,20)" rx="2" ry="2" />
<text  x="37.33" y="175.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="314.1" y="181" width="12.2" height="15.0" fill="rgb(233,219,44)" rx="2" ry="2" />
<text  x="317.12" y="191.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;New (1 samples, 1.03%)</title><rect x="435.8" y="197" width="12.1" height="15.0" fill="rgb(243,208,23)" rx="2" ry="2" />
<text  x="438.77" y="207.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 1.03%)</title><rect x="703.4" y="181" width="12.2" height="15.0" fill="rgb(230,170,3)" rx="2" ry="2" />
<text  x="706.40" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;PageId, (1 samples, 1.03%)</title><rect x="1177.8" y="213" width="12.2" height="15.0" fill="rgb(223,52,27)" rx="2" ry="2" />
<text  x="1180.84" y="223.5" ></text>
</g>
<g >
<title>__libc_fork() (1 samples, 1.03%)</title><rect x="204.6" y="181" width="12.2" height="15.0" fill="rgb(219,51,33)" rx="2" ry="2" />
<text  x="207.64" y="191.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="229.0" y="181" width="12.1" height="15.0" fill="rgb(212,143,14)" rx="2" ry="2" />
<text  x="231.97" y="191.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 1.03%)</title><rect x="703.4" y="101" width="12.2" height="15.0" fill="rgb(228,1,3)" rx="2" ry="2" />
<text  x="706.40" y="111.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bba230, (1 samples, 1.03%)</title><rect x="533.1" y="213" width="12.2" height="15.0" fill="rgb(227,109,27)" rx="2" ry="2" />
<text  x="536.09" y="223.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="411.4" y="165" width="12.2" height="15.0" fill="rgb(212,22,48)" rx="2" ry="2" />
<text  x="414.44" y="175.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Big (1 samples, 1.03%)</title><rect x="107.3" y="197" width="12.2" height="15.0" fill="rgb(207,56,25)" rx="2" ry="2" />
<text  x="110.32" y="207.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="22.2" y="197" width="12.1" height="15.0" fill="rgb(210,160,2)" rx="2" ry="2" />
<text  x="25.16" y="207.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="10.0" y="181" width="12.2" height="15.0" fill="rgb(220,179,39)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="22.2" y="165" width="12.1" height="15.0" fill="rgb(229,199,3)" rx="2" ry="2" />
<text  x="25.16" y="175.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="374.9" y="181" width="12.2" height="15.0" fill="rgb(253,227,44)" rx="2" ry="2" />
<text  x="377.95" y="191.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Odd (1 samples, 1.03%)</title><rect x="399.3" y="197" width="12.1" height="15.0" fill="rgb(247,173,33)" rx="2" ry="2" />
<text  x="402.28" y="207.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 1.03%)</title><rect x="435.8" y="165" width="12.1" height="15.0" fill="rgb(228,148,15)" rx="2" ry="2" />
<text  x="438.77" y="175.5" ></text>
</g>
<g >
<title>std::thread::join()() (20 samples, 20.62%)</title><rect x="934.5" y="117" width="243.3" height="15.0" fill="rgb(253,220,28)" rx="2" ry="2" />
<text  x="937.54" y="127.5" >std::thread::join()()</text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="520.9" y="181" width="12.2" height="15.0" fill="rgb(216,122,34)" rx="2" ry="2" />
<text  x="523.93" y="191.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="83.0" y="181" width="12.2" height="15.0" fill="rgb(235,144,14)" rx="2" ry="2" />
<text  x="85.99" y="191.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="350.6" y="165" width="12.2" height="15.0" fill="rgb(237,10,24)" rx="2" ry="2" />
<text  x="353.62" y="175.5" ></text>
</g>
<g >
<title>pageRankComputationWithNetwork(computer=..., (24 samples, 24.74%)</title><rect x="898.0" y="261" width="292.0" height="15.0" fill="rgb(227,219,39)" rx="2" ry="2" />
<text  x="901.04" y="271.5" >pageRankComputationWithNetwork(computer..</text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bbbbb0, (1 samples, 1.03%)</title><rect x="569.6" y="213" width="12.2" height="15.0" fill="rgb(215,79,54)" rx="2" ry="2" />
<text  x="572.59" y="223.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="338.5" y="197" width="12.1" height="15.0" fill="rgb(234,98,0)" rx="2" ry="2" />
<text  x="341.45" y="207.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;New (1 samples, 1.03%)</title><rect x="143.8" y="197" width="12.2" height="15.0" fill="rgb(241,44,20)" rx="2" ry="2" />
<text  x="146.81" y="207.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="460.1" y="165" width="12.2" height="15.0" fill="rgb(216,115,22)" rx="2" ry="2" />
<text  x="463.10" y="175.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 1.03%)</title><rect x="362.8" y="165" width="12.1" height="15.0" fill="rgb(220,36,11)" rx="2" ry="2" />
<text  x="365.78" y="175.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="277.6" y="165" width="12.2" height="15.0" fill="rgb(238,103,48)" rx="2" ry="2" />
<text  x="280.63" y="175.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;MultiThreadedPageRankComputer::ThreadRAII*, (20 samples, 20.62%)</title><rect x="934.5" y="197" width="243.3" height="15.0" fill="rgb(231,62,39)" rx="2" ry="2" />
<text  x="937.54" y="207.5" >std::_Destroy&lt;MultiThreadedPageR..</text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="83.0" y="197" width="12.2" height="15.0" fill="rgb(253,30,17)" rx="2" ry="2" />
<text  x="85.99" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 1.03%)</title><rect x="837.2" y="101" width="12.2" height="15.0" fill="rgb(254,128,20)" rx="2" ry="2" />
<text  x="840.22" y="111.5" ></text>
</g>
<g >
<title>std::getline&lt;char,std::char_traits&lt;char&gt;, (3 samples, 3.09%)</title><rect x="861.5" y="245" width="36.5" height="15.0" fill="rgb(224,108,2)" rx="2" ry="2" />
<text  x="864.55" y="255.5" >std..</text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="593.9" y="181" width="12.2" height="15.0" fill="rgb(249,182,1)" rx="2" ry="2" />
<text  x="596.92" y="191.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void,void (9 samples, 9.28%)</title><rect x="739.9" y="165" width="109.5" height="15.0" fill="rgb(240,8,32)" rx="2" ry="2" />
<text  x="742.90" y="175.5" >std::__invoke..</text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bb2fd0, (1 samples, 1.03%)</title><rect x="350.6" y="213" width="12.2" height="15.0" fill="rgb(214,101,36)" rx="2" ry="2" />
<text  x="353.62" y="223.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="679.1" y="165" width="12.1" height="15.0" fill="rgb(206,110,50)" rx="2" ry="2" />
<text  x="682.07" y="175.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 1.03%)</title><rect x="70.8" y="181" width="12.2" height="15.0" fill="rgb(251,116,23)" rx="2" ry="2" />
<text  x="73.82" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (4 samples, 4.12%)</title><rect x="788.6" y="85" width="48.6" height="15.0" fill="rgb(243,155,30)" rx="2" ry="2" />
<text  x="791.56" y="95.5" >std:..</text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Clueless (1 samples, 1.03%)</title><rect x="180.3" y="197" width="12.2" height="15.0" fill="rgb(230,193,52)" rx="2" ry="2" />
<text  x="183.31" y="207.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 1.03%)</title><rect x="654.7" y="165" width="12.2" height="15.0" fill="rgb(242,36,11)" rx="2" ry="2" />
<text  x="657.74" y="175.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId (1 samples, 1.03%)</title><rect x="703.4" y="197" width="12.2" height="15.0" fill="rgb(245,44,12)" rx="2" ry="2" />
<text  x="706.40" y="207.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="314.1" y="197" width="12.2" height="15.0" fill="rgb(208,54,7)" rx="2" ry="2" />
<text  x="317.12" y="207.5" ></text>
</g>
<g >
<title>__run_fork_handlers(who=(unknown: (1 samples, 1.03%)</title><rect x="581.8" y="165" width="12.1" height="15.0" fill="rgb(228,116,54)" rx="2" ry="2" />
<text  x="584.75" y="175.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="447.9" y="197" width="12.2" height="15.0" fill="rgb(243,87,5)" rx="2" ry="2" />
<text  x="450.94" y="207.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="156.0" y="181" width="12.1" height="15.0" fill="rgb(233,170,19)" rx="2" ry="2" />
<text  x="158.98" y="191.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=65) (1 samples, 1.03%)</title><rect x="46.5" y="85" width="12.2" height="15.0" fill="rgb(237,27,28)" rx="2" ry="2" />
<text  x="49.49" y="95.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bba290, (1 samples, 1.03%)</title><rect x="545.3" y="213" width="12.1" height="15.0" fill="rgb(215,58,52)" rx="2" ry="2" />
<text  x="548.26" y="223.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bbd350, (1 samples, 1.03%)</title><rect x="618.2" y="213" width="12.2" height="15.0" fill="rgb(212,138,51)" rx="2" ry="2" />
<text  x="621.25" y="223.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 1.03%)</title><rect x="34.3" y="181" width="12.2" height="15.0" fill="rgb(234,76,36)" rx="2" ry="2" />
<text  x="37.33" y="191.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 1.03%)</title><rect x="472.3" y="181" width="12.1" height="15.0" fill="rgb(238,225,30)" rx="2" ry="2" />
<text  x="475.27" y="191.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="119.5" y="165" width="12.1" height="15.0" fill="rgb(236,184,13)" rx="2" ry="2" />
<text  x="122.48" y="175.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 1.03%)</title><rect x="727.7" y="165" width="12.2" height="15.0" fill="rgb(240,202,32)" rx="2" ry="2" />
<text  x="730.73" y="175.5" ></text>
</g>
<g >
<title>__pthread_cond_wait (3 samples, 3.09%)</title><rect x="898.0" y="181" width="36.5" height="15.0" fill="rgb(240,148,49)" rx="2" ry="2" />
<text  x="901.04" y="191.5" >__p..</text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="715.6" y="197" width="12.1" height="15.0" fill="rgb(211,85,34)" rx="2" ry="2" />
<text  x="718.57" y="207.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="387.1" y="197" width="12.2" height="15.0" fill="rgb(219,98,53)" rx="2" ry="2" />
<text  x="390.11" y="207.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="241.1" y="181" width="12.2" height="15.0" fill="rgb(251,89,24)" rx="2" ry="2" />
<text  x="244.13" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;PageId, (1 samples, 1.03%)</title><rect x="1177.8" y="197" width="12.2" height="15.0" fill="rgb(208,207,32)" rx="2" ry="2" />
<text  x="1180.84" y="207.5" ></text>
</g>
<g >
<title>__dynamic_cast() (1 samples, 1.03%)</title><rect x="849.4" y="213" width="12.1" height="15.0" fill="rgb(217,36,18)" rx="2" ry="2" />
<text  x="852.38" y="223.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bc0290, (1 samples, 1.03%)</title><rect x="691.2" y="213" width="12.2" height="15.0" fill="rgb(212,174,4)" rx="2" ry="2" />
<text  x="694.24" y="223.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bb5cd0, (1 samples, 1.03%)</title><rect x="435.8" y="213" width="12.1" height="15.0" fill="rgb(245,41,8)" rx="2" ry="2" />
<text  x="438.77" y="223.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::computeForNetwork (24 samples, 24.74%)</title><rect x="898.0" y="245" width="292.0" height="15.0" fill="rgb(223,80,5)" rx="2" ry="2" />
<text  x="901.04" y="255.5" >MultiThreadedPageRankComputer::computeF..</text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="95.2" y="197" width="12.1" height="15.0" fill="rgb(244,37,54)" rx="2" ry="2" />
<text  x="98.15" y="207.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 1.03%)</title><rect x="289.8" y="181" width="12.2" height="15.0" fill="rgb(235,13,3)" rx="2" ry="2" />
<text  x="292.79" y="191.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687ba7870, (1 samples, 1.03%)</title><rect x="70.8" y="213" width="12.2" height="15.0" fill="rgb(205,188,27)" rx="2" ry="2" />
<text  x="73.82" y="223.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="168.1" y="197" width="12.2" height="15.0" fill="rgb(242,85,31)" rx="2" ry="2" />
<text  x="171.14" y="207.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="411.4" y="197" width="12.2" height="15.0" fill="rgb(225,175,0)" rx="2" ry="2" />
<text  x="414.44" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 1.03%)</title><rect x="46.5" y="149" width="12.2" height="15.0" fill="rgb(253,68,14)" rx="2" ry="2" />
<text  x="49.49" y="159.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="484.4" y="165" width="12.2" height="15.0" fill="rgb(221,146,37)" rx="2" ry="2" />
<text  x="487.43" y="175.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="302.0" y="165" width="12.1" height="15.0" fill="rgb(223,78,50)" rx="2" ry="2" />
<text  x="304.96" y="175.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bc1c70, (1 samples, 1.03%)</title><rect x="727.7" y="213" width="12.2" height="15.0" fill="rgb(229,31,39)" rx="2" ry="2" />
<text  x="730.73" y="223.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="265.5" y="181" width="12.1" height="15.0" fill="rgb(246,149,47)" rx="2" ry="2" />
<text  x="268.46" y="191.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 1.03%)</title><rect x="569.6" y="165" width="12.2" height="15.0" fill="rgb(205,226,2)" rx="2" ry="2" />
<text  x="572.59" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 1.03%)</title><rect x="703.4" y="165" width="12.2" height="15.0" fill="rgb(224,115,33)" rx="2" ry="2" />
<text  x="706.40" y="175.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Small (1 samples, 1.03%)</title><rect x="253.3" y="197" width="12.2" height="15.0" fill="rgb(249,206,30)" rx="2" ry="2" />
<text  x="256.30" y="207.5" ></text>
</g>
<g >
<title>std::condition_variable::wait&lt;MultiThreadedPageRankComputer::CyclicBarrier::await()::{lambda()#1}&gt;(std::unique_lock&lt;std::mutex&gt;&amp;,MultiThreadedPageRankComputer::CyclicBarrier::await()::{lambda()#1}) (4 samples, 4.12%)</title><rect x="739.9" y="117" width="48.7" height="15.0" fill="rgb(250,4,42)" rx="2" ry="2" />
<text  x="742.90" y="127.5" >std:..</text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="229.0" y="197" width="12.1" height="15.0" fill="rgb(251,70,54)" rx="2" ry="2" />
<text  x="231.97" y="207.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::ThreadRAII::~ThreadRAII(this=0x557ffd973610, (20 samples, 20.62%)</title><rect x="934.5" y="133" width="243.3" height="15.0" fill="rgb(209,111,6)" rx="2" ry="2" />
<text  x="937.54" y="143.5" >MultiThreadedPageRankComputer::T..</text>
</g>
<g >
<title>__libc_fork (1 samples, 1.03%)</title><rect x="399.3" y="181" width="12.1" height="15.0" fill="rgb(227,52,22)" rx="2" ry="2" />
<text  x="402.28" y="191.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::generateIds (20 samples, 20.62%)</title><rect x="934.5" y="229" width="243.3" height="15.0" fill="rgb(231,34,19)" rx="2" ry="2" />
<text  x="937.54" y="239.5" >MultiThreadedPageRankComputer::g..</text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bbeaf0, (1 samples, 1.03%)</title><rect x="630.4" y="213" width="12.2" height="15.0" fill="rgb(211,24,48)" rx="2" ry="2" />
<text  x="633.41" y="223.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="606.1" y="165" width="12.1" height="15.0" fill="rgb(220,46,8)" rx="2" ry="2" />
<text  x="609.08" y="175.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="95.2" y="165" width="12.1" height="15.0" fill="rgb(213,167,6)" rx="2" ry="2" />
<text  x="98.15" y="175.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="131.6" y="165" width="12.2" height="15.0" fill="rgb(226,62,10)" rx="2" ry="2" />
<text  x="134.65" y="175.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bad0f0, (1 samples, 1.03%)</title><rect x="216.8" y="213" width="12.2" height="15.0" fill="rgb(253,144,50)" rx="2" ry="2" />
<text  x="219.80" y="223.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 1.03%)</title><rect x="691.2" y="165" width="12.2" height="15.0" fill="rgb(216,134,36)" rx="2" ry="2" />
<text  x="694.24" y="175.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void (9 samples, 9.28%)</title><rect x="739.9" y="229" width="109.5" height="15.0" fill="rgb(238,200,11)" rx="2" ry="2" />
<text  x="742.90" y="239.5" >std::thread::..</text>
</g>
<g >
<title>__libc_fork (1 samples, 1.03%)</title><rect x="508.8" y="181" width="12.1" height="15.0" fill="rgb(246,79,1)" rx="2" ry="2" />
<text  x="511.76" y="191.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687ba8e90, (1 samples, 1.03%)</title><rect x="83.0" y="213" width="12.2" height="15.0" fill="rgb(237,180,34)" rx="2" ry="2" />
<text  x="85.99" y="223.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 1.03%)</title><rect x="472.3" y="165" width="12.1" height="15.0" fill="rgb(246,28,28)" rx="2" ry="2" />
<text  x="475.27" y="175.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bb4710, (1 samples, 1.03%)</title><rect x="399.3" y="213" width="12.1" height="15.0" fill="rgb(226,26,19)" rx="2" ry="2" />
<text  x="402.28" y="223.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=139872176805632, (20 samples, 20.62%)</title><rect x="934.5" y="101" width="243.3" height="15.0" fill="rgb(228,161,36)" rx="2" ry="2" />
<text  x="937.54" y="111.5" >__GI___pthread_timedjoin_ex(thre..</text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bc1c10, (1 samples, 1.03%)</title><rect x="715.6" y="213" width="12.1" height="15.0" fill="rgb(211,120,14)" rx="2" ry="2" />
<text  x="718.57" y="223.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="338.5" y="165" width="12.1" height="15.0" fill="rgb(243,162,32)" rx="2" ry="2" />
<text  x="341.45" y="175.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 1.03%)</title><rect x="46.5" y="181" width="12.2" height="15.0" fill="rgb(223,78,11)" rx="2" ry="2" />
<text  x="49.49" y="191.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="606.1" y="197" width="12.1" height="15.0" fill="rgb(250,51,33)" rx="2" ry="2" />
<text  x="609.08" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 1.03%)</title><rect x="46.5" y="117" width="12.2" height="15.0" fill="rgb(242,221,48)" rx="2" ry="2" />
<text  x="49.49" y="127.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (1 samples, 1.03%)</title><rect x="204.6" y="149" width="12.2" height="15.0" fill="rgb(251,18,43)" rx="2" ry="2" />
<text  x="207.64" y="159.5" ></text>
</g>
<g >
<title>arch_fork (1 samples, 1.03%)</title><rect x="70.8" y="165" width="12.2" height="15.0" fill="rgb(248,164,31)" rx="2" ry="2" />
<text  x="73.82" y="175.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bba1d0, (1 samples, 1.03%)</title><rect x="520.9" y="213" width="12.2" height="15.0" fill="rgb(239,72,28)" rx="2" ry="2" />
<text  x="523.93" y="223.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="374.9" y="197" width="12.2" height="15.0" fill="rgb(214,150,15)" rx="2" ry="2" />
<text  x="377.95" y="207.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="447.9" y="165" width="12.2" height="15.0" fill="rgb(234,58,46)" rx="2" ry="2" />
<text  x="450.94" y="175.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="168.1" y="181" width="12.2" height="15.0" fill="rgb(205,207,54)" rx="2" ry="2" />
<text  x="171.14" y="191.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bbbc10, (1 samples, 1.03%)</title><rect x="581.8" y="213" width="12.1" height="15.0" fill="rgb(221,201,19)" rx="2" ry="2" />
<text  x="584.75" y="223.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="496.6" y="165" width="12.2" height="15.0" fill="rgb(229,106,14)" rx="2" ry="2" />
<text  x="499.60" y="175.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="302.0" y="197" width="12.1" height="15.0" fill="rgb(207,120,36)" rx="2" ry="2" />
<text  x="304.96" y="207.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bb8c70, (1 samples, 1.03%)</title><rect x="508.8" y="213" width="12.1" height="15.0" fill="rgb(207,74,2)" rx="2" ry="2" />
<text  x="511.76" y="223.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="460.1" y="197" width="12.2" height="15.0" fill="rgb(249,168,25)" rx="2" ry="2" />
<text  x="463.10" y="207.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 1.03%)</title><rect x="837.2" y="69" width="12.2" height="15.0" fill="rgb(250,152,53)" rx="2" ry="2" />
<text  x="840.22" y="79.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=&quot;Large (1 samples, 1.03%)</title><rect x="508.8" y="197" width="12.1" height="15.0" fill="rgb(216,135,32)" rx="2" ry="2" />
<text  x="511.76" y="207.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 1.03%)</title><rect x="143.8" y="181" width="12.2" height="15.0" fill="rgb(212,124,49)" rx="2" ry="2" />
<text  x="146.81" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 1.03%)</title><rect x="703.4" y="133" width="12.2" height="15.0" fill="rgb(223,21,53)" rx="2" ry="2" />
<text  x="706.40" y="143.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="484.4" y="197" width="12.2" height="15.0" fill="rgb(212,33,6)" rx="2" ry="2" />
<text  x="487.43" y="207.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bb5c70, (1 samples, 1.03%)</title><rect x="423.6" y="213" width="12.2" height="15.0" fill="rgb(210,149,26)" rx="2" ry="2" />
<text  x="426.61" y="223.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bbbb50, (1 samples, 1.03%)</title><rect x="557.4" y="213" width="12.2" height="15.0" fill="rgb(242,155,53)" rx="2" ry="2" />
<text  x="560.42" y="223.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bb46b0, (1 samples, 1.03%)</title><rect x="387.1" y="213" width="12.2" height="15.0" fill="rgb(219,4,28)" rx="2" ry="2" />
<text  x="390.11" y="223.5" ></text>
</g>
<g >
<title>StdinGenerator::generateNetworkOfSize (3 samples, 3.09%)</title><rect x="861.5" y="261" width="36.5" height="15.0" fill="rgb(205,127,4)" rx="2" ry="2" />
<text  x="864.55" y="271.5" >Std..</text>
</g>
<g >
<title>arch_fork (1 samples, 1.03%)</title><rect x="545.3" y="165" width="12.1" height="15.0" fill="rgb(225,61,15)" rx="2" ry="2" />
<text  x="548.26" y="175.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="533.1" y="181" width="12.2" height="15.0" fill="rgb(232,5,41)" rx="2" ry="2" />
<text  x="536.09" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 1.03%)</title><rect x="1177.8" y="117" width="12.2" height="15.0" fill="rgb(219,76,7)" rx="2" ry="2" />
<text  x="1180.84" y="127.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="666.9" y="181" width="12.2" height="15.0" fill="rgb(210,155,0)" rx="2" ry="2" />
<text  x="669.91" y="191.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 1.03%)</title><rect x="630.4" y="165" width="12.2" height="15.0" fill="rgb(252,146,3)" rx="2" ry="2" />
<text  x="633.41" y="175.5" ></text>
</g>
<g >
<title>Sha256IdGenerator::generateId(content=..., (1 samples, 1.03%)</title><rect x="557.4" y="197" width="12.2" height="15.0" fill="rgb(233,132,48)" rx="2" ry="2" />
<text  x="560.42" y="207.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId, (1 samples, 1.03%)</title><rect x="1177.8" y="165" width="12.2" height="15.0" fill="rgb(221,26,33)" rx="2" ry="2" />
<text  x="1180.84" y="175.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7f3687bbd290, (1 samples, 1.03%)</title><rect x="593.9" y="213" width="12.2" height="15.0" fill="rgb(224,99,14)" rx="2" ry="2" />
<text  x="596.92" y="223.5" ></text>
</g>
</g>
</svg>
