<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="454.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="437" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="437" > </text>
<g id="frames">
<g >
<title>std::_Construct&lt;Page, (1 samples, 0.07%)</title><rect x="1096.4" y="229" width="0.8" height="15.0" fill="rgb(230,175,3)" rx="2" ry="2" />
<text  x="1099.39" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x56017938a610) (1 samples, 0.07%)</title><rect x="1023.4" y="117" width="0.9" height="15.0" fill="rgb(252,163,28)" rx="2" ry="2" />
<text  x="1026.39" y="127.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.07%)</title><rect x="1099.0" y="277" width="0.8" height="15.0" fill="rgb(252,131,29)" rx="2" ry="2" />
<text  x="1101.97" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="1101.5" y="261" width="0.9" height="15.0" fill="rgb(238,94,34)" rx="2" ry="2" />
<text  x="1104.54" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;PageId, (3 samples, 0.22%)</title><rect x="734.8" y="293" width="2.6" height="15.0" fill="rgb(251,13,29)" rx="2" ry="2" />
<text  x="737.83" y="303.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (2 samples, 0.15%)</title><rect x="1175.4" y="293" width="1.7" height="15.0" fill="rgb(239,113,28)" rx="2" ry="2" />
<text  x="1178.40" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x5601796d8910) (1 samples, 0.07%)</title><rect x="1024.3" y="117" width="0.8" height="15.0" fill="rgb(253,38,51)" rx="2" ry="2" />
<text  x="1027.25" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="753.7" y="261" width="0.9" height="15.0" fill="rgb(250,209,19)" rx="2" ry="2" />
<text  x="756.73" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;MultiThreadedPageRankComputer::ThreadRAII*&gt; (2 samples, 0.15%)</title><rect x="976.2" y="293" width="1.7" height="15.0" fill="rgb(216,123,14)" rx="2" ry="2" />
<text  x="979.16" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x560177793d98, (1 samples, 0.07%)</title><rect x="1020.0" y="133" width="0.8" height="15.0" fill="rgb(225,41,16)" rx="2" ry="2" />
<text  x="1022.96" y="143.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.07%)</title><rect x="1008.8" y="229" width="0.9" height="15.0" fill="rgb(237,72,36)" rx="2" ry="2" />
<text  x="1011.79" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="752.9" y="245" width="0.8" height="15.0" fill="rgb(254,36,28)" rx="2" ry="2" />
<text  x="755.87" y="255.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="998.5" y="117" width="0.8" height="15.0" fill="rgb(228,7,22)" rx="2" ry="2" />
<text  x="1001.49" y="127.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (4 samples, 0.29%)</title><rect x="1087.8" y="277" width="3.4" height="15.0" fill="rgb(236,43,2)" rx="2" ry="2" />
<text  x="1090.80" y="287.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (3 samples, 0.22%)</title><rect x="743.4" y="229" width="2.6" height="15.0" fill="rgb(214,47,4)" rx="2" ry="2" />
<text  x="746.42" y="239.5" ></text>
</g>
<g >
<title>operatornew(unsigned (3 samples, 0.22%)</title><rect x="1119.6" y="245" width="2.6" height="15.0" fill="rgb(246,61,38)" rx="2" ry="2" />
<text  x="1122.58" y="255.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (1 samples, 0.07%)</title><rect x="553.6" y="117" width="0.9" height="15.0" fill="rgb(232,133,2)" rx="2" ry="2" />
<text  x="556.62" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (4 samples, 0.29%)</title><rect x="1132.5" y="293" width="3.4" height="15.0" fill="rgb(220,228,28)" rx="2" ry="2" />
<text  x="1135.46" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1004.5" y="149" width="0.9" height="15.0" fill="rgb(233,180,6)" rx="2" ry="2" />
<text  x="1007.50" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.07%)</title><rect x="1096.4" y="197" width="0.8" height="15.0" fill="rgb(208,41,18)" rx="2" ry="2" />
<text  x="1099.39" y="207.5" ></text>
</g>
<g >
<title>PageId::PageId (13 samples, 0.95%)</title><rect x="1141.9" y="213" width="11.2" height="15.0" fill="rgb(241,170,28)" rx="2" ry="2" />
<text  x="1144.91" y="223.5" ></text>
</g>
<g >
<title>PageId::PageId (2 samples, 0.15%)</title><rect x="733.1" y="261" width="1.7" height="15.0" fill="rgb(230,20,50)" rx="2" ry="2" />
<text  x="736.11" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (6 samples, 0.44%)</title><rect x="996.8" y="261" width="5.1" height="15.0" fill="rgb(242,117,24)" rx="2" ry="2" />
<text  x="999.77" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="759.7" y="213" width="0.9" height="15.0" fill="rgb(228,5,14)" rx="2" ry="2" />
<text  x="762.74" y="223.5" ></text>
</g>
<g >
<title>malloc@plt() (1 samples, 0.07%)</title><rect x="753.7" y="197" width="0.9" height="15.0" fill="rgb(236,111,8)" rx="2" ry="2" />
<text  x="756.73" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="743.4" y="133" width="2.6" height="15.0" fill="rgb(226,1,12)" rx="2" ry="2" />
<text  x="746.42" y="143.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="755.4" y="229" width="0.9" height="15.0" fill="rgb(243,215,38)" rx="2" ry="2" />
<text  x="758.44" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="782.9" y="309" width="0.9" height="15.0" fill="rgb(251,166,5)" rx="2" ry="2" />
<text  x="785.93" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x560175cbfda0) (1 samples, 0.07%)</title><rect x="1018.2" y="117" width="0.9" height="15.0" fill="rgb(254,162,35)" rx="2" ry="2" />
<text  x="1021.24" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.51%)</title><rect x="1126.4" y="261" width="6.1" height="15.0" fill="rgb(227,55,40)" rx="2" ry="2" />
<text  x="1129.45" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="703.1" y="293" width="0.8" height="15.0" fill="rgb(220,31,40)" rx="2" ry="2" />
<text  x="706.06" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="1073.2" y="293" width="0.9" height="15.0" fill="rgb(254,206,10)" rx="2" ry="2" />
<text  x="1076.20" y="303.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=70, (3 samples, 0.22%)</title><rect x="1009.7" y="85" width="2.5" height="15.0" fill="rgb(232,199,4)" rx="2" ry="2" />
<text  x="1012.65" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1093.0" y="181" width="0.8" height="15.0" fill="rgb(226,196,47)" rx="2" ry="2" />
<text  x="1095.95" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (4 samples, 0.29%)</title><rect x="792.4" y="213" width="3.4" height="15.0" fill="rgb(249,160,22)" rx="2" ry="2" />
<text  x="795.37" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1181.4" y="197" width="0.9" height="15.0" fill="rgb(234,66,24)" rx="2" ry="2" />
<text  x="1184.41" y="207.5" ></text>
</g>
<g >
<title>PageId::PageId (12 samples, 0.87%)</title><rect x="1122.2" y="325" width="10.3" height="15.0" fill="rgb(253,225,10)" rx="2" ry="2" />
<text  x="1125.15" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="1009.7" y="133" width="2.5" height="15.0" fill="rgb(227,194,45)" rx="2" ry="2" />
<text  x="1012.65" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="14.3" y="197" width="0.9" height="15.0" fill="rgb(237,41,47)" rx="2" ry="2" />
<text  x="17.29" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="701.3" y="277" width="0.9" height="15.0" fill="rgb(250,15,27)" rx="2" ry="2" />
<text  x="704.34" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.07%)</title><rect x="795.8" y="309" width="0.9" height="15.0" fill="rgb(207,2,29)" rx="2" ry="2" />
<text  x="798.81" y="319.5" ></text>
</g>
<g >
<title>SimpleIdGenerator::generateId (4 samples, 0.29%)</title><rect x="14.3" y="309" width="3.4" height="15.0" fill="rgb(231,38,17)" rx="2" ry="2" />
<text  x="17.29" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (4 samples, 0.29%)</title><rect x="996.8" y="229" width="3.4" height="15.0" fill="rgb(206,3,33)" rx="2" ry="2" />
<text  x="999.77" y="239.5" ></text>
</g>
<g >
<title>__find_specmb(format=0x560164521097 (1 samples, 0.07%)</title><rect x="746.9" y="245" width="0.8" height="15.0" fill="rgb(254,222,40)" rx="2" ry="2" />
<text  x="749.86" y="255.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1072.3" y="277" width="0.9" height="15.0" fill="rgb(249,150,42)" rx="2" ry="2" />
<text  x="1075.34" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x560172f71b78, (1 samples, 0.07%)</title><rect x="794.9" y="149" width="0.9" height="15.0" fill="rgb(216,213,7)" rx="2" ry="2" />
<text  x="797.95" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (16 samples, 1.16%)</title><rect x="1141.9" y="293" width="13.7" height="15.0" fill="rgb(225,159,54)" rx="2" ry="2" />
<text  x="1144.91" y="303.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=67, (10 samples, 0.73%)</title><rect x="768.3" y="213" width="8.6" height="15.0" fill="rgb(254,128,52)" rx="2" ry="2" />
<text  x="771.33" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffd3a8f2440, (2 samples, 0.15%)</title><rect x="1069.8" y="277" width="1.7" height="15.0" fill="rgb(208,157,49)" rx="2" ry="2" />
<text  x="1072.77" y="287.5" ></text>
</g>
<g >
<title>PageId::~PageId (4 samples, 0.29%)</title><rect x="1087.8" y="261" width="3.4" height="15.0" fill="rgb(232,194,16)" rx="2" ry="2" />
<text  x="1090.80" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (4 samples, 0.29%)</title><rect x="1087.8" y="309" width="3.4" height="15.0" fill="rgb(251,28,0)" rx="2" ry="2" />
<text  x="1090.80" y="319.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageIdAndRank*, (1 samples, 0.07%)</title><rect x="1181.4" y="325" width="0.9" height="15.0" fill="rgb(206,73,34)" rx="2" ry="2" />
<text  x="1184.41" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (19 samples, 1.38%)</title><rect x="1009.7" y="229" width="16.3" height="15.0" fill="rgb(243,26,8)" rx="2" ry="2" />
<text  x="1012.65" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="1009.7" y="101" width="2.5" height="15.0" fill="rgb(232,10,2)" rx="2" ry="2" />
<text  x="1012.65" y="111.5" ></text>
</g>
<g >
<title>PageId::operator== (1 samples, 0.07%)</title><rect x="703.9" y="229" width="0.9" height="15.0" fill="rgb(232,170,34)" rx="2" ry="2" />
<text  x="706.92" y="239.5" ></text>
</g>
<g >
<title>Page::Page (1 samples, 0.07%)</title><rect x="1096.4" y="213" width="0.8" height="15.0" fill="rgb(234,222,48)" rx="2" ry="2" />
<text  x="1099.39" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1099.8" y="213" width="0.9" height="15.0" fill="rgb(215,188,14)" rx="2" ry="2" />
<text  x="1102.83" y="223.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (789 samples, 57.42%)</title><rect x="17.7" y="293" width="677.6" height="15.0" fill="rgb(211,16,25)" rx="2" ry="2" />
<text  x="20.73" y="303.5" >std::__invoke&lt;void</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="753.7" y="245" width="0.9" height="15.0" fill="rgb(205,75,18)" rx="2" ry="2" />
<text  x="756.73" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="766.6" y="197" width="1.7" height="15.0" fill="rgb(223,70,29)" rx="2" ry="2" />
<text  x="769.61" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId,std::pair&lt;PageId (5 samples, 0.36%)</title><rect x="1083.5" y="325" width="4.3" height="15.0" fill="rgb(226,157,7)" rx="2" ry="2" />
<text  x="1086.51" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1183.1" y="213" width="0.9" height="15.0" fill="rgb(214,160,30)" rx="2" ry="2" />
<text  x="1186.13" y="223.5" ></text>
</g>
<g >
<title>operatornew(unsigned (3 samples, 0.22%)</title><rect x="1093.8" y="213" width="2.6" height="15.0" fill="rgb(247,66,48)" rx="2" ry="2" />
<text  x="1096.81" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1099.0" y="229" width="0.8" height="15.0" fill="rgb(210,135,9)" rx="2" ry="2" />
<text  x="1101.97" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;PageId, (2 samples, 0.15%)</title><rect x="738.3" y="309" width="1.7" height="15.0" fill="rgb(214,85,24)" rx="2" ry="2" />
<text  x="741.27" y="319.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (23 samples, 1.67%)</title><rect x="486.6" y="165" width="19.8" height="15.0" fill="rgb(208,211,21)" rx="2" ry="2" />
<text  x="489.64" y="175.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f4af0000020, (1 samples, 0.07%)</title><rect x="694.5" y="133" width="0.8" height="15.0" fill="rgb(215,193,11)" rx="2" ry="2" />
<text  x="697.47" y="143.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.07%)</title><rect x="16.0" y="165" width="0.9" height="15.0" fill="rgb(215,207,21)" rx="2" ry="2" />
<text  x="19.01" y="175.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (4 samples, 0.29%)</title><rect x="1132.5" y="229" width="3.4" height="15.0" fill="rgb(231,103,9)" rx="2" ry="2" />
<text  x="1135.46" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (96 samples, 6.99%)</title><rect x="516.7" y="165" width="82.4" height="15.0" fill="rgb(206,196,37)" rx="2" ry="2" />
<text  x="519.70" y="175.5" >std::__de..</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (1 samples, 0.07%)</title><rect x="703.9" y="325" width="0.9" height="15.0" fill="rgb(237,138,32)" rx="2" ry="2" />
<text  x="706.92" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="1073.2" y="245" width="0.9" height="15.0" fill="rgb(241,87,9)" rx="2" ry="2" />
<text  x="1076.20" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="733.1" y="165" width="1.7" height="15.0" fill="rgb(235,220,25)" rx="2" ry="2" />
<text  x="736.11" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="1082.6" y="293" width="0.9" height="15.0" fill="rgb(227,11,12)" rx="2" ry="2" />
<text  x="1085.65" y="303.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.07%)</title><rect x="1140.2" y="293" width="0.8" height="15.0" fill="rgb(217,49,26)" rx="2" ry="2" />
<text  x="1143.19" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.51%)</title><rect x="1126.4" y="277" width="6.1" height="15.0" fill="rgb(225,11,23)" rx="2" ry="2" />
<text  x="1129.45" y="287.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=70, (1 samples, 0.07%)</title><rect x="1099.8" y="197" width="0.9" height="15.0" fill="rgb(220,36,53)" rx="2" ry="2" />
<text  x="1102.83" y="207.5" ></text>
</g>
<g >
<title>std::(__val=242) (1 samples, 0.07%)</title><rect x="748.6" y="309" width="0.8" height="15.0" fill="rgb(239,214,2)" rx="2" ry="2" />
<text  x="751.57" y="319.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageIdAndRank*&gt; (1 samples, 0.07%)</title><rect x="1181.4" y="293" width="0.9" height="15.0" fill="rgb(245,172,11)" rx="2" ry="2" />
<text  x="1184.41" y="303.5" ></text>
</g>
<g >
<title>Page::getId (2 samples, 0.15%)</title><rect x="977.9" y="341" width="1.7" height="15.0" fill="rgb(220,18,25)" rx="2" ry="2" />
<text  x="980.87" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.15%)</title><rect x="1102.4" y="277" width="1.7" height="15.0" fill="rgb(245,203,50)" rx="2" ry="2" />
<text  x="1105.40" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x56017bd701d0, (1 samples, 0.07%)</title><rect x="792.4" y="53" width="0.8" height="15.0" fill="rgb(225,96,16)" rx="2" ry="2" />
<text  x="795.37" y="63.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="794.9" y="117" width="0.9" height="15.0" fill="rgb(253,26,13)" rx="2" ry="2" />
<text  x="797.95" y="127.5" ></text>
</g>
<g >
<title>NetworkWithoutManyEdgesGenerator::generateNetworkOfSize (4 samples, 0.29%)</title><rect x="1096.4" y="357" width="3.4" height="15.0" fill="rgb(232,113,51)" rx="2" ry="2" />
<text  x="1099.39" y="367.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;Page*&gt; (4 samples, 0.29%)</title><rect x="1183.1" y="293" width="3.5" height="15.0" fill="rgb(231,184,33)" rx="2" ry="2" />
<text  x="1186.13" y="303.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (1 samples, 0.07%)</title><rect x="746.9" y="229" width="0.8" height="15.0" fill="rgb(239,101,25)" rx="2" ry="2" />
<text  x="749.86" y="239.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (1 samples, 0.07%)</title><rect x="797.5" y="245" width="0.9" height="15.0" fill="rgb(246,196,23)" rx="2" ry="2" />
<text  x="800.53" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.07%)</title><rect x="763.2" y="213" width="0.8" height="15.0" fill="rgb(249,216,4)" rx="2" ry="2" />
<text  x="766.17" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="733.1" y="213" width="1.7" height="15.0" fill="rgb(207,167,46)" rx="2" ry="2" />
<text  x="736.11" y="223.5" ></text>
</g>
<g >
<title>PageId::PageId (3 samples, 0.22%)</title><rect x="740.0" y="197" width="2.6" height="15.0" fill="rgb(253,143,27)" rx="2" ry="2" />
<text  x="742.99" y="207.5" ></text>
</g>
<g >
<title>_int_malloc (2 samples, 0.15%)</title><rect x="730.5" y="213" width="1.8" height="15.0" fill="rgb(213,22,2)" rx="2" ry="2" />
<text  x="733.54" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (5 samples, 0.36%)</title><rect x="697.9" y="325" width="4.3" height="15.0" fill="rgb(218,153,30)" rx="2" ry="2" />
<text  x="700.90" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="795.8" y="293" width="0.9" height="15.0" fill="rgb(231,202,15)" rx="2" ry="2" />
<text  x="798.81" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.07%)</title><rect x="783.8" y="277" width="0.8" height="15.0" fill="rgb(209,167,27)" rx="2" ry="2" />
<text  x="786.78" y="287.5" ></text>
</g>
<g >
<title>clone() (798 samples, 58.08%)</title><rect x="10.0" y="389" width="685.3" height="15.0" fill="rgb(208,123,45)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >clone()</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="764.9" y="213" width="0.8" height="15.0" fill="rgb(251,9,0)" rx="2" ry="2" />
<text  x="767.89" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="726.2" y="261" width="0.9" height="15.0" fill="rgb(247,75,19)" rx="2" ry="2" />
<text  x="729.24" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="743.4" y="85" width="1.7" height="15.0" fill="rgb(247,62,47)" rx="2" ry="2" />
<text  x="746.42" y="95.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (4 samples, 0.29%)</title><rect x="274.5" y="181" width="3.4" height="15.0" fill="rgb(224,33,27)" rx="2" ry="2" />
<text  x="277.51" y="191.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=&lt;optimized (1 samples, 0.07%)</title><rect x="506.4" y="165" width="0.8" height="15.0" fill="rgb(248,116,17)" rx="2" ry="2" />
<text  x="509.39" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="753.7" y="277" width="0.9" height="15.0" fill="rgb(251,121,47)" rx="2" ry="2" />
<text  x="756.73" y="287.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.07%)</title><rect x="799.2" y="293" width="0.9" height="15.0" fill="rgb(248,63,53)" rx="2" ry="2" />
<text  x="802.24" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;MultiThreadedPageRankComputer::ThreadRAII*&gt; (2 samples, 0.15%)</title><rect x="976.2" y="277" width="1.7" height="15.0" fill="rgb(226,202,42)" rx="2" ry="2" />
<text  x="979.16" y="287.5" ></text>
</g>
<g >
<title>PageIdAndRank::PageIdAndRank (2 samples, 0.15%)</title><rect x="979.6" y="341" width="1.7" height="15.0" fill="rgb(229,223,15)" rx="2" ry="2" />
<text  x="982.59" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (4 samples, 0.29%)</title><rect x="274.5" y="149" width="3.4" height="15.0" fill="rgb(208,214,37)" rx="2" ry="2" />
<text  x="277.51" y="159.5" ></text>
</g>
<g >
<title>tcache_get(tc_idx=3) (1 samples, 0.07%)</title><rect x="752.9" y="181" width="0.8" height="15.0" fill="rgb(224,125,9)" rx="2" ry="2" />
<text  x="755.87" y="191.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;Page*&gt;, (1 samples, 0.07%)</title><rect x="1096.4" y="261" width="0.8" height="15.0" fill="rgb(229,153,17)" rx="2" ry="2" />
<text  x="1099.39" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.66%)</title><rect x="1111.0" y="197" width="7.7" height="15.0" fill="rgb(236,56,15)" rx="2" ry="2" />
<text  x="1113.99" y="207.5" ></text>
</g>
<g >
<title>PageId::PageId (5 samples, 0.36%)</title><rect x="697.9" y="341" width="4.3" height="15.0" fill="rgb(225,142,7)" rx="2" ry="2" />
<text  x="700.90" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x56016719a678, (1 samples, 0.07%)</title><rect x="1014.8" y="133" width="0.9" height="15.0" fill="rgb(249,91,22)" rx="2" ry="2" />
<text  x="1017.80" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x560184f41048, (1 samples, 0.07%)</title><rect x="1137.6" y="133" width="0.9" height="15.0" fill="rgb(221,40,46)" rx="2" ry="2" />
<text  x="1140.61" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="977.9" y="293" width="1.7" height="15.0" fill="rgb(230,195,36)" rx="2" ry="2" />
<text  x="980.87" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.44%)</title><rect x="1127.3" y="181" width="5.2" height="15.0" fill="rgb(230,61,12)" rx="2" ry="2" />
<text  x="1130.31" y="191.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal(s=s@entry=0x7ffd3a8f2430, (1 samples, 0.07%)</title><rect x="695.3" y="261" width="0.9" height="15.0" fill="rgb(231,20,40)" rx="2" ry="2" />
<text  x="698.33" y="271.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__rhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a8725991&quot;, (1 samples, 0.07%)</title><rect x="298.6" y="117" width="0.8" height="15.0" fill="rgb(223,152,17)" rx="2" ry="2" />
<text  x="301.56" y="127.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (2 samples, 0.15%)</title><rect x="787.2" y="213" width="1.7" height="15.0" fill="rgb(209,154,35)" rx="2" ry="2" />
<text  x="790.22" y="223.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=139960388998912, (1 samples, 0.07%)</title><rect x="977.0" y="213" width="0.9" height="15.0" fill="rgb(239,112,54)" rx="2" ry="2" />
<text  x="980.02" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId,std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="1179.7" y="325" width="0.9" height="15.0" fill="rgb(237,87,52)" rx="2" ry="2" />
<text  x="1182.69" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (3 samples, 0.22%)</title><rect x="754.6" y="245" width="2.6" height="15.0" fill="rgb(234,83,42)" rx="2" ry="2" />
<text  x="757.59" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="14.3" y="213" width="0.9" height="15.0" fill="rgb(246,63,16)" rx="2" ry="2" />
<text  x="17.29" y="223.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal(s=s@entry=0x7ffd3a8f2430, (1 samples, 0.07%)</title><rect x="749.4" y="261" width="0.9" height="15.0" fill="rgb(221,188,5)" rx="2" ry="2" />
<text  x="752.43" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=70) (1 samples, 0.07%)</title><rect x="979.6" y="229" width="0.9" height="15.0" fill="rgb(251,100,13)" rx="2" ry="2" />
<text  x="982.59" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;MultiThreadedPageRankComputer::ThreadRAII&gt; (2 samples, 0.15%)</title><rect x="976.2" y="261" width="1.7" height="15.0" fill="rgb(240,126,10)" rx="2" ry="2" />
<text  x="979.16" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="979.6" y="309" width="1.7" height="15.0" fill="rgb(212,64,10)" rx="2" ry="2" />
<text  x="982.59" y="319.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::ThreadRAII::~ThreadRAII(this=0x5601655ac050, (1 samples, 0.07%)</title><rect x="977.0" y="245" width="0.9" height="15.0" fill="rgb(234,58,2)" rx="2" ry="2" />
<text  x="980.02" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x560178178050) (1 samples, 0.07%)</title><rect x="1020.8" y="117" width="0.9" height="15.0" fill="rgb(238,164,47)" rx="2" ry="2" />
<text  x="1023.82" y="127.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::gen_id_thread(frst_free=..., (4 samples, 0.29%)</title><rect x="14.3" y="341" width="3.4" height="15.0" fill="rgb(237,3,8)" rx="2" ry="2" />
<text  x="17.29" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.51%)</title><rect x="1126.4" y="245" width="6.1" height="15.0" fill="rgb(252,115,39)" rx="2" ry="2" />
<text  x="1129.45" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="1073.2" y="165" width="0.9" height="15.0" fill="rgb(225,208,43)" rx="2" ry="2" />
<text  x="1076.20" y="175.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;PageId (1 samples, 0.07%)</title><rect x="762.3" y="309" width="0.9" height="15.0" fill="rgb(215,30,25)" rx="2" ry="2" />
<text  x="765.31" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x560166b95030) (1 samples, 0.07%)</title><rect x="1088.7" y="165" width="0.8" height="15.0" fill="rgb(205,48,47)" rx="2" ry="2" />
<text  x="1091.66" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="15.2" y="261" width="2.5" height="15.0" fill="rgb(225,176,10)" rx="2" ry="2" />
<text  x="18.15" y="271.5" ></text>
</g>
<g >
<title>Page::generateId (5 samples, 0.36%)</title><rect x="752.9" y="325" width="4.3" height="15.0" fill="rgb(205,176,46)" rx="2" ry="2" />
<text  x="755.87" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;Page*, (4 samples, 0.29%)</title><rect x="1183.1" y="325" width="3.5" height="15.0" fill="rgb(223,123,39)" rx="2" ry="2" />
<text  x="1186.13" y="335.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (2 samples, 0.15%)</title><rect x="1186.6" y="261" width="1.7" height="15.0" fill="rgb(214,87,30)" rx="2" ry="2" />
<text  x="1189.56" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (2 samples, 0.15%)</title><rect x="1136.8" y="245" width="1.7" height="15.0" fill="rgb(215,131,36)" rx="2" ry="2" />
<text  x="1139.75" y="255.5" ></text>
</g>
<g >
<title>NetworkGenerator::generatePageFromNum (2 samples, 0.15%)</title><rect x="1097.2" y="341" width="1.8" height="15.0" fill="rgb(232,52,47)" rx="2" ry="2" />
<text  x="1100.25" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.15%)</title><rect x="1065.5" y="181" width="1.7" height="15.0" fill="rgb(211,40,34)" rx="2" ry="2" />
<text  x="1068.47" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId, (1 samples, 0.07%)</title><rect x="1180.6" y="261" width="0.8" height="15.0" fill="rgb(246,126,51)" rx="2" ry="2" />
<text  x="1183.55" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="977.9" y="309" width="1.7" height="15.0" fill="rgb(233,224,43)" rx="2" ry="2" />
<text  x="980.87" y="319.5" ></text>
</g>
<g >
<title>std::thread::join()() (1 samples, 0.07%)</title><rect x="976.2" y="229" width="0.8" height="15.0" fill="rgb(246,1,10)" rx="2" ry="2" />
<text  x="979.16" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.29%)</title><rect x="996.8" y="197" width="3.4" height="15.0" fill="rgb(220,219,24)" rx="2" ry="2" />
<text  x="999.77" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="792.4" y="101" width="2.5" height="15.0" fill="rgb(251,158,12)" rx="2" ry="2" />
<text  x="795.37" y="111.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.07%)</title><rect x="782.9" y="277" width="0.9" height="15.0" fill="rgb(242,114,2)" rx="2" ry="2" />
<text  x="785.93" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.15%)</title><rect x="796.7" y="293" width="1.7" height="15.0" fill="rgb(211,39,12)" rx="2" ry="2" />
<text  x="799.67" y="303.5" ></text>
</g>
<g >
<title>SimpleNetworkGenerator::generateNetworkOfSize (1 samples, 0.07%)</title><rect x="695.3" y="357" width="0.9" height="15.0" fill="rgb(208,101,29)" rx="2" ry="2" />
<text  x="698.33" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=70) (1 samples, 0.07%)</title><rect x="1005.4" y="117" width="0.8" height="15.0" fill="rgb(217,162,14)" rx="2" ry="2" />
<text  x="1008.36" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.07%)</title><rect x="794.9" y="181" width="0.9" height="15.0" fill="rgb(236,31,20)" rx="2" ry="2" />
<text  x="797.95" y="191.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,std::vector&lt;PageId, (1 samples, 0.07%)</title><rect x="703.1" y="341" width="0.8" height="15.0" fill="rgb(243,17,23)" rx="2" ry="2" />
<text  x="706.06" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.29%)</title><rect x="1009.7" y="165" width="3.4" height="15.0" fill="rgb(238,190,17)" rx="2" ry="2" />
<text  x="1012.65" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;Page, (6 samples, 0.44%)</title><rect x="1183.1" y="341" width="5.2" height="15.0" fill="rgb(244,160,53)" rx="2" ry="2" />
<text  x="1186.13" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (12 samples, 0.87%)</title><rect x="1109.3" y="309" width="10.3" height="15.0" fill="rgb(219,142,16)" rx="2" ry="2" />
<text  x="1112.27" y="319.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.07%)</title><rect x="1017.4" y="117" width="0.8" height="15.0" fill="rgb(223,174,10)" rx="2" ry="2" />
<text  x="1020.38" y="127.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.07%)</title><rect x="760.6" y="341" width="0.9" height="15.0" fill="rgb(225,85,24)" rx="2" ry="2" />
<text  x="763.60" y="351.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=70, (1 samples, 0.07%)</title><rect x="1093.0" y="165" width="0.8" height="15.0" fill="rgb(208,195,8)" rx="2" ry="2" />
<text  x="1095.95" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageIdAndRank&gt;::deallocate(this=0x7ffd3a8f2a90, (2 samples, 0.15%)</title><rect x="1188.3" y="293" width="1.7" height="15.0" fill="rgb(247,138,20)" rx="2" ry="2" />
<text  x="1191.28" y="303.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void (789 samples, 57.42%)</title><rect x="17.7" y="309" width="677.6" height="15.0" fill="rgb(251,82,12)" rx="2" ry="2" />
<text  x="20.73" y="319.5" >std::thread::_Invoker&lt;std::tuple&lt;void</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1099.0" y="181" width="0.8" height="15.0" fill="rgb(235,57,13)" rx="2" ry="2" />
<text  x="1101.97" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (1 samples, 0.07%)</title><rect x="1099.0" y="293" width="0.8" height="15.0" fill="rgb(250,3,16)" rx="2" ry="2" />
<text  x="1101.97" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (5 samples, 0.36%)</title><rect x="1004.5" y="181" width="4.3" height="15.0" fill="rgb(241,109,50)" rx="2" ry="2" />
<text  x="1007.50" y="191.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=56) (3 samples, 0.22%)</title><rect x="1153.1" y="213" width="2.5" height="15.0" fill="rgb(216,52,50)" rx="2" ry="2" />
<text  x="1156.07" y="223.5" ></text>
</g>
<g >
<title>_itoa_word(value=value@entry=1792, (1 samples, 0.07%)</title><rect x="747.7" y="245" width="0.9" height="15.0" fill="rgb(215,125,39)" rx="2" ry="2" />
<text  x="750.71" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (4 samples, 0.29%)</title><rect x="792.4" y="245" width="3.4" height="15.0" fill="rgb(237,81,35)" rx="2" ry="2" />
<text  x="795.37" y="255.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__rhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a8725443&quot;, (1 samples, 0.07%)</title><rect x="554.5" y="117" width="0.8" height="15.0" fill="rgb(221,137,23)" rx="2" ry="2" />
<text  x="557.48" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (3 samples, 0.22%)</title><rect x="1136.8" y="293" width="2.5" height="15.0" fill="rgb(208,23,46)" rx="2" ry="2" />
<text  x="1139.75" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="1101.5" y="293" width="2.6" height="15.0" fill="rgb(235,217,40)" rx="2" ry="2" />
<text  x="1104.54" y="303.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::pageRankWorkFunc(index=1, (5 samples, 0.36%)</title><rect x="28.0" y="261" width="4.3" height="15.0" fill="rgb(206,105,15)" rx="2" ry="2" />
<text  x="31.03" y="271.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="794.9" y="133" width="0.9" height="15.0" fill="rgb(213,33,39)" rx="2" ry="2" />
<text  x="797.95" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="695.3" y="293" width="0.9" height="15.0" fill="rgb(230,11,38)" rx="2" ry="2" />
<text  x="698.33" y="303.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::computeForNetwork (97 samples, 7.06%)</title><rect x="1099.8" y="357" width="83.3" height="15.0" fill="rgb(205,111,2)" rx="2" ry="2" />
<text  x="1102.83" y="367.5" >SingleThr..</text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.07%)</title><rect x="1140.2" y="261" width="0.8" height="15.0" fill="rgb(233,151,43)" rx="2" ry="2" />
<text  x="1143.19" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="759.7" y="181" width="0.9" height="15.0" fill="rgb(234,159,16)" rx="2" ry="2" />
<text  x="762.74" y="191.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.07%)</title><rect x="694.5" y="165" width="0.8" height="15.0" fill="rgb(209,108,12)" rx="2" ry="2" />
<text  x="697.47" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="1119.6" y="309" width="2.6" height="15.0" fill="rgb(217,197,13)" rx="2" ry="2" />
<text  x="1122.58" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (6 samples, 0.44%)</title><rect x="783.8" y="293" width="5.1" height="15.0" fill="rgb(242,36,16)" rx="2" ry="2" />
<text  x="786.78" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.29%)</title><rect x="1093.0" y="277" width="3.4" height="15.0" fill="rgb(242,196,27)" rx="2" ry="2" />
<text  x="1095.95" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;Page, (1 samples, 0.07%)</title><rect x="1096.4" y="309" width="0.8" height="15.0" fill="rgb(205,18,7)" rx="2" ry="2" />
<text  x="1099.39" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (4 samples, 0.29%)</title><rect x="1079.2" y="309" width="3.4" height="15.0" fill="rgb(215,117,34)" rx="2" ry="2" />
<text  x="1082.21" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (2 samples, 0.15%)</title><rect x="1159.9" y="293" width="1.8" height="15.0" fill="rgb(223,18,13)" rx="2" ry="2" />
<text  x="1162.94" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;PageId, (3 samples, 0.22%)</title><rect x="734.8" y="277" width="2.6" height="15.0" fill="rgb(251,143,51)" rx="2" ry="2" />
<text  x="737.83" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (2 samples, 0.15%)</title><rect x="1136.8" y="229" width="1.7" height="15.0" fill="rgb(225,80,35)" rx="2" ry="2" />
<text  x="1139.75" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (4 samples, 0.29%)</title><rect x="1087.8" y="325" width="3.4" height="15.0" fill="rgb(232,38,38)" rx="2" ry="2" />
<text  x="1090.80" y="335.5" ></text>
</g>
<g >
<title>Page::getId (2 samples, 0.15%)</title><rect x="763.2" y="341" width="1.7" height="15.0" fill="rgb(238,198,47)" rx="2" ry="2" />
<text  x="766.17" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (18 samples, 1.31%)</title><rect x="1104.1" y="325" width="15.5" height="15.0" fill="rgb(249,27,48)" rx="2" ry="2" />
<text  x="1107.12" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (4 samples, 0.29%)</title><rect x="1093.0" y="309" width="3.4" height="15.0" fill="rgb(227,98,30)" rx="2" ry="2" />
<text  x="1095.95" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1180.6" y="181" width="0.8" height="15.0" fill="rgb(254,125,32)" rx="2" ry="2" />
<text  x="1183.55" y="191.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=68, (1 samples, 0.07%)</title><rect x="743.4" y="53" width="0.9" height="15.0" fill="rgb(217,64,43)" rx="2" ry="2" />
<text  x="746.42" y="63.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (2 samples, 0.15%)</title><rect x="1091.2" y="293" width="1.8" height="15.0" fill="rgb(244,228,4)" rx="2" ry="2" />
<text  x="1094.24" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (1 samples, 0.07%)</title><rect x="703.1" y="197" width="0.8" height="15.0" fill="rgb(235,77,33)" rx="2" ry="2" />
<text  x="706.06" y="207.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="1109.3" y="197" width="1.7" height="15.0" fill="rgb(231,75,26)" rx="2" ry="2" />
<text  x="1112.27" y="207.5" ></text>
</g>
<g >
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;)() (25 samples, 1.82%)</title><rect x="704.8" y="309" width="21.4" height="15.0" fill="rgb(248,53,2)" rx="2" ry="2" />
<text  x="707.77" y="319.5" >s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.07%)</title><rect x="1137.6" y="149" width="0.9" height="15.0" fill="rgb(225,23,51)" rx="2" ry="2" />
<text  x="1140.61" y="159.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=68) (2 samples, 0.15%)</title><rect x="757.2" y="181" width="1.7" height="15.0" fill="rgb(244,43,12)" rx="2" ry="2" />
<text  x="760.16" y="191.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (4 samples, 0.29%)</title><rect x="792.4" y="229" width="3.4" height="15.0" fill="rgb(205,68,53)" rx="2" ry="2" />
<text  x="795.37" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x5601730e3f88, (1 samples, 0.07%)</title><rect x="1015.7" y="133" width="0.8" height="15.0" fill="rgb(223,215,29)" rx="2" ry="2" />
<text  x="1018.66" y="143.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (1 samples, 0.07%)</title><rect x="1073.2" y="133" width="0.9" height="15.0" fill="rgb(220,219,29)" rx="2" ry="2" />
<text  x="1076.20" y="143.5" ></text>
</g>
<g >
<title>_itoa_word(value=23026, (1 samples, 0.07%)</title><rect x="1097.2" y="261" width="0.9" height="15.0" fill="rgb(234,29,3)" rx="2" ry="2" />
<text  x="1100.25" y="271.5" ></text>
</g>
<g >
<title>Page::generateId (1 samples, 0.07%)</title><rect x="1100.7" y="341" width="0.8" height="15.0" fill="rgb(206,217,26)" rx="2" ry="2" />
<text  x="1103.68" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (3 samples, 0.22%)</title><rect x="796.7" y="309" width="2.5" height="15.0" fill="rgb(207,129,15)" rx="2" ry="2" />
<text  x="799.67" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="743.4" y="69" width="1.7" height="15.0" fill="rgb(216,228,12)" rx="2" ry="2" />
<text  x="746.42" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="14.3" y="277" width="0.9" height="15.0" fill="rgb(239,118,52)" rx="2" ry="2" />
<text  x="17.29" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x56017cfa9020) (1 samples, 0.07%)</title><rect x="1025.1" y="117" width="0.9" height="15.0" fill="rgb(239,112,7)" rx="2" ry="2" />
<text  x="1028.11" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="697.0" y="197" width="0.9" height="15.0" fill="rgb(209,130,19)" rx="2" ry="2" />
<text  x="700.05" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="758.9" y="197" width="0.8" height="15.0" fill="rgb(232,135,15)" rx="2" ry="2" />
<text  x="761.88" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="752.9" y="277" width="0.8" height="15.0" fill="rgb(247,209,41)" rx="2" ry="2" />
<text  x="755.87" y="287.5" ></text>
</g>
<g >
<title>PageIdAndRank::~PageIdAndRank (1 samples, 0.07%)</title><rect x="1181.4" y="261" width="0.9" height="15.0" fill="rgb(234,144,8)" rx="2" ry="2" />
<text  x="1184.41" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (8 samples, 0.58%)</title><rect x="1060.3" y="293" width="6.9" height="15.0" fill="rgb(220,176,35)" rx="2" ry="2" />
<text  x="1063.32" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank, (1 samples, 0.07%)</title><rect x="1182.3" y="325" width="0.8" height="15.0" fill="rgb(221,106,44)" rx="2" ry="2" />
<text  x="1185.27" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (1 samples, 0.07%)</title><rect x="759.7" y="277" width="0.9" height="15.0" fill="rgb(207,65,0)" rx="2" ry="2" />
<text  x="762.74" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (4 samples, 0.29%)</title><rect x="1087.8" y="197" width="3.4" height="15.0" fill="rgb(253,155,47)" rx="2" ry="2" />
<text  x="1090.80" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (12 samples, 0.87%)</title><rect x="1109.3" y="245" width="10.3" height="15.0" fill="rgb(248,52,40)" rx="2" ry="2" />
<text  x="1112.27" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (11 samples, 0.80%)</title><rect x="507.2" y="181" width="9.5" height="15.0" fill="rgb(219,7,34)" rx="2" ry="2" />
<text  x="510.25" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (5 samples, 0.36%)</title><rect x="697.9" y="293" width="4.3" height="15.0" fill="rgb(212,179,28)" rx="2" ry="2" />
<text  x="700.90" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffd3a8f1ec0, (6 samples, 0.44%)</title><rect x="1161.7" y="277" width="5.1" height="15.0" fill="rgb(228,119,50)" rx="2" ry="2" />
<text  x="1164.66" y="287.5" ></text>
</g>
<g >
<title>operatornew(unsigned (4 samples, 0.29%)</title><rect x="1149.6" y="133" width="3.5" height="15.0" fill="rgb(238,196,41)" rx="2" ry="2" />
<text  x="1152.64" y="143.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=56) (1 samples, 0.07%)</title><rect x="1008.8" y="213" width="0.9" height="15.0" fill="rgb(253,206,47)" rx="2" ry="2" />
<text  x="1011.79" y="223.5" ></text>
</g>
<g >
<title>munmap() (1 samples, 0.07%)</title><rect x="737.4" y="261" width="0.9" height="15.0" fill="rgb(245,147,5)" rx="2" ry="2" />
<text  x="740.41" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (24 samples, 1.75%)</title><rect x="486.6" y="213" width="20.6" height="15.0" fill="rgb(231,111,25)" rx="2" ry="2" />
<text  x="489.64" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1099.8" y="309" width="0.9" height="15.0" fill="rgb(246,41,43)" rx="2" ry="2" />
<text  x="1102.83" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffd3a8f24c0, (36 samples, 2.62%)</title><rect x="647.2" y="181" width="31.0" height="15.0" fill="rgb(221,126,39)" rx="2" ry="2" />
<text  x="650.23" y="191.5" >st..</text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="752.9" y="197" width="0.8" height="15.0" fill="rgb(224,218,35)" rx="2" ry="2" />
<text  x="755.87" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.07%)</title><rect x="799.2" y="309" width="0.9" height="15.0" fill="rgb(250,181,15)" rx="2" ry="2" />
<text  x="802.24" y="319.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.07%)</title><rect x="758.0" y="165" width="0.9" height="15.0" fill="rgb(221,153,14)" rx="2" ry="2" />
<text  x="761.02" y="175.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=65) (1 samples, 0.07%)</title><rect x="1100.7" y="213" width="0.8" height="15.0" fill="rgb(246,39,41)" rx="2" ry="2" />
<text  x="1103.68" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=&lt;optimized (1 samples, 0.07%)</title><rect x="1074.1" y="245" width="0.8" height="15.0" fill="rgb(246,187,46)" rx="2" ry="2" />
<text  x="1077.06" y="255.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="732.3" y="213" width="0.8" height="15.0" fill="rgb(206,36,28)" rx="2" ry="2" />
<text  x="735.26" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.07%)</title><rect x="1099.0" y="325" width="0.8" height="15.0" fill="rgb(223,68,41)" rx="2" ry="2" />
<text  x="1101.97" y="335.5" ></text>
</g>
<g >
<title>Network::~Network (6 samples, 0.44%)</title><rect x="1183.1" y="357" width="5.2" height="15.0" fill="rgb(248,200,40)" rx="2" ry="2" />
<text  x="1186.13" y="367.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.07%)</title><rect x="752.9" y="293" width="0.8" height="15.0" fill="rgb(253,76,26)" rx="2" ry="2" />
<text  x="755.87" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="694.5" y="213" width="0.8" height="15.0" fill="rgb(241,215,38)" rx="2" ry="2" />
<text  x="697.47" y="223.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.07%)</title><rect x="1181.4" y="245" width="0.9" height="15.0" fill="rgb(210,198,24)" rx="2" ry="2" />
<text  x="1184.41" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="752.9" y="261" width="0.8" height="15.0" fill="rgb(208,224,11)" rx="2" ry="2" />
<text  x="755.87" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (4 samples, 0.29%)</title><rect x="1093.0" y="245" width="3.4" height="15.0" fill="rgb(219,0,53)" rx="2" ry="2" />
<text  x="1095.95" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (1 samples, 0.07%)</title><rect x="795.8" y="325" width="0.9" height="15.0" fill="rgb(210,208,14)" rx="2" ry="2" />
<text  x="798.81" y="335.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::pageRankWorkFunc(index=6, (4 samples, 0.29%)</title><rect x="40.9" y="261" width="3.5" height="15.0" fill="rgb(237,54,2)" rx="2" ry="2" />
<text  x="43.92" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (10 samples, 0.73%)</title><rect x="783.8" y="325" width="8.6" height="15.0" fill="rgb(250,227,23)" rx="2" ry="2" />
<text  x="786.78" y="335.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (24 samples, 1.75%)</title><rect x="486.6" y="197" width="20.6" height="15.0" fill="rgb(225,81,7)" rx="2" ry="2" />
<text  x="489.64" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x56016565d770, (1 samples, 0.07%)</title><rect x="645.5" y="181" width="0.9" height="15.0" fill="rgb(220,139,39)" rx="2" ry="2" />
<text  x="648.52" y="191.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=66, (2 samples, 0.15%)</title><rect x="766.6" y="213" width="1.7" height="15.0" fill="rgb(249,129,24)" rx="2" ry="2" />
<text  x="769.61" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;PageId, (1 samples, 0.07%)</title><rect x="1180.6" y="245" width="0.8" height="15.0" fill="rgb(210,117,2)" rx="2" ry="2" />
<text  x="1183.55" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.07%)</title><rect x="1155.6" y="245" width="0.9" height="15.0" fill="rgb(224,170,42)" rx="2" ry="2" />
<text  x="1158.65" y="255.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (18 samples, 1.31%)</title><rect x="299.4" y="85" width="15.5" height="15.0" fill="rgb(215,155,47)" rx="2" ry="2" />
<text  x="302.42" y="95.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="1185.7" y="69" width="0.9" height="15.0" fill="rgb(240,47,46)" rx="2" ry="2" />
<text  x="1188.71" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.07%)</title><rect x="1135.9" y="293" width="0.9" height="15.0" fill="rgb(238,60,0)" rx="2" ry="2" />
<text  x="1138.90" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1093.0" y="213" width="0.8" height="15.0" fill="rgb(217,11,23)" rx="2" ry="2" />
<text  x="1095.95" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="738.3" y="229" width="1.7" height="15.0" fill="rgb(249,101,14)" rx="2" ry="2" />
<text  x="741.27" y="239.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.07%)</title><rect x="703.1" y="133" width="0.8" height="15.0" fill="rgb(243,82,42)" rx="2" ry="2" />
<text  x="706.06" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;PageId, (2 samples, 0.15%)</title><rect x="738.3" y="325" width="1.7" height="15.0" fill="rgb(219,71,28)" rx="2" ry="2" />
<text  x="741.27" y="335.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (2 samples, 0.15%)</title><rect x="1158.2" y="197" width="1.7" height="15.0" fill="rgb(240,7,32)" rx="2" ry="2" />
<text  x="1161.22" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (1 samples, 0.07%)</title><rect x="703.1" y="165" width="0.8" height="15.0" fill="rgb(218,174,17)" rx="2" ry="2" />
<text  x="706.06" y="175.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=70, (1 samples, 0.07%)</title><rect x="560.5" y="101" width="0.9" height="15.0" fill="rgb(227,25,44)" rx="2" ry="2" />
<text  x="563.49" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (8 samples, 0.58%)</title><rect x="1002.8" y="277" width="6.9" height="15.0" fill="rgb(253,104,49)" rx="2" ry="2" />
<text  x="1005.78" y="287.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.07%)</title><rect x="1132.5" y="213" width="0.8" height="15.0" fill="rgb(226,39,4)" rx="2" ry="2" />
<text  x="1135.46" y="223.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (19 samples, 1.38%)</title><rect x="678.2" y="165" width="16.3" height="15.0" fill="rgb(239,93,25)" rx="2" ry="2" />
<text  x="681.15" y="175.5" ></text>
</g>
<g >
<title>__pthread_cond_wait (205 samples, 14.92%)</title><rect x="800.1" y="293" width="176.1" height="15.0" fill="rgb(244,162,34)" rx="2" ry="2" />
<text  x="803.10" y="303.5" >__pthread_cond_wait</text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (271 samples, 19.72%)</title><rect x="274.5" y="245" width="232.7" height="15.0" fill="rgb(211,71,20)" rx="2" ry="2" />
<text  x="277.51" y="255.5" >std::unordered_map&lt;PageId,</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (10 samples, 0.73%)</title><rect x="1132.5" y="325" width="8.5" height="15.0" fill="rgb(205,124,32)" rx="2" ry="2" />
<text  x="1135.46" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (3 samples, 0.22%)</title><rect x="1153.1" y="245" width="2.5" height="15.0" fill="rgb(233,7,9)" rx="2" ry="2" />
<text  x="1156.07" y="255.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="794.1" y="37" width="0.8" height="15.0" fill="rgb(213,172,53)" rx="2" ry="2" />
<text  x="797.09" y="47.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.07%)</title><rect x="764.0" y="213" width="0.9" height="15.0" fill="rgb(218,102,48)" rx="2" ry="2" />
<text  x="767.03" y="223.5" ></text>
</g>
<g >
<title>std::condition_variable::wait&lt;MultiThreadedPageRankComputer::CyclicBarrier::await()::{lambda()#1}&gt;(std::unique_lock&lt;std::mutex&gt;&amp;,MultiThreadedPageRankComputer::CyclicBarrier::await()::{lambda()#1}) (268 samples, 19.51%)</title><rect x="44.4" y="229" width="230.1" height="15.0" fill="rgb(214,172,31)" rx="2" ry="2" />
<text  x="47.35" y="239.5" >std::condition_variable::wait&lt;..</text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.07%)</title><rect x="702.2" y="245" width="0.9" height="15.0" fill="rgb(229,35,17)" rx="2" ry="2" />
<text  x="705.20" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=67) (1 samples, 0.07%)</title><rect x="727.1" y="229" width="0.9" height="15.0" fill="rgb(237,198,41)" rx="2" ry="2" />
<text  x="730.10" y="239.5" ></text>
</g>
<g >
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;)() (205 samples, 14.92%)</title><rect x="800.1" y="309" width="176.1" height="15.0" fill="rgb(229,38,51)" rx="2" ry="2" />
<text  x="803.10" y="319.5" >std::condition_variabl..</text>
</g>
<g >
<title>std::_Construct&lt;PageId, (1 samples, 0.07%)</title><rect x="762.3" y="261" width="0.9" height="15.0" fill="rgb(239,91,30)" rx="2" ry="2" />
<text  x="765.31" y="271.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (18 samples, 1.31%)</title><rect x="981.3" y="229" width="15.5" height="15.0" fill="rgb(208,145,33)" rx="2" ry="2" />
<text  x="984.31" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=70) (1 samples, 0.07%)</title><rect x="1119.6" y="229" width="0.8" height="15.0" fill="rgb(239,139,36)" rx="2" ry="2" />
<text  x="1122.58" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x560178aa14e8, (1 samples, 0.07%)</title><rect x="1021.7" y="133" width="0.8" height="15.0" fill="rgb(215,226,7)" rx="2" ry="2" />
<text  x="1024.67" y="143.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (1 samples, 0.07%)</title><rect x="764.9" y="277" width="0.8" height="15.0" fill="rgb(242,146,50)" rx="2" ry="2" />
<text  x="767.89" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x56017cfa8fe8, (1 samples, 0.07%)</title><rect x="1025.1" y="133" width="0.9" height="15.0" fill="rgb(224,227,47)" rx="2" ry="2" />
<text  x="1028.11" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="762.3" y="149" width="0.9" height="15.0" fill="rgb(210,200,54)" rx="2" ry="2" />
<text  x="765.31" y="159.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (3 samples, 0.22%)</title><rect x="1184.0" y="197" width="2.6" height="15.0" fill="rgb(242,146,47)" rx="2" ry="2" />
<text  x="1186.99" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x56017c7af730, (1 samples, 0.07%)</title><rect x="793.2" y="53" width="0.9" height="15.0" fill="rgb(216,161,39)" rx="2" ry="2" />
<text  x="796.23" y="63.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (44 samples, 3.20%)</title><rect x="561.4" y="101" width="37.7" height="15.0" fill="rgb(254,60,26)" rx="2" ry="2" />
<text  x="564.35" y="111.5" >std..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1073.2" y="197" width="0.9" height="15.0" fill="rgb(227,128,22)" rx="2" ry="2" />
<text  x="1076.20" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (96 samples, 6.99%)</title><rect x="516.7" y="181" width="82.4" height="15.0" fill="rgb(242,147,49)" rx="2" ry="2" />
<text  x="519.70" y="191.5" >std::__de..</text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (2 samples, 0.15%)</title><rect x="1158.2" y="245" width="1.7" height="15.0" fill="rgb(250,161,36)" rx="2" ry="2" />
<text  x="1161.22" y="255.5" ></text>
</g>
<g >
<title>Page::generateId (4 samples, 0.29%)</title><rect x="14.3" y="325" width="3.4" height="15.0" fill="rgb(221,89,19)" rx="2" ry="2" />
<text  x="17.29" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="1119.6" y="277" width="2.6" height="15.0" fill="rgb(236,43,5)" rx="2" ry="2" />
<text  x="1122.58" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (3 samples, 0.22%)</title><rect x="15.2" y="245" width="2.5" height="15.0" fill="rgb(224,105,9)" rx="2" ry="2" />
<text  x="18.15" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.29%)</title><rect x="1087.8" y="213" width="3.4" height="15.0" fill="rgb(246,120,5)" rx="2" ry="2" />
<text  x="1090.80" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (3 samples, 0.22%)</title><rect x="792.4" y="69" width="2.5" height="15.0" fill="rgb(219,153,44)" rx="2" ry="2" />
<text  x="795.37" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="734.8" y="229" width="2.6" height="15.0" fill="rgb(245,163,28)" rx="2" ry="2" />
<text  x="737.83" y="239.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (1 samples, 0.07%)</title><rect x="797.5" y="213" width="0.9" height="15.0" fill="rgb(224,64,12)" rx="2" ry="2" />
<text  x="800.53" y="223.5" ></text>
</g>
<g >
<title>NetworkGenerator::generatePageFromNumWithGeneratedId (13 samples, 0.95%)</title><rect x="746.0" y="341" width="11.2" height="15.0" fill="rgb(235,191,12)" rx="2" ry="2" />
<text  x="749.00" y="351.5" ></text>
</g>
<g >
<title>NetworkGenerator::generatePageFromNum (8 samples, 0.58%)</title><rect x="746.0" y="325" width="6.9" height="15.0" fill="rgb(245,46,46)" rx="2" ry="2" />
<text  x="749.00" y="335.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (2 samples, 0.15%)</title><rect x="787.2" y="245" width="1.7" height="15.0" fill="rgb(213,182,14)" rx="2" ry="2" />
<text  x="790.22" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (6 samples, 0.44%)</title><rect x="996.8" y="293" width="5.1" height="15.0" fill="rgb(253,191,14)" rx="2" ry="2" />
<text  x="999.77" y="303.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=69, (1 samples, 0.07%)</title><rect x="1126.4" y="197" width="0.9" height="15.0" fill="rgb(207,7,15)" rx="2" ry="2" />
<text  x="1129.45" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.07%)</title><rect x="703.1" y="69" width="0.8" height="15.0" fill="rgb(254,112,26)" rx="2" ry="2" />
<text  x="706.06" y="79.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.07%)</title><rect x="794.9" y="197" width="0.9" height="15.0" fill="rgb(254,43,51)" rx="2" ry="2" />
<text  x="797.95" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="1012.2" y="149" width="0.9" height="15.0" fill="rgb(245,18,19)" rx="2" ry="2" />
<text  x="1015.23" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="1082.6" y="309" width="0.9" height="15.0" fill="rgb(231,122,48)" rx="2" ry="2" />
<text  x="1085.65" y="319.5" ></text>
</g>
<g >
<title>std::(__val=392) (1 samples, 0.07%)</title><rect x="749.4" y="309" width="0.9" height="15.0" fill="rgb(230,33,2)" rx="2" ry="2" />
<text  x="752.43" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x560165a4ebe8, (1 samples, 0.07%)</title><rect x="1013.9" y="133" width="0.9" height="15.0" fill="rgb(248,132,28)" rx="2" ry="2" />
<text  x="1016.94" y="143.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.07%)</title><rect x="764.9" y="245" width="0.8" height="15.0" fill="rgb(228,149,47)" rx="2" ry="2" />
<text  x="767.89" y="255.5" ></text>
</g>
<g >
<title>SimpleNetworkGenerator::generateNetworkOfSize(this=0x7ffd3a8f2d50, (1 samples, 0.07%)</title><rect x="742.6" y="357" width="0.8" height="15.0" fill="rgb(224,155,7)" rx="2" ry="2" />
<text  x="745.56" y="367.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=70, (2 samples, 0.15%)</title><rect x="977.9" y="197" width="1.7" height="15.0" fill="rgb(246,220,23)" rx="2" ry="2" />
<text  x="980.87" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.07%)</title><rect x="1183.1" y="181" width="0.9" height="15.0" fill="rgb(210,140,32)" rx="2" ry="2" />
<text  x="1186.13" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (12 samples, 0.87%)</title><rect x="1109.3" y="229" width="10.3" height="15.0" fill="rgb(221,182,27)" rx="2" ry="2" />
<text  x="1112.27" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f4af6db4330, (1 samples, 0.07%)</title><rect x="734.8" y="165" width="0.9" height="15.0" fill="rgb(237,203,20)" rx="2" ry="2" />
<text  x="737.83" y="175.5" ></text>
</g>
<g >
<title>std::(__val=1733) (1 samples, 0.07%)</title><rect x="746.9" y="309" width="0.8" height="15.0" fill="rgb(231,179,29)" rx="2" ry="2" />
<text  x="749.86" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (2 samples, 0.15%)</title><rect x="761.5" y="325" width="1.7" height="15.0" fill="rgb(243,37,13)" rx="2" ry="2" />
<text  x="764.46" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (89 samples, 6.48%)</title><rect x="410.2" y="197" width="76.4" height="15.0" fill="rgb(218,40,43)" rx="2" ry="2" />
<text  x="413.20" y="207.5" >std::__d..</text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.07%)</title><rect x="761.5" y="277" width="0.8" height="15.0" fill="rgb(250,131,49)" rx="2" ry="2" />
<text  x="764.46" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="996.8" y="149" width="0.8" height="15.0" fill="rgb(219,218,18)" rx="2" ry="2" />
<text  x="999.77" y="159.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="764.9" y="149" width="0.8" height="15.0" fill="rgb(208,116,13)" rx="2" ry="2" />
<text  x="767.89" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (4 samples, 0.29%)</title><rect x="792.4" y="309" width="3.4" height="15.0" fill="rgb(248,95,1)" rx="2" ry="2" />
<text  x="795.37" y="319.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (51 samples, 3.71%)</title><rect x="555.3" y="117" width="43.8" height="15.0" fill="rgb(226,115,33)" rx="2" ry="2" />
<text  x="558.34" y="127.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (219 samples, 15.94%)</title><rect x="507.2" y="229" width="188.1" height="15.0" fill="rgb(217,125,18)" rx="2" ry="2" />
<text  x="510.25" y="239.5" >std::__detail::_Map_base..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1147.9" y="101" width="1.7" height="15.0" fill="rgb(252,10,30)" rx="2" ry="2" />
<text  x="1150.92" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;PageId, (3 samples, 0.22%)</title><rect x="740.0" y="309" width="2.6" height="15.0" fill="rgb(236,128,16)" rx="2" ry="2" />
<text  x="742.99" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="1093.0" y="149" width="0.8" height="15.0" fill="rgb(232,207,31)" rx="2" ry="2" />
<text  x="1095.95" y="159.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (3 samples, 0.22%)</title><rect x="792.4" y="181" width="2.5" height="15.0" fill="rgb(247,92,31)" rx="2" ry="2" />
<text  x="795.37" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageIdAndRank&gt; (2 samples, 0.15%)</title><rect x="1188.3" y="309" width="1.7" height="15.0" fill="rgb(212,177,17)" rx="2" ry="2" />
<text  x="1191.28" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.07%)</title><rect x="1096.4" y="181" width="0.8" height="15.0" fill="rgb(223,173,33)" rx="2" ry="2" />
<text  x="1099.39" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x560175ed5c70, (1 samples, 0.07%)</title><rect x="764.9" y="165" width="0.8" height="15.0" fill="rgb(221,183,14)" rx="2" ry="2" />
<text  x="767.89" y="175.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (2 samples, 0.15%)</title><rect x="1175.4" y="245" width="1.7" height="15.0" fill="rgb(225,95,34)" rx="2" ry="2" />
<text  x="1178.40" y="255.5" ></text>
</g>
<g >
<title>PageId::operator== (1 samples, 0.07%)</title><rect x="797.5" y="229" width="0.9" height="15.0" fill="rgb(247,63,22)" rx="2" ry="2" />
<text  x="800.53" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="1148.8" y="69" width="0.8" height="15.0" fill="rgb(223,169,7)" rx="2" ry="2" />
<text  x="1151.78" y="79.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;Page*&gt;, (1 samples, 0.07%)</title><rect x="1096.4" y="277" width="0.8" height="15.0" fill="rgb(229,221,39)" rx="2" ry="2" />
<text  x="1099.39" y="287.5" ></text>
</g>
<g >
<title>std::(__val=1240) (1 samples, 0.07%)</title><rect x="746.0" y="309" width="0.9" height="15.0" fill="rgb(223,34,22)" rx="2" ry="2" />
<text  x="749.00" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x5601734893b0) (1 samples, 0.07%)</title><rect x="1016.5" y="117" width="0.9" height="15.0" fill="rgb(239,169,40)" rx="2" ry="2" />
<text  x="1019.52" y="127.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1175.4" y="277" width="1.7" height="15.0" fill="rgb(215,146,18)" rx="2" ry="2" />
<text  x="1178.40" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="726.2" y="229" width="0.9" height="15.0" fill="rgb(206,221,54)" rx="2" ry="2" />
<text  x="729.24" y="239.5" ></text>
</g>
<g >
<title>PageId::operator== (2 samples, 0.15%)</title><rect x="787.2" y="229" width="1.7" height="15.0" fill="rgb(250,65,14)" rx="2" ry="2" />
<text  x="790.22" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (9 samples, 0.66%)</title><rect x="783.8" y="309" width="7.7" height="15.0" fill="rgb(220,158,41)" rx="2" ry="2" />
<text  x="786.78" y="319.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageIdAndRank*&gt; (1 samples, 0.07%)</title><rect x="1181.4" y="309" width="0.9" height="15.0" fill="rgb(223,174,48)" rx="2" ry="2" />
<text  x="1184.41" y="319.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=70, (1 samples, 0.07%)</title><rect x="1148.8" y="85" width="0.8" height="15.0" fill="rgb(231,88,15)" rx="2" ry="2" />
<text  x="1151.78" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (5 samples, 0.36%)</title><rect x="697.9" y="309" width="4.3" height="15.0" fill="rgb(239,8,1)" rx="2" ry="2" />
<text  x="700.90" y="319.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.07%)</title><rect x="702.2" y="261" width="0.9" height="15.0" fill="rgb(212,38,16)" rx="2" ry="2" />
<text  x="705.20" y="271.5" ></text>
</g>
<g >
<title>operatornew(unsigned (7 samples, 0.51%)</title><rect x="727.1" y="245" width="6.0" height="15.0" fill="rgb(216,77,45)" rx="2" ry="2" />
<text  x="730.10" y="255.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.07%)</title><rect x="1180.6" y="229" width="0.8" height="15.0" fill="rgb(220,65,47)" rx="2" ry="2" />
<text  x="1183.55" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Page&gt;::construct&lt;Page, (3 samples, 0.22%)</title><rect x="743.4" y="293" width="2.6" height="15.0" fill="rgb(212,41,32)" rx="2" ry="2" />
<text  x="746.42" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId, (8 samples, 0.58%)</title><rect x="726.2" y="341" width="6.9" height="15.0" fill="rgb(237,171,38)" rx="2" ry="2" />
<text  x="729.24" y="351.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (6 samples, 0.44%)</title><rect x="555.3" y="101" width="5.2" height="15.0" fill="rgb(251,70,28)" rx="2" ry="2" />
<text  x="558.34" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;Page, (3 samples, 0.22%)</title><rect x="743.4" y="325" width="2.6" height="15.0" fill="rgb(225,114,6)" rx="2" ry="2" />
<text  x="746.42" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Page&gt; (3 samples, 0.22%)</title><rect x="743.4" y="309" width="2.6" height="15.0" fill="rgb(243,102,47)" rx="2" ry="2" />
<text  x="746.42" y="319.5" ></text>
</g>
<g >
<title>futex_wait_cancelable (25 samples, 1.82%)</title><rect x="704.8" y="261" width="21.4" height="15.0" fill="rgb(254,221,8)" rx="2" ry="2" />
<text  x="707.77" y="271.5" >f..</text>
</g>
<g >
<title>grow_heap(diff=4096, (1 samples, 0.07%)</title><rect x="16.9" y="149" width="0.8" height="15.0" fill="rgb(207,207,41)" rx="2" ry="2" />
<text  x="19.87" y="159.5" ></text>
</g>
<g >
<title>std::(__val=106) (1 samples, 0.07%)</title><rect x="695.3" y="309" width="0.9" height="15.0" fill="rgb(246,224,52)" rx="2" ry="2" />
<text  x="698.33" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (3 samples, 0.22%)</title><rect x="757.2" y="309" width="2.5" height="15.0" fill="rgb(242,92,15)" rx="2" ry="2" />
<text  x="760.16" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffd3a8f1fc0, (10 samples, 0.73%)</title><rect x="1166.8" y="277" width="8.6" height="15.0" fill="rgb(243,224,6)" rx="2" ry="2" />
<text  x="1169.81" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.07%)</title><rect x="703.9" y="309" width="0.9" height="15.0" fill="rgb(205,115,43)" rx="2" ry="2" />
<text  x="706.92" y="319.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (1 samples, 0.07%)</title><rect x="703.9" y="197" width="0.9" height="15.0" fill="rgb(239,10,23)" rx="2" ry="2" />
<text  x="706.92" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (17 samples, 1.24%)</title><rect x="1141.0" y="325" width="14.6" height="15.0" fill="rgb(214,46,19)" rx="2" ry="2" />
<text  x="1144.05" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.07%)</title><rect x="799.2" y="245" width="0.9" height="15.0" fill="rgb(215,3,54)" rx="2" ry="2" />
<text  x="802.24" y="255.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.07%)</title><rect x="1101.5" y="245" width="0.9" height="15.0" fill="rgb(239,123,37)" rx="2" ry="2" />
<text  x="1104.54" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.07%)</title><rect x="1074.1" y="261" width="0.8" height="15.0" fill="rgb(250,53,54)" rx="2" ry="2" />
<text  x="1077.06" y="271.5" ></text>
</g>
<g >
<title>Page::Page (3 samples, 0.22%)</title><rect x="743.4" y="277" width="2.6" height="15.0" fill="rgb(217,165,29)" rx="2" ry="2" />
<text  x="746.42" y="287.5" ></text>
</g>
<g >
<title>__GI__IO_setb(f=f@entry=0x7ffd3a8f2430, (1 samples, 0.07%)</title><rect x="746.0" y="245" width="0.9" height="15.0" fill="rgb(210,211,9)" rx="2" ry="2" />
<text  x="749.00" y="255.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.07%)</title><rect x="696.2" y="325" width="0.8" height="15.0" fill="rgb(254,87,44)" rx="2" ry="2" />
<text  x="699.19" y="335.5" ></text>
</g>
<g >
<title>Page::~Page (4 samples, 0.29%)</title><rect x="1183.1" y="261" width="3.5" height="15.0" fill="rgb(243,67,48)" rx="2" ry="2" />
<text  x="1186.13" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (2 samples, 0.15%)</title><rect x="733.1" y="293" width="1.7" height="15.0" fill="rgb(250,108,34)" rx="2" ry="2" />
<text  x="736.11" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.07%)</title><rect x="1140.2" y="309" width="0.8" height="15.0" fill="rgb(248,0,42)" rx="2" ry="2" />
<text  x="1143.19" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (4 samples, 0.29%)</title><rect x="1149.6" y="117" width="3.5" height="15.0" fill="rgb(222,208,52)" rx="2" ry="2" />
<text  x="1152.64" y="127.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (12 samples, 0.87%)</title><rect x="1122.2" y="341" width="10.3" height="15.0" fill="rgb(214,82,30)" rx="2" ry="2" />
<text  x="1125.15" y="351.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="1138.5" y="229" width="0.8" height="15.0" fill="rgb(250,196,26)" rx="2" ry="2" />
<text  x="1141.47" y="239.5" ></text>
</g>
<g >
<title>__GI___pthread_timedjoin_ex(threadid=139960388998912, (1 samples, 0.07%)</title><rect x="976.2" y="213" width="0.8" height="15.0" fill="rgb(233,62,9)" rx="2" ry="2" />
<text  x="979.16" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="734.8" y="197" width="2.6" height="15.0" fill="rgb(246,94,21)" rx="2" ry="2" />
<text  x="737.83" y="207.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;std::pair&lt;PageId, (3 samples, 0.22%)</title><rect x="740.0" y="245" width="2.6" height="15.0" fill="rgb(238,98,40)" rx="2" ry="2" />
<text  x="742.99" y="255.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="1008.8" y="197" width="0.9" height="15.0" fill="rgb(226,36,50)" rx="2" ry="2" />
<text  x="1011.79" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (14 samples, 1.02%)</title><rect x="1060.3" y="309" width="12.0" height="15.0" fill="rgb(207,140,37)" rx="2" ry="2" />
<text  x="1063.32" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void,void (789 samples, 57.42%)</title><rect x="17.7" y="277" width="677.6" height="15.0" fill="rgb(226,120,40)" rx="2" ry="2" />
<text  x="20.73" y="287.5" >std::__invoke_impl&lt;void,void</text>
</g>
<g >
<title>_IO_vfprintf_internal(s=s@entry=0x7ffd3a8f2190, (1 samples, 0.07%)</title><rect x="1097.2" y="277" width="0.9" height="15.0" fill="rgb(217,155,24)" rx="2" ry="2" />
<text  x="1100.25" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x56016719a6b0) (1 samples, 0.07%)</title><rect x="1014.8" y="117" width="0.9" height="15.0" fill="rgb(230,215,10)" rx="2" ry="2" />
<text  x="1017.80" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.07%)</title><rect x="1046.6" y="293" width="0.8" height="15.0" fill="rgb(244,212,26)" rx="2" ry="2" />
<text  x="1049.58" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (3 samples, 0.22%)</title><rect x="1083.5" y="277" width="2.6" height="15.0" fill="rgb(214,142,4)" rx="2" ry="2" />
<text  x="1086.51" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (3 samples, 0.22%)</title><rect x="1060.3" y="277" width="2.6" height="15.0" fill="rgb(246,47,43)" rx="2" ry="2" />
<text  x="1063.32" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (3 samples, 0.22%)</title><rect x="792.4" y="165" width="2.5" height="15.0" fill="rgb(209,38,22)" rx="2" ry="2" />
<text  x="795.37" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (8 samples, 0.58%)</title><rect x="1132.5" y="309" width="6.8" height="15.0" fill="rgb(207,204,53)" rx="2" ry="2" />
<text  x="1135.46" y="319.5" ></text>
</g>
<g >
<title>operatornew(unsigned (3 samples, 0.22%)</title><rect x="15.2" y="213" width="2.5" height="15.0" fill="rgb(212,156,29)" rx="2" ry="2" />
<text  x="18.15" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="697.0" y="213" width="0.9" height="15.0" fill="rgb(229,136,38)" rx="2" ry="2" />
<text  x="700.05" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="1073.2" y="181" width="0.9" height="15.0" fill="rgb(223,169,45)" rx="2" ry="2" />
<text  x="1076.20" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="743.4" y="37" width="0.9" height="15.0" fill="rgb(247,42,45)" rx="2" ry="2" />
<text  x="746.42" y="47.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::gen_id_thread (5 samples, 0.36%)</title><rect x="10.0" y="341" width="4.3" height="15.0" fill="rgb(228,68,38)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="782.9" y="245" width="0.9" height="15.0" fill="rgb(206,46,23)" rx="2" ry="2" />
<text  x="785.93" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (5 samples, 0.36%)</title><rect x="784.6" y="277" width="4.3" height="15.0" fill="rgb(218,9,8)" rx="2" ry="2" />
<text  x="787.64" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (3 samples, 0.22%)</title><rect x="1083.5" y="261" width="2.6" height="15.0" fill="rgb(240,17,5)" rx="2" ry="2" />
<text  x="1086.51" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.07%)</title><rect x="1180.6" y="325" width="0.8" height="15.0" fill="rgb(241,94,37)" rx="2" ry="2" />
<text  x="1183.55" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (19 samples, 1.38%)</title><rect x="1009.7" y="245" width="16.3" height="15.0" fill="rgb(239,88,36)" rx="2" ry="2" />
<text  x="1012.65" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x56017b0b3180, (1 samples, 0.07%)</title><rect x="1090.4" y="181" width="0.8" height="15.0" fill="rgb(231,10,25)" rx="2" ry="2" />
<text  x="1093.38" y="191.5" ></text>
</g>
<g >
<title>__brk (1 samples, 0.07%)</title><rect x="1189.1" y="197" width="0.9" height="15.0" fill="rgb(254,113,7)" rx="2" ry="2" />
<text  x="1192.14" y="207.5" ></text>
</g>
<g >
<title>Network::addPage (3 samples, 0.22%)</title><rect x="743.4" y="341" width="2.6" height="15.0" fill="rgb(210,67,18)" rx="2" ry="2" />
<text  x="746.42" y="351.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (1 samples, 0.07%)</title><rect x="703.9" y="213" width="0.9" height="15.0" fill="rgb(213,123,51)" rx="2" ry="2" />
<text  x="706.92" y="223.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.07%)</title><rect x="1100.7" y="229" width="0.8" height="15.0" fill="rgb(229,94,19)" rx="2" ry="2" />
<text  x="1103.68" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="743.4" y="165" width="2.6" height="15.0" fill="rgb(232,96,27)" rx="2" ry="2" />
<text  x="746.42" y="175.5" ></text>
</g>
<g >
<title>mprotect() (1 samples, 0.07%)</title><rect x="16.0" y="133" width="0.9" height="15.0" fill="rgb(217,216,46)" rx="2" ry="2" />
<text  x="19.01" y="143.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,unsigned (4 samples, 0.29%)</title><rect x="796.7" y="341" width="3.4" height="15.0" fill="rgb(223,102,28)" rx="2" ry="2" />
<text  x="799.67" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.07%)</title><rect x="1180.6" y="309" width="0.8" height="15.0" fill="rgb(244,46,18)" rx="2" ry="2" />
<text  x="1183.55" y="319.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=&lt;optimized (1 samples, 0.07%)</title><rect x="1099.0" y="149" width="0.8" height="15.0" fill="rgb(228,108,14)" rx="2" ry="2" />
<text  x="1101.97" y="159.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.07%)</title><rect x="697.0" y="245" width="0.9" height="15.0" fill="rgb(247,220,37)" rx="2" ry="2" />
<text  x="700.05" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=68) (3 samples, 0.22%)</title><rect x="728.0" y="229" width="2.5" height="15.0" fill="rgb(206,179,23)" rx="2" ry="2" />
<text  x="730.96" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x5601752d61c8, (1 samples, 0.07%)</title><rect x="1017.4" y="133" width="0.8" height="15.0" fill="rgb(229,44,35)" rx="2" ry="2" />
<text  x="1020.38" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1099.8" y="245" width="0.9" height="15.0" fill="rgb(223,27,37)" rx="2" ry="2" />
<text  x="1102.83" y="255.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::CyclicBarrier::await (268 samples, 19.51%)</title><rect x="44.4" y="245" width="230.1" height="15.0" fill="rgb(210,183,36)" rx="2" ry="2" />
<text  x="47.35" y="255.5" >MultiThreadedPageRankComputer:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (8 samples, 0.58%)</title><rect x="726.2" y="293" width="6.9" height="15.0" fill="rgb(234,99,16)" rx="2" ry="2" />
<text  x="729.24" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::deallocate(this=&lt;synthetic (4 samples, 0.29%)</title><rect x="1132.5" y="245" width="3.4" height="15.0" fill="rgb(243,30,21)" rx="2" ry="2" />
<text  x="1135.46" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.29%)</title><rect x="697.9" y="261" width="3.4" height="15.0" fill="rgb(234,223,49)" rx="2" ry="2" />
<text  x="700.90" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1147.9" y="149" width="1.7" height="15.0" fill="rgb(213,130,0)" rx="2" ry="2" />
<text  x="1150.92" y="159.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.07%)</title><rect x="1073.2" y="229" width="0.9" height="15.0" fill="rgb(232,132,17)" rx="2" ry="2" />
<text  x="1076.20" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (10 samples, 0.73%)</title><rect x="1087.8" y="341" width="8.6" height="15.0" fill="rgb(223,94,49)" rx="2" ry="2" />
<text  x="1090.80" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1099.8" y="277" width="0.9" height="15.0" fill="rgb(241,113,27)" rx="2" ry="2" />
<text  x="1102.83" y="287.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffd3a8f2300 (1 samples, 0.07%)</title><rect x="1097.2" y="293" width="0.9" height="15.0" fill="rgb(237,95,27)" rx="2" ry="2" />
<text  x="1100.25" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (24 samples, 1.75%)</title><rect x="981.3" y="309" width="20.6" height="15.0" fill="rgb(216,37,8)" rx="2" ry="2" />
<text  x="984.31" y="319.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="1090.4" y="165" width="0.8" height="15.0" fill="rgb(242,73,3)" rx="2" ry="2" />
<text  x="1093.38" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x56018584dfc0, (1 samples, 0.07%)</title><rect x="1183.1" y="165" width="0.9" height="15.0" fill="rgb(210,121,21)" rx="2" ry="2" />
<text  x="1186.13" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1136.8" y="165" width="1.7" height="15.0" fill="rgb(218,165,12)" rx="2" ry="2" />
<text  x="1139.75" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffd3a8f2480, (1 samples, 0.07%)</title><rect x="1081.8" y="277" width="0.8" height="15.0" fill="rgb(222,219,19)" rx="2" ry="2" />
<text  x="1084.79" y="287.5" ></text>
</g>
<g >
<title>PageId::~PageId (2 samples, 0.15%)</title><rect x="1136.8" y="213" width="1.7" height="15.0" fill="rgb(244,67,30)" rx="2" ry="2" />
<text  x="1139.75" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.07%)</title><rect x="761.5" y="261" width="0.8" height="15.0" fill="rgb(216,44,15)" rx="2" ry="2" />
<text  x="764.46" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (18 samples, 1.31%)</title><rect x="981.3" y="293" width="15.5" height="15.0" fill="rgb(211,116,13)" rx="2" ry="2" />
<text  x="984.31" y="303.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal(s=s@entry=0x7ffd3a8f2430, (1 samples, 0.07%)</title><rect x="752.0" y="261" width="0.9" height="15.0" fill="rgb(229,96,24)" rx="2" ry="2" />
<text  x="755.01" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="740.0" y="181" width="2.6" height="15.0" fill="rgb(253,161,43)" rx="2" ry="2" />
<text  x="742.99" y="191.5" ></text>
</g>
<g >
<title>Page::~Page (1 samples, 0.07%)</title><rect x="764.9" y="341" width="0.8" height="15.0" fill="rgb(240,22,9)" rx="2" ry="2" />
<text  x="767.89" y="351.5" ></text>
</g>
<g >
<title>std::(__val=445221) (1 samples, 0.07%)</title><rect x="1098.1" y="325" width="0.9" height="15.0" fill="rgb(254,155,21)" rx="2" ry="2" />
<text  x="1101.11" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x560173489378, (1 samples, 0.07%)</title><rect x="1016.5" y="133" width="0.9" height="15.0" fill="rgb(247,120,20)" rx="2" ry="2" />
<text  x="1019.52" y="143.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;Page&gt; (4 samples, 0.29%)</title><rect x="1183.1" y="277" width="3.5" height="15.0" fill="rgb(214,105,37)" rx="2" ry="2" />
<text  x="1186.13" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (19 samples, 1.38%)</title><rect x="1009.7" y="261" width="16.3" height="15.0" fill="rgb(251,38,36)" rx="2" ry="2" />
<text  x="1012.65" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (4 samples, 0.29%)</title><rect x="1093.0" y="325" width="3.4" height="15.0" fill="rgb(221,166,31)" rx="2" ry="2" />
<text  x="1095.95" y="335.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.07%)</title><rect x="791.5" y="293" width="0.9" height="15.0" fill="rgb(222,145,23)" rx="2" ry="2" />
<text  x="794.51" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="782.9" y="325" width="0.9" height="15.0" fill="rgb(229,108,1)" rx="2" ry="2" />
<text  x="785.93" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=68) (1 samples, 0.07%)</title><rect x="696.2" y="229" width="0.8" height="15.0" fill="rgb(228,175,7)" rx="2" ry="2" />
<text  x="699.19" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="1136.8" y="149" width="0.8" height="15.0" fill="rgb(240,15,14)" rx="2" ry="2" />
<text  x="1139.75" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="696.2" y="293" width="0.8" height="15.0" fill="rgb(209,118,15)" rx="2" ry="2" />
<text  x="699.19" y="303.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="1184.0" y="69" width="0.8" height="15.0" fill="rgb(226,196,39)" rx="2" ry="2" />
<text  x="1186.99" y="79.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f4b12e11c40 (2 samples, 0.15%)</title><rect x="728.8" y="213" width="1.7" height="15.0" fill="rgb(214,126,43)" rx="2" ry="2" />
<text  x="731.82" y="223.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="735.7" y="149" width="0.9" height="15.0" fill="rgb(245,83,4)" rx="2" ry="2" />
<text  x="738.69" y="159.5" ></text>
</g>
<g >
<title>Network::addPage (1 samples, 0.07%)</title><rect x="1096.4" y="341" width="0.8" height="15.0" fill="rgb(228,29,25)" rx="2" ry="2" />
<text  x="1099.39" y="351.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffd3a8f25a0 (1 samples, 0.07%)</title><rect x="746.0" y="277" width="0.9" height="15.0" fill="rgb(218,201,18)" rx="2" ry="2" />
<text  x="749.00" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageIdAndRank&gt;::construct&lt;PageIdAndRank, (1 samples, 0.07%)</title><rect x="1182.3" y="293" width="0.8" height="15.0" fill="rgb(227,135,46)" rx="2" ry="2" />
<text  x="1185.27" y="303.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="761.5" y="197" width="0.8" height="15.0" fill="rgb(217,81,26)" rx="2" ry="2" />
<text  x="764.46" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="764.9" y="197" width="0.8" height="15.0" fill="rgb(214,100,25)" rx="2" ry="2" />
<text  x="767.89" y="207.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.07%)</title><rect x="759.7" y="229" width="0.9" height="15.0" fill="rgb(252,144,32)" rx="2" ry="2" />
<text  x="762.74" y="239.5" ></text>
</g>
<g >
<title>mprotect() (1 samples, 0.07%)</title><rect x="16.9" y="133" width="0.8" height="15.0" fill="rgb(227,168,24)" rx="2" ry="2" />
<text  x="19.87" y="143.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (3 samples, 0.22%)</title><rect x="1093.8" y="197" width="2.6" height="15.0" fill="rgb(254,175,30)" rx="2" ry="2" />
<text  x="1096.81" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffd3a8f24c0, (1 samples, 0.07%)</title><rect x="1071.5" y="277" width="0.8" height="15.0" fill="rgb(215,201,46)" rx="2" ry="2" />
<text  x="1074.48" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="733.1" y="181" width="1.7" height="15.0" fill="rgb(226,6,36)" rx="2" ry="2" />
<text  x="736.11" y="191.5" ></text>
</g>
<g >
<title>operatornew(unsigned (3 samples, 0.22%)</title><rect x="1153.1" y="229" width="2.5" height="15.0" fill="rgb(214,82,25)" rx="2" ry="2" />
<text  x="1156.07" y="239.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::computeForNetwork (44 samples, 3.20%)</title><rect x="704.8" y="357" width="37.8" height="15.0" fill="rgb(232,177,5)" rx="2" ry="2" />
<text  x="707.77" y="367.5" >Mul..</text>
</g>
<g >
<title>std::vector&lt;Page,std::allocator&lt;Page&gt; (1 samples, 0.07%)</title><rect x="1096.4" y="325" width="0.8" height="15.0" fill="rgb(218,53,10)" rx="2" ry="2" />
<text  x="1099.39" y="335.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::CyclicBarrier::wait (205 samples, 14.92%)</title><rect x="800.1" y="341" width="176.1" height="15.0" fill="rgb(217,215,13)" rx="2" ry="2" />
<text  x="803.10" y="351.5" >MultiThreadedPageRankC..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="1179.7" y="277" width="0.9" height="15.0" fill="rgb(240,28,11)" rx="2" ry="2" />
<text  x="1182.69" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="763.2" y="277" width="1.7" height="15.0" fill="rgb(215,217,50)" rx="2" ry="2" />
<text  x="766.17" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="746.0" y="293" width="0.9" height="15.0" fill="rgb(250,191,37)" rx="2" ry="2" />
<text  x="749.00" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_ReuseOrAllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (19 samples, 1.38%)</title><rect x="1009.7" y="277" width="16.3" height="15.0" fill="rgb(221,19,18)" rx="2" ry="2" />
<text  x="1012.65" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.51%)</title><rect x="1002.8" y="197" width="6.0" height="15.0" fill="rgb(215,124,1)" rx="2" ry="2" />
<text  x="1005.78" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (3 samples, 0.22%)</title><rect x="754.6" y="261" width="2.6" height="15.0" fill="rgb(211,8,40)" rx="2" ry="2" />
<text  x="757.59" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="14.3" y="261" width="0.9" height="15.0" fill="rgb(244,25,47)" rx="2" ry="2" />
<text  x="17.29" y="271.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.07%)</title><rect x="702.2" y="293" width="0.9" height="15.0" fill="rgb(254,127,31)" rx="2" ry="2" />
<text  x="705.20" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1180.6" y="213" width="0.8" height="15.0" fill="rgb(245,34,30)" rx="2" ry="2" />
<text  x="1183.55" y="223.5" ></text>
</g>
<g >
<title>PageId::PageId (3 samples, 0.22%)</title><rect x="1119.6" y="325" width="2.6" height="15.0" fill="rgb(240,156,27)" rx="2" ry="2" />
<text  x="1122.58" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="703.1" y="229" width="0.8" height="15.0" fill="rgb(238,164,2)" rx="2" ry="2" />
<text  x="706.06" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (4 samples, 0.29%)</title><rect x="1132.5" y="277" width="3.4" height="15.0" fill="rgb(254,89,10)" rx="2" ry="2" />
<text  x="1135.46" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1140.2" y="277" width="0.8" height="15.0" fill="rgb(215,47,14)" rx="2" ry="2" />
<text  x="1143.19" y="287.5" ></text>
</g>
<g >
<title>std::(__val=909) (1 samples, 0.07%)</title><rect x="751.1" y="309" width="0.9" height="15.0" fill="rgb(245,31,15)" rx="2" ry="2" />
<text  x="754.15" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;PageId,PageId&gt;, (3 samples, 0.22%)</title><rect x="740.0" y="325" width="2.6" height="15.0" fill="rgb(236,165,52)" rx="2" ry="2" />
<text  x="742.99" y="335.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f4b12e11c40 (3 samples, 0.22%)</title><rect x="1133.3" y="213" width="2.6" height="15.0" fill="rgb(253,47,23)" rx="2" ry="2" />
<text  x="1136.32" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (6 samples, 0.44%)</title><rect x="1074.1" y="309" width="5.1" height="15.0" fill="rgb(251,60,43)" rx="2" ry="2" />
<text  x="1077.06" y="319.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (18 samples, 1.31%)</title><rect x="299.4" y="101" width="15.5" height="15.0" fill="rgb(239,150,50)" rx="2" ry="2" />
<text  x="302.42" y="111.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::pair&lt;PageId, (3 samples, 0.22%)</title><rect x="740.0" y="229" width="2.6" height="15.0" fill="rgb(213,124,13)" rx="2" ry="2" />
<text  x="742.99" y="239.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.07%)</title><rect x="753.7" y="213" width="0.9" height="15.0" fill="rgb(251,117,24)" rx="2" ry="2" />
<text  x="756.73" y="223.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffd3a8f25a0 (1 samples, 0.07%)</title><rect x="748.6" y="277" width="0.8" height="15.0" fill="rgb(217,39,46)" rx="2" ry="2" />
<text  x="751.57" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (16 samples, 1.16%)</title><rect x="1141.9" y="277" width="13.7" height="15.0" fill="rgb(218,166,22)" rx="2" ry="2" />
<text  x="1144.91" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="977.9" y="277" width="1.7" height="15.0" fill="rgb(220,29,7)" rx="2" ry="2" />
<text  x="980.87" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (3 samples, 0.22%)</title><rect x="792.4" y="149" width="2.5" height="15.0" fill="rgb(224,83,15)" rx="2" ry="2" />
<text  x="795.37" y="159.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (2 samples, 0.15%)</title><rect x="1175.4" y="261" width="1.7" height="15.0" fill="rgb(254,155,11)" rx="2" ry="2" />
<text  x="1178.40" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.07%)</title><rect x="703.1" y="213" width="0.8" height="15.0" fill="rgb(220,200,49)" rx="2" ry="2" />
<text  x="706.06" y="223.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.07%)</title><rect x="701.3" y="261" width="0.9" height="15.0" fill="rgb(229,124,15)" rx="2" ry="2" />
<text  x="704.34" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.07%)</title><rect x="764.9" y="325" width="0.8" height="15.0" fill="rgb(223,156,11)" rx="2" ry="2" />
<text  x="767.89" y="335.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;std::pair&lt;PageId, (3 samples, 0.22%)</title><rect x="740.0" y="261" width="2.6" height="15.0" fill="rgb(249,16,30)" rx="2" ry="2" />
<text  x="742.99" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (4 samples, 0.29%)</title><rect x="1156.5" y="261" width="3.4" height="15.0" fill="rgb(207,106,8)" rx="2" ry="2" />
<text  x="1159.51" y="271.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (2 samples, 0.15%)</title><rect x="1065.5" y="245" width="1.7" height="15.0" fill="rgb(231,228,48)" rx="2" ry="2" />
<text  x="1068.47" y="255.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="1103.3" y="213" width="0.8" height="15.0" fill="rgb(226,162,39)" rx="2" ry="2" />
<text  x="1106.26" y="223.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,double, (1 samples, 0.07%)</title><rect x="702.2" y="341" width="0.9" height="15.0" fill="rgb(220,165,31)" rx="2" ry="2" />
<text  x="705.20" y="351.5" ></text>
</g>
<g >
<title>_itoa_word(value=24, (1 samples, 0.07%)</title><rect x="748.6" y="245" width="0.8" height="15.0" fill="rgb(220,117,31)" rx="2" ry="2" />
<text  x="751.57" y="255.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (18 samples, 1.31%)</title><rect x="299.4" y="117" width="15.5" height="15.0" fill="rgb(253,203,54)" rx="2" ry="2" />
<text  x="302.42" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (20 samples, 1.46%)</title><rect x="765.7" y="245" width="17.2" height="15.0" fill="rgb(216,149,43)" rx="2" ry="2" />
<text  x="768.75" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (11 samples, 0.80%)</title><rect x="507.2" y="149" width="9.5" height="15.0" fill="rgb(232,99,5)" rx="2" ry="2" />
<text  x="510.25" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (16 samples, 1.16%)</title><rect x="1141.9" y="261" width="13.7" height="15.0" fill="rgb(236,116,52)" rx="2" ry="2" />
<text  x="1144.91" y="271.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.07%)</title><rect x="1082.6" y="261" width="0.9" height="15.0" fill="rgb(250,104,26)" rx="2" ry="2" />
<text  x="1085.65" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (111 samples, 8.08%)</title><rect x="314.9" y="197" width="95.3" height="15.0" fill="rgb(219,89,11)" rx="2" ry="2" />
<text  x="317.88" y="207.5" >std::_Hasht..</text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.07%)</title><rect x="1072.3" y="261" width="0.9" height="15.0" fill="rgb(215,134,30)" rx="2" ry="2" />
<text  x="1075.34" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="1009.7" y="117" width="2.5" height="15.0" fill="rgb(214,131,27)" rx="2" ry="2" />
<text  x="1012.65" y="127.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (1 samples, 0.07%)</title><rect x="703.1" y="149" width="0.8" height="15.0" fill="rgb(210,113,49)" rx="2" ry="2" />
<text  x="706.06" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (2 samples, 0.15%)</title><rect x="1086.1" y="277" width="1.7" height="15.0" fill="rgb(225,139,21)" rx="2" ry="2" />
<text  x="1089.08" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x56017938a5d8, (1 samples, 0.07%)</title><rect x="1023.4" y="133" width="0.9" height="15.0" fill="rgb(244,46,2)" rx="2" ry="2" />
<text  x="1026.39" y="143.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=69, (1 samples, 0.07%)</title><rect x="1147.9" y="85" width="0.9" height="15.0" fill="rgb(224,175,6)" rx="2" ry="2" />
<text  x="1150.92" y="95.5" ></text>
</g>
<g >
<title>std::condition_variable::wait&lt;MultiThreadedPageRankComputer::CyclicBarrier::wait()::{lambda()#1}&gt;(std::unique_lock&lt;std::mutex&gt;&amp;,MultiThreadedPageRankComputer::CyclicBarrier::wait()::{lambda()#1}) (25 samples, 1.82%)</title><rect x="704.8" y="325" width="21.4" height="15.0" fill="rgb(209,180,15)" rx="2" ry="2" />
<text  x="707.77" y="335.5" >s..</text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="748.6" y="293" width="0.8" height="15.0" fill="rgb(208,202,26)" rx="2" ry="2" />
<text  x="751.57" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.29%)</title><rect x="697.9" y="229" width="3.4" height="15.0" fill="rgb(205,90,18)" rx="2" ry="2" />
<text  x="700.90" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="751.1" y="293" width="0.9" height="15.0" fill="rgb(236,124,49)" rx="2" ry="2" />
<text  x="754.15" y="303.5" ></text>
</g>
<g >
<title>_IO_old_init (1 samples, 0.07%)</title><rect x="751.1" y="245" width="0.9" height="15.0" fill="rgb(212,97,6)" rx="2" ry="2" />
<text  x="754.15" y="255.5" ></text>
</g>
<g >
<title>PageId::~PageId (3 samples, 0.22%)</title><rect x="792.4" y="133" width="2.5" height="15.0" fill="rgb(233,156,22)" rx="2" ry="2" />
<text  x="795.37" y="143.5" ></text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.07%)</title><rect x="14.3" y="293" width="0.9" height="15.0" fill="rgb(220,122,10)" rx="2" ry="2" />
<text  x="17.29" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (13 samples, 0.95%)</title><rect x="1141.9" y="197" width="11.2" height="15.0" fill="rgb(237,36,21)" rx="2" ry="2" />
<text  x="1144.91" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.07%)</title><rect x="697.0" y="325" width="0.9" height="15.0" fill="rgb(251,68,11)" rx="2" ry="2" />
<text  x="700.05" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_ReuseOrAllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (24 samples, 1.75%)</title><rect x="1026.0" y="277" width="20.6" height="15.0" fill="rgb(254,64,33)" rx="2" ry="2" />
<text  x="1028.97" y="287.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal(s=s@entry=0x7ffd3a8f2430, (1 samples, 0.07%)</title><rect x="750.3" y="261" width="0.8" height="15.0" fill="rgb(251,43,38)" rx="2" ry="2" />
<text  x="753.29" y="271.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::computeForNetwork (345 samples, 25.11%)</title><rect x="800.1" y="357" width="296.3" height="15.0" fill="rgb(243,1,45)" rx="2" ry="2" />
<text  x="803.10" y="367.5" >MultiThreadedPageRankComputer::computeF..</text>
</g>
<g >
<title>__GI___libc_free(mem=&lt;optimized (1 samples, 0.07%)</title><rect x="1013.9" y="117" width="0.9" height="15.0" fill="rgb(227,112,35)" rx="2" ry="2" />
<text  x="1016.94" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (15 samples, 1.09%)</title><rect x="1013.1" y="197" width="12.9" height="15.0" fill="rgb(243,65,47)" rx="2" ry="2" />
<text  x="1016.09" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (12 samples, 0.87%)</title><rect x="1122.2" y="309" width="10.3" height="15.0" fill="rgb(246,222,25)" rx="2" ry="2" />
<text  x="1125.15" y="319.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.07%)</title><rect x="1140.2" y="245" width="0.8" height="15.0" fill="rgb(214,74,26)" rx="2" ry="2" />
<text  x="1143.19" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="760.6" y="293" width="0.9" height="15.0" fill="rgb(212,220,40)" rx="2" ry="2" />
<text  x="763.60" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x560186266c68, (1 samples, 0.07%)</title><rect x="999.3" y="133" width="0.9" height="15.0" fill="rgb(235,185,7)" rx="2" ry="2" />
<text  x="1002.34" y="143.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x5601776c2560) (1 samples, 0.07%)</title><rect x="792.4" y="37" width="0.8" height="15.0" fill="rgb(249,176,36)" rx="2" ry="2" />
<text  x="795.37" y="47.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;PageId, (1 samples, 0.07%)</title><rect x="737.4" y="325" width="0.9" height="15.0" fill="rgb(253,167,18)" rx="2" ry="2" />
<text  x="740.41" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (4 samples, 0.29%)</title><rect x="1149.6" y="149" width="3.5" height="15.0" fill="rgb(231,138,6)" rx="2" ry="2" />
<text  x="1152.64" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="726.2" y="245" width="0.9" height="15.0" fill="rgb(222,124,52)" rx="2" ry="2" />
<text  x="729.24" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="752.0" y="293" width="0.9" height="15.0" fill="rgb(220,87,7)" rx="2" ry="2" />
<text  x="755.01" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (2 samples, 0.15%)</title><rect x="1091.2" y="309" width="1.8" height="15.0" fill="rgb(235,67,30)" rx="2" ry="2" />
<text  x="1094.24" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (1 samples, 0.07%)</title><rect x="759.7" y="309" width="0.9" height="15.0" fill="rgb(208,42,23)" rx="2" ry="2" />
<text  x="762.74" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (4 samples, 0.29%)</title><rect x="792.4" y="325" width="3.4" height="15.0" fill="rgb(240,130,11)" rx="2" ry="2" />
<text  x="795.37" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1181.4" y="213" width="0.9" height="15.0" fill="rgb(224,156,41)" rx="2" ry="2" />
<text  x="1184.41" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (3 samples, 0.22%)</title><rect x="1067.2" y="293" width="2.6" height="15.0" fill="rgb(205,42,6)" rx="2" ry="2" />
<text  x="1070.19" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1136.8" y="181" width="1.7" height="15.0" fill="rgb(248,197,19)" rx="2" ry="2" />
<text  x="1139.75" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (20 samples, 1.46%)</title><rect x="765.7" y="229" width="17.2" height="15.0" fill="rgb(247,30,51)" rx="2" ry="2" />
<text  x="768.75" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x560179dd4ba0) (1 samples, 0.07%)</title><rect x="793.2" y="37" width="0.9" height="15.0" fill="rgb(245,67,28)" rx="2" ry="2" />
<text  x="796.23" y="47.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageIdAndRank&gt; (1 samples, 0.07%)</title><rect x="1182.3" y="309" width="0.8" height="15.0" fill="rgb(229,163,54)" rx="2" ry="2" />
<text  x="1185.27" y="319.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=68, (1 samples, 0.07%)</title><rect x="762.3" y="117" width="0.9" height="15.0" fill="rgb(226,117,44)" rx="2" ry="2" />
<text  x="765.31" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (12 samples, 0.87%)</title><rect x="1109.3" y="293" width="10.3" height="15.0" fill="rgb(249,141,41)" rx="2" ry="2" />
<text  x="1112.27" y="303.5" ></text>
</g>
<g >
<title>alloc_perturb (1 samples, 0.07%)</title><rect x="745.1" y="53" width="0.9" height="15.0" fill="rgb(207,16,50)" rx="2" ry="2" />
<text  x="748.14" y="63.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.07%)</title><rect x="1015.7" y="117" width="0.8" height="15.0" fill="rgb(239,167,54)" rx="2" ry="2" />
<text  x="1018.66" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="703.1" y="245" width="0.8" height="15.0" fill="rgb(240,137,6)" rx="2" ry="2" />
<text  x="706.06" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.07%)</title><rect x="1081.8" y="293" width="0.8" height="15.0" fill="rgb(233,208,9)" rx="2" ry="2" />
<text  x="1084.79" y="303.5" ></text>
</g>
<g >
<title>??() (798 samples, 58.08%)</title><rect x="10.0" y="357" width="685.3" height="15.0" fill="rgb(217,111,16)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >??()</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (12 samples, 0.87%)</title><rect x="1109.3" y="261" width="10.3" height="15.0" fill="rgb(215,224,47)" rx="2" ry="2" />
<text  x="1112.27" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=56) (1 samples, 0.07%)</title><rect x="694.5" y="149" width="0.8" height="15.0" fill="rgb(240,89,39)" rx="2" ry="2" />
<text  x="697.47" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (47 samples, 3.42%)</title><rect x="274.5" y="197" width="40.4" height="15.0" fill="rgb(213,196,53)" rx="2" ry="2" />
<text  x="277.51" y="207.5" >std..</text>
</g>
<g >
<title>PageId::PageId (2 samples, 0.15%)</title><rect x="979.6" y="325" width="1.7" height="15.0" fill="rgb(224,100,4)" rx="2" ry="2" />
<text  x="982.59" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (2 samples, 0.15%)</title><rect x="1102.4" y="229" width="1.7" height="15.0" fill="rgb(223,168,2)" rx="2" ry="2" />
<text  x="1105.40" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="1184.0" y="149" width="2.6" height="15.0" fill="rgb(237,150,26)" rx="2" ry="2" />
<text  x="1186.99" y="159.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.15%)</title><rect x="1158.2" y="181" width="1.7" height="15.0" fill="rgb(228,4,3)" rx="2" ry="2" />
<text  x="1161.22" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="1073.2" y="277" width="0.9" height="15.0" fill="rgb(207,199,26)" rx="2" ry="2" />
<text  x="1076.20" y="287.5" ></text>
</g>
<g >
<title>PageId::operator== (19 samples, 1.38%)</title><rect x="298.6" y="133" width="16.3" height="15.0" fill="rgb(210,51,35)" rx="2" ry="2" />
<text  x="301.56" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (15 samples, 1.09%)</title><rect x="1047.4" y="309" width="12.9" height="15.0" fill="rgb(205,6,27)" rx="2" ry="2" />
<text  x="1050.44" y="319.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.07%)</title><rect x="1072.3" y="245" width="0.9" height="15.0" fill="rgb(224,137,23)" rx="2" ry="2" />
<text  x="1075.34" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (20 samples, 1.46%)</title><rect x="765.7" y="325" width="17.2" height="15.0" fill="rgb(246,113,2)" rx="2" ry="2" />
<text  x="768.75" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x560169175c30, (1 samples, 0.07%)</title><rect x="1088.7" y="181" width="0.8" height="15.0" fill="rgb(212,226,31)" rx="2" ry="2" />
<text  x="1091.66" y="191.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (2 samples, 0.15%)</title><rect x="1091.2" y="261" width="1.8" height="15.0" fill="rgb(212,188,28)" rx="2" ry="2" />
<text  x="1094.24" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x560175fde5c8, (1 samples, 0.07%)</title><rect x="1019.1" y="133" width="0.9" height="15.0" fill="rgb(249,100,24)" rx="2" ry="2" />
<text  x="1022.10" y="143.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.07%)</title><rect x="728.0" y="213" width="0.8" height="15.0" fill="rgb(240,195,53)" rx="2" ry="2" />
<text  x="730.96" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (3 samples, 0.22%)</title><rect x="1119.6" y="261" width="2.6" height="15.0" fill="rgb(241,186,48)" rx="2" ry="2" />
<text  x="1122.58" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="759.7" y="197" width="0.9" height="15.0" fill="rgb(218,35,8)" rx="2" ry="2" />
<text  x="762.74" y="207.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=70, (6 samples, 0.44%)</title><rect x="1127.3" y="197" width="5.2" height="15.0" fill="rgb(235,40,0)" rx="2" ry="2" />
<text  x="1130.31" y="207.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=70, (10 samples, 0.73%)</title><rect x="1111.0" y="213" width="8.6" height="15.0" fill="rgb(210,194,49)" rx="2" ry="2" />
<text  x="1113.99" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId, (2 samples, 0.15%)</title><rect x="738.3" y="277" width="1.7" height="15.0" fill="rgb(218,95,29)" rx="2" ry="2" />
<text  x="741.27" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="14.3" y="245" width="0.9" height="15.0" fill="rgb(211,171,19)" rx="2" ry="2" />
<text  x="17.29" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="738.3" y="245" width="1.7" height="15.0" fill="rgb(248,72,19)" rx="2" ry="2" />
<text  x="741.27" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;PageId, (2 samples, 0.15%)</title><rect x="738.3" y="293" width="1.7" height="15.0" fill="rgb(214,111,26)" rx="2" ry="2" />
<text  x="741.27" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (3 samples, 0.22%)</title><rect x="740.0" y="165" width="2.6" height="15.0" fill="rgb(221,222,29)" rx="2" ry="2" />
<text  x="742.99" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1099.0" y="261" width="0.8" height="15.0" fill="rgb(216,146,43)" rx="2" ry="2" />
<text  x="1101.97" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1073.2" y="213" width="0.9" height="15.0" fill="rgb(243,110,43)" rx="2" ry="2" />
<text  x="1076.20" y="223.5" ></text>
</g>
<g >
<title>Page::Page (2 samples, 0.15%)</title><rect x="761.5" y="341" width="1.7" height="15.0" fill="rgb(213,27,32)" rx="2" ry="2" />
<text  x="764.46" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.15%)</title><rect x="979.6" y="261" width="1.7" height="15.0" fill="rgb(226,203,41)" rx="2" ry="2" />
<text  x="982.59" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (247 samples, 17.98%)</title><rect x="274.5" y="213" width="212.1" height="15.0" fill="rgb(248,189,46)" rx="2" ry="2" />
<text  x="277.51" y="223.5" >std::_Hashtable&lt;PageId,</text>
</g>
<g >
<title>NetworkGenerator::generatePageFromNumWithGeneratedId (1 samples, 0.07%)</title><rect x="695.3" y="341" width="0.9" height="15.0" fill="rgb(227,12,28)" rx="2" ry="2" />
<text  x="698.33" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (68 samples, 4.95%)</title><rect x="1001.9" y="325" width="58.4" height="15.0" fill="rgb(218,193,18)" rx="2" ry="2" />
<text  x="1004.92" y="335.5" >std::_..</text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.07%)</title><rect x="1099.8" y="325" width="0.9" height="15.0" fill="rgb(207,199,45)" rx="2" ry="2" />
<text  x="1102.83" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1099.0" y="165" width="0.8" height="15.0" fill="rgb(210,102,10)" rx="2" ry="2" />
<text  x="1101.97" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="1100.7" y="245" width="0.8" height="15.0" fill="rgb(236,40,24)" rx="2" ry="2" />
<text  x="1103.68" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (13 samples, 0.95%)</title><rect x="1141.9" y="245" width="11.2" height="15.0" fill="rgb(240,170,22)" rx="2" ry="2" />
<text  x="1144.91" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (5 samples, 0.36%)</title><rect x="1155.6" y="293" width="4.3" height="15.0" fill="rgb(210,51,17)" rx="2" ry="2" />
<text  x="1158.65" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId,std::allocator&lt;PageId&gt; (1 samples, 0.07%)</title><rect x="759.7" y="325" width="0.9" height="15.0" fill="rgb(235,77,5)" rx="2" ry="2" />
<text  x="762.74" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="733.1" y="229" width="1.7" height="15.0" fill="rgb(244,133,43)" rx="2" ry="2" />
<text  x="736.11" y="239.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.07%)</title><rect x="14.3" y="165" width="0.9" height="15.0" fill="rgb(243,226,5)" rx="2" ry="2" />
<text  x="17.29" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (3 samples, 0.22%)</title><rect x="734.8" y="181" width="2.6" height="15.0" fill="rgb(208,0,24)" rx="2" ry="2" />
<text  x="737.83" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (2 samples, 0.15%)</title><rect x="1178.0" y="293" width="1.7" height="15.0" fill="rgb(219,173,43)" rx="2" ry="2" />
<text  x="1180.98" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1099.0" y="213" width="0.8" height="15.0" fill="rgb(223,183,23)" rx="2" ry="2" />
<text  x="1101.97" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="762.3" y="229" width="0.9" height="15.0" fill="rgb(229,69,34)" rx="2" ry="2" />
<text  x="765.31" y="239.5" ></text>
</g>
<g >
<title>Page::getId (3 samples, 0.22%)</title><rect x="1101.5" y="341" width="2.6" height="15.0" fill="rgb(254,14,20)" rx="2" ry="2" />
<text  x="1104.54" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="749.4" y="293" width="0.9" height="15.0" fill="rgb(238,182,51)" rx="2" ry="2" />
<text  x="752.43" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="703.1" y="85" width="0.8" height="15.0" fill="rgb(234,10,3)" rx="2" ry="2" />
<text  x="706.06" y="95.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (2 samples, 0.15%)</title><rect x="1065.5" y="213" width="1.7" height="15.0" fill="rgb(254,36,8)" rx="2" ry="2" />
<text  x="1068.47" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.07%)</title><rect x="703.9" y="277" width="0.9" height="15.0" fill="rgb(242,225,39)" rx="2" ry="2" />
<text  x="706.92" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (1 samples, 0.07%)</title><rect x="1082.6" y="277" width="0.9" height="15.0" fill="rgb(230,21,7)" rx="2" ry="2" />
<text  x="1085.65" y="287.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="1181.4" y="149" width="0.9" height="15.0" fill="rgb(209,45,7)" rx="2" ry="2" />
<text  x="1184.41" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (5 samples, 0.36%)</title><rect x="1062.9" y="261" width="4.3" height="15.0" fill="rgb(235,10,23)" rx="2" ry="2" />
<text  x="1065.90" y="271.5" ></text>
</g>
<g >
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;)() (268 samples, 19.51%)</title><rect x="44.4" y="213" width="230.1" height="15.0" fill="rgb(215,39,5)" rx="2" ry="2" />
<text  x="47.35" y="223.5" >std::condition_variable::wait(..</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="1073.2" y="309" width="0.9" height="15.0" fill="rgb(254,127,43)" rx="2" ry="2" />
<text  x="1076.20" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (3 samples, 0.22%)</title><rect x="743.4" y="213" width="2.6" height="15.0" fill="rgb(244,209,10)" rx="2" ry="2" />
<text  x="746.42" y="223.5" ></text>
</g>
<g >
<title>Page::addLink (1 samples, 0.07%)</title><rect x="1099.0" y="341" width="0.8" height="15.0" fill="rgb(248,131,54)" rx="2" ry="2" />
<text  x="1101.97" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="977.9" y="245" width="1.7" height="15.0" fill="rgb(217,65,42)" rx="2" ry="2" />
<text  x="980.87" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.07%)</title><rect x="697.0" y="181" width="0.9" height="15.0" fill="rgb(226,43,29)" rx="2" ry="2" />
<text  x="700.05" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="750.3" y="293" width="0.8" height="15.0" fill="rgb(248,96,18)" rx="2" ry="2" />
<text  x="753.29" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (1 samples, 0.07%)</title><rect x="703.9" y="261" width="0.9" height="15.0" fill="rgb(232,159,51)" rx="2" ry="2" />
<text  x="706.92" y="271.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f4b12e11c40 (14 samples, 1.02%)</title><rect x="984.7" y="213" width="12.1" height="15.0" fill="rgb(238,5,49)" rx="2" ry="2" />
<text  x="987.75" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1093.0" y="197" width="0.8" height="15.0" fill="rgb(235,1,1)" rx="2" ry="2" />
<text  x="1095.95" y="207.5" ></text>
</g>
<g >
<title>PageId::~PageId (15 samples, 1.09%)</title><rect x="1013.1" y="213" width="12.9" height="15.0" fill="rgb(236,63,47)" rx="2" ry="2" />
<text  x="1016.09" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::allocate(this=0x7ffd3a8f20a8, (1 samples, 0.07%)</title><rect x="761.5" y="245" width="0.8" height="15.0" fill="rgb(223,65,13)" rx="2" ry="2" />
<text  x="764.46" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (5 samples, 0.36%)</title><rect x="1083.5" y="309" width="4.3" height="15.0" fill="rgb(248,71,0)" rx="2" ry="2" />
<text  x="1086.51" y="319.5" ></text>
</g>
<g >
<title>systrim(pad=&lt;optimized (1 samples, 0.07%)</title><rect x="1189.1" y="261" width="0.9" height="15.0" fill="rgb(208,133,15)" rx="2" ry="2" />
<text  x="1192.14" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="979.6" y="293" width="1.7" height="15.0" fill="rgb(220,86,9)" rx="2" ry="2" />
<text  x="982.59" y="303.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (92 samples, 6.70%)</title><rect x="981.3" y="341" width="79.0" height="15.0" fill="rgb(222,57,11)" rx="2" ry="2" />
<text  x="984.31" y="351.5" >std::unor..</text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (22 samples, 1.60%)</title><rect x="487.5" y="149" width="18.9" height="15.0" fill="rgb(207,38,28)" rx="2" ry="2" />
<text  x="490.50" y="159.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=68) (1 samples, 0.07%)</title><rect x="763.2" y="229" width="0.8" height="15.0" fill="rgb(216,30,7)" rx="2" ry="2" />
<text  x="766.17" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x560165877f28, (1 samples, 0.07%)</title><rect x="1013.1" y="133" width="0.8" height="15.0" fill="rgb(244,76,35)" rx="2" ry="2" />
<text  x="1016.09" y="143.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (1 samples, 0.07%)</title><rect x="697.0" y="261" width="0.9" height="15.0" fill="rgb(206,135,25)" rx="2" ry="2" />
<text  x="700.05" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (2 samples, 0.15%)</title><rect x="733.1" y="341" width="1.7" height="15.0" fill="rgb(252,73,46)" rx="2" ry="2" />
<text  x="736.11" y="351.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="1004.5" y="69" width="0.9" height="15.0" fill="rgb(221,102,24)" rx="2" ry="2" />
<text  x="1007.50" y="79.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.07%)</title><rect x="703.9" y="293" width="0.9" height="15.0" fill="rgb(210,152,21)" rx="2" ry="2" />
<text  x="706.92" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x560175cbfd68, (1 samples, 0.07%)</title><rect x="1018.2" y="133" width="0.9" height="15.0" fill="rgb(253,43,3)" rx="2" ry="2" />
<text  x="1021.24" y="143.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffd3a8f25a0 (1 samples, 0.07%)</title><rect x="746.9" y="277" width="0.8" height="15.0" fill="rgb(250,159,4)" rx="2" ry="2" />
<text  x="749.86" y="287.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::pageRankWorkFunc(index=4, (4 samples, 0.29%)</title><rect x="34.9" y="261" width="3.4" height="15.0" fill="rgb(212,190,20)" rx="2" ry="2" />
<text  x="37.91" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (2 samples, 0.15%)</title><rect x="796.7" y="277" width="1.7" height="15.0" fill="rgb(243,192,43)" rx="2" ry="2" />
<text  x="799.67" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10 samples, 0.73%)</title><rect x="768.3" y="197" width="8.6" height="15.0" fill="rgb(222,29,43)" rx="2" ry="2" />
<text  x="771.33" y="207.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=68, (2 samples, 0.15%)</title><rect x="733.1" y="133" width="1.7" height="15.0" fill="rgb(211,36,39)" rx="2" ry="2" />
<text  x="736.11" y="143.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f4b12e11c40 (2 samples, 0.15%)</title><rect x="1091.2" y="245" width="1.8" height="15.0" fill="rgb(216,189,48)" rx="2" ry="2" />
<text  x="1094.24" y="255.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="1001.1" y="229" width="0.8" height="15.0" fill="rgb(231,78,41)" rx="2" ry="2" />
<text  x="1004.06" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::deallocate(this=&lt;synthetic (18 samples, 1.31%)</title><rect x="981.3" y="245" width="15.5" height="15.0" fill="rgb(227,161,43)" rx="2" ry="2" />
<text  x="984.31" y="255.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffd3a8f25a0 (1 samples, 0.07%)</title><rect x="749.4" y="277" width="0.9" height="15.0" fill="rgb(214,146,25)" rx="2" ry="2" />
<text  x="752.43" y="287.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.07%)</title><rect x="1188.3" y="261" width="0.8" height="15.0" fill="rgb(253,109,39)" rx="2" ry="2" />
<text  x="1191.28" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (3 samples, 0.22%)</title><rect x="792.4" y="197" width="2.5" height="15.0" fill="rgb(236,155,27)" rx="2" ry="2" />
<text  x="795.37" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (271 samples, 19.72%)</title><rect x="274.5" y="229" width="232.7" height="15.0" fill="rgb(216,224,16)" rx="2" ry="2" />
<text  x="277.51" y="239.5" >std::__detail::_Map_base&lt;PageId,</text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (3 samples, 0.22%)</title><rect x="1184.0" y="213" width="2.6" height="15.0" fill="rgb(208,176,43)" rx="2" ry="2" />
<text  x="1186.99" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (15 samples, 1.09%)</title><rect x="1013.1" y="181" width="12.9" height="15.0" fill="rgb(211,47,2)" rx="2" ry="2" />
<text  x="1016.09" y="191.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=15360) (1 samples, 0.07%)</title><rect x="761.5" y="213" width="0.8" height="15.0" fill="rgb(207,112,41)" rx="2" ry="2" />
<text  x="764.46" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.07%)</title><rect x="1155.6" y="277" width="0.9" height="15.0" fill="rgb(216,87,0)" rx="2" ry="2" />
<text  x="1158.65" y="287.5" ></text>
</g>
<g >
<title>operatornew(unsigned (2 samples, 0.15%)</title><rect x="763.2" y="245" width="1.7" height="15.0" fill="rgb(208,129,32)" rx="2" ry="2" />
<text  x="766.17" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="746.9" y="293" width="0.8" height="15.0" fill="rgb(222,38,20)" rx="2" ry="2" />
<text  x="749.86" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (1 samples, 0.07%)</title><rect x="1138.5" y="245" width="0.8" height="15.0" fill="rgb(215,201,31)" rx="2" ry="2" />
<text  x="1141.47" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;PageId (3 samples, 0.22%)</title><rect x="743.4" y="245" width="2.6" height="15.0" fill="rgb(205,152,41)" rx="2" ry="2" />
<text  x="746.42" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;Page*, (1 samples, 0.07%)</title><rect x="1096.4" y="293" width="0.8" height="15.0" fill="rgb(231,97,27)" rx="2" ry="2" />
<text  x="1099.39" y="303.5" ></text>
</g>
<g >
<title>std::(__val=230263) (1 samples, 0.07%)</title><rect x="1097.2" y="325" width="0.9" height="15.0" fill="rgb(236,168,27)" rx="2" ry="2" />
<text  x="1100.25" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (5 samples, 0.36%)</title><rect x="1083.5" y="293" width="4.3" height="15.0" fill="rgb(209,43,52)" rx="2" ry="2" />
<text  x="1086.51" y="303.5" ></text>
</g>
<g >
<title>futex_wait_cancelable (268 samples, 19.51%)</title><rect x="44.4" y="165" width="230.1" height="15.0" fill="rgb(243,222,7)" rx="2" ry="2" />
<text  x="47.35" y="175.5" >futex_wait_cancelable</text>
</g>
<g >
<title>PageId::PageId (3 samples, 0.22%)</title><rect x="757.2" y="277" width="2.5" height="15.0" fill="rgb(222,171,3)" rx="2" ry="2" />
<text  x="760.16" y="287.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,double, (219 samples, 15.94%)</title><rect x="507.2" y="245" width="188.1" height="15.0" fill="rgb(252,122,43)" rx="2" ry="2" />
<text  x="510.25" y="255.5" >std::unordered_map&lt;PageI..</text>
</g>
<g >
<title>std::condition_variable::wait&lt;MultiThreadedPageRankComputer::CyclicBarrier::wait()::{lambda()#1}&gt;(std::unique_lock&lt;std::mutex&gt;&amp;,MultiThreadedPageRankComputer::CyclicBarrier::wait()::{lambda()#1}) (205 samples, 14.92%)</title><rect x="800.1" y="325" width="176.1" height="15.0" fill="rgb(209,178,36)" rx="2" ry="2" />
<text  x="803.10" y="335.5" >std::condition_variabl..</text>
</g>
<g >
<title>PageId::PageId (8 samples, 0.58%)</title><rect x="726.2" y="325" width="6.9" height="15.0" fill="rgb(236,215,16)" rx="2" ry="2" />
<text  x="729.24" y="335.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (19 samples, 1.38%)</title><rect x="678.2" y="181" width="16.3" height="15.0" fill="rgb(207,86,22)" rx="2" ry="2" />
<text  x="681.15" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (4 samples, 0.29%)</title><rect x="996.8" y="245" width="3.4" height="15.0" fill="rgb(220,93,8)" rx="2" ry="2" />
<text  x="999.77" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="745.1" y="117" width="0.9" height="15.0" fill="rgb(216,167,23)" rx="2" ry="2" />
<text  x="748.14" y="127.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;Page*&gt;, (1 samples, 0.07%)</title><rect x="1096.4" y="245" width="0.8" height="15.0" fill="rgb(234,94,28)" rx="2" ry="2" />
<text  x="1099.39" y="255.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="756.3" y="229" width="0.9" height="15.0" fill="rgb(211,123,16)" rx="2" ry="2" />
<text  x="759.30" y="239.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.07%)</title><rect x="782.9" y="341" width="0.9" height="15.0" fill="rgb(241,112,17)" rx="2" ry="2" />
<text  x="785.93" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (1 samples, 0.07%)</title><rect x="759.7" y="245" width="0.9" height="15.0" fill="rgb(206,102,19)" rx="2" ry="2" />
<text  x="762.74" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x560177793dd0) (1 samples, 0.07%)</title><rect x="1020.0" y="117" width="0.8" height="15.0" fill="rgb(212,198,9)" rx="2" ry="2" />
<text  x="1022.96" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="1009.7" y="149" width="2.5" height="15.0" fill="rgb(243,58,11)" rx="2" ry="2" />
<text  x="1012.65" y="159.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (2 samples, 0.15%)</title><rect x="1065.5" y="197" width="1.7" height="15.0" fill="rgb(211,93,34)" rx="2" ry="2" />
<text  x="1068.47" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.15%)</title><rect x="789.8" y="293" width="1.7" height="15.0" fill="rgb(232,165,5)" rx="2" ry="2" />
<text  x="792.80" y="303.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,double, (22 samples, 1.60%)</title><rect x="1060.3" y="341" width="18.9" height="15.0" fill="rgb(214,154,45)" rx="2" ry="2" />
<text  x="1063.32" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;Page, (2 samples, 0.15%)</title><rect x="1186.6" y="309" width="1.7" height="15.0" fill="rgb(229,86,28)" rx="2" ry="2" />
<text  x="1189.56" y="319.5" ></text>
</g>
<g >
<title>NetworkGenerator::generatePageFromNum (1 samples, 0.07%)</title><rect x="695.3" y="325" width="0.9" height="15.0" fill="rgb(252,61,51)" rx="2" ry="2" />
<text  x="698.33" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (24 samples, 1.75%)</title><rect x="981.3" y="325" width="20.6" height="15.0" fill="rgb(248,17,30)" rx="2" ry="2" />
<text  x="984.31" y="335.5" ></text>
</g>
<g >
<title>futex_wait_cancelable (205 samples, 14.92%)</title><rect x="800.1" y="261" width="176.1" height="15.0" fill="rgb(226,147,6)" rx="2" ry="2" />
<text  x="803.10" y="271.5" >futex_wait_cancelable</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId, (1 samples, 0.07%)</title><rect x="1180.6" y="277" width="0.8" height="15.0" fill="rgb(238,7,45)" rx="2" ry="2" />
<text  x="1183.55" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x56016d747c30, (1 samples, 0.07%)</title><rect x="1181.4" y="165" width="0.9" height="15.0" fill="rgb(211,78,1)" rx="2" ry="2" />
<text  x="1184.41" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7ffd3a8f28a0, (1 samples, 0.07%)</title><rect x="760.6" y="261" width="0.9" height="15.0" fill="rgb(222,90,21)" rx="2" ry="2" />
<text  x="763.60" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (2 samples, 0.15%)</title><rect x="1091.2" y="325" width="1.8" height="15.0" fill="rgb(212,58,26)" rx="2" ry="2" />
<text  x="1094.24" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f4b06ad71d0, (1 samples, 0.07%)</title><rect x="736.6" y="165" width="0.8" height="15.0" fill="rgb(212,147,5)" rx="2" ry="2" />
<text  x="739.55" y="175.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (2 samples, 0.15%)</title><rect x="1158.2" y="213" width="1.7" height="15.0" fill="rgb(205,171,21)" rx="2" ry="2" />
<text  x="1161.22" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x7ffd3a8f23a0, (2 samples, 0.15%)</title><rect x="1091.2" y="277" width="1.8" height="15.0" fill="rgb(206,144,22)" rx="2" ry="2" />
<text  x="1094.24" y="287.5" ></text>
</g>
<g >
<title>start_thread(arg=&lt;optimized (798 samples, 58.08%)</title><rect x="10.0" y="373" width="685.3" height="15.0" fill="rgb(238,34,52)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >start_thread(arg=&lt;optimized</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (1 samples, 0.07%)</title><rect x="1008.8" y="245" width="0.9" height="15.0" fill="rgb(207,160,40)" rx="2" ry="2" />
<text  x="1011.79" y="255.5" ></text>
</g>
<g >
<title>PageId::~PageId (3 samples, 0.22%)</title><rect x="1184.0" y="165" width="2.6" height="15.0" fill="rgb(215,34,17)" rx="2" ry="2" />
<text  x="1186.99" y="175.5" ></text>
</g>
<g >
<title>PageId::PageId (2 samples, 0.15%)</title><rect x="763.2" y="325" width="1.7" height="15.0" fill="rgb(225,38,15)" rx="2" ry="2" />
<text  x="766.17" y="335.5" ></text>
</g>
<g >
<title>std::(__val=963) (1 samples, 0.07%)</title><rect x="752.0" y="309" width="0.9" height="15.0" fill="rgb(239,133,15)" rx="2" ry="2" />
<text  x="755.01" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="1184.0" y="133" width="2.6" height="15.0" fill="rgb(218,55,43)" rx="2" ry="2" />
<text  x="1186.99" y="143.5" ></text>
</g>
<g >
<title>std::swap&lt;PageId*&gt;(__b=@0x56017b20e898: (1 samples, 0.07%)</title><rect x="1096.4" y="149" width="0.8" height="15.0" fill="rgb(228,167,11)" rx="2" ry="2" />
<text  x="1099.39" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x560178c61bd8, (1 samples, 0.07%)</title><rect x="1022.5" y="133" width="0.9" height="15.0" fill="rgb(212,189,47)" rx="2" ry="2" />
<text  x="1025.53" y="143.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (205 samples, 14.92%)</title><rect x="800.1" y="277" width="176.1" height="15.0" fill="rgb(246,217,38)" rx="2" ry="2" />
<text  x="803.10" y="287.5" >__pthread_cond_wait_co..</text>
</g>
<g >
<title>PageId::PageId (1 samples, 0.07%)</title><rect x="762.3" y="245" width="0.9" height="15.0" fill="rgb(249,191,46)" rx="2" ry="2" />
<text  x="765.31" y="255.5" ></text>
</g>
<g >
<title>pageRankComputationWithNumNodes (8 samples, 0.58%)</title><rect x="1183.1" y="373" width="6.9" height="15.0" fill="rgb(230,173,54)" rx="2" ry="2" />
<text  x="1186.13" y="383.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.07%)</title><rect x="745.1" y="101" width="0.9" height="15.0" fill="rgb(241,109,19)" rx="2" ry="2" />
<text  x="748.14" y="111.5" ></text>
</g>
<g >
<title>__GI___default_morecore(increment=&lt;optimized (1 samples, 0.07%)</title><rect x="1189.1" y="245" width="0.9" height="15.0" fill="rgb(239,187,32)" rx="2" ry="2" />
<text  x="1192.14" y="255.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::computeForNetwork (45 samples, 3.28%)</title><rect x="761.5" y="357" width="38.6" height="15.0" fill="rgb(226,43,52)" rx="2" ry="2" />
<text  x="764.46" y="367.5" >Sin..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.15%)</title><rect x="1175.4" y="309" width="1.7" height="15.0" fill="rgb(237,198,20)" rx="2" ry="2" />
<text  x="1178.40" y="319.5" ></text>
</g>
<g >
<title>PageId::PageId (7 samples, 0.51%)</title><rect x="1002.8" y="213" width="6.0" height="15.0" fill="rgb(209,60,26)" rx="2" ry="2" />
<text  x="1005.78" y="223.5" ></text>
</g>
<g >
<title>PageId::PageId (3 samples, 0.22%)</title><rect x="1101.5" y="325" width="2.6" height="15.0" fill="rgb(241,43,32)" rx="2" ry="2" />
<text  x="1104.54" y="335.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffd3a8f25a0 (1 samples, 0.07%)</title><rect x="747.7" y="277" width="0.9" height="15.0" fill="rgb(243,111,12)" rx="2" ry="2" />
<text  x="750.71" y="287.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f4af4000020, (1 samples, 0.07%)</title><rect x="16.9" y="181" width="0.8" height="15.0" fill="rgb(235,189,19)" rx="2" ry="2" />
<text  x="19.87" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (12 samples, 0.87%)</title><rect x="1109.3" y="277" width="10.3" height="15.0" fill="rgb(242,212,53)" rx="2" ry="2" />
<text  x="1112.27" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="762.3" y="165" width="0.9" height="15.0" fill="rgb(208,191,26)" rx="2" ry="2" />
<text  x="765.31" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (15 samples, 1.09%)</title><rect x="1013.1" y="165" width="12.9" height="15.0" fill="rgb(240,179,41)" rx="2" ry="2" />
<text  x="1016.09" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (3 samples, 0.22%)</title><rect x="757.2" y="325" width="2.5" height="15.0" fill="rgb(227,212,28)" rx="2" ry="2" />
<text  x="760.16" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.15%)</title><rect x="1178.0" y="309" width="1.7" height="15.0" fill="rgb(247,121,15)" rx="2" ry="2" />
<text  x="1180.98" y="319.5" ></text>
</g>
<g >
<title>all (1,374 samples, 100%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(219,94,13)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1147.9" y="117" width="1.7" height="15.0" fill="rgb(226,79,9)" rx="2" ry="2" />
<text  x="1150.92" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.07%)</title><rect x="1072.3" y="309" width="0.9" height="15.0" fill="rgb(234,184,19)" rx="2" ry="2" />
<text  x="1075.34" y="319.5" ></text>
</g>
<g >
<title>Page::Page (1 samples, 0.07%)</title><rect x="1099.8" y="341" width="0.9" height="15.0" fill="rgb(237,173,44)" rx="2" ry="2" />
<text  x="1102.83" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId, (3 samples, 0.22%)</title><rect x="1184.0" y="245" width="2.6" height="15.0" fill="rgb(227,89,33)" rx="2" ry="2" />
<text  x="1186.99" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (3 samples, 0.22%)</title><rect x="1136.8" y="261" width="2.5" height="15.0" fill="rgb(208,29,6)" rx="2" ry="2" />
<text  x="1139.75" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (15 samples, 1.09%)</title><rect x="1013.1" y="149" width="12.9" height="15.0" fill="rgb(254,154,15)" rx="2" ry="2" />
<text  x="1016.09" y="159.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.07%)</title><rect x="791.5" y="261" width="0.9" height="15.0" fill="rgb(229,5,36)" rx="2" ry="2" />
<text  x="794.51" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffd3a8f1f80, (1 samples, 0.07%)</title><rect x="1135.9" y="277" width="0.9" height="15.0" fill="rgb(246,185,43)" rx="2" ry="2" />
<text  x="1138.90" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="703.1" y="117" width="0.8" height="15.0" fill="rgb(240,38,8)" rx="2" ry="2" />
<text  x="706.06" y="127.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;std::pair&lt;PageId, (3 samples, 0.22%)</title><rect x="740.0" y="293" width="2.6" height="15.0" fill="rgb(246,19,18)" rx="2" ry="2" />
<text  x="742.99" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="696.2" y="309" width="0.8" height="15.0" fill="rgb(225,222,26)" rx="2" ry="2" />
<text  x="699.19" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="733.1" y="197" width="1.7" height="15.0" fill="rgb(208,144,45)" rx="2" ry="2" />
<text  x="736.11" y="207.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=67, (4 samples, 0.29%)</title><rect x="697.9" y="213" width="3.4" height="15.0" fill="rgb(222,165,8)" rx="2" ry="2" />
<text  x="700.90" y="223.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (1 samples, 0.07%)</title><rect x="759.7" y="293" width="0.9" height="15.0" fill="rgb(228,12,25)" rx="2" ry="2" />
<text  x="762.74" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;MultiThreadedPageRankComputer::ThreadRAII, (2 samples, 0.15%)</title><rect x="976.2" y="325" width="1.7" height="15.0" fill="rgb(249,89,24)" rx="2" ry="2" />
<text  x="979.16" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.07%)</title><rect x="703.1" y="325" width="0.8" height="15.0" fill="rgb(221,40,15)" rx="2" ry="2" />
<text  x="706.06" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="733.1" y="245" width="1.7" height="15.0" fill="rgb(227,136,7)" rx="2" ry="2" />
<text  x="736.11" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1136.8" y="197" width="1.7" height="15.0" fill="rgb(216,86,11)" rx="2" ry="2" />
<text  x="1139.75" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=69) (3 samples, 0.22%)</title><rect x="730.5" y="229" width="2.6" height="15.0" fill="rgb(217,133,34)" rx="2" ry="2" />
<text  x="733.54" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1004.5" y="101" width="0.9" height="15.0" fill="rgb(252,89,39)" rx="2" ry="2" />
<text  x="1007.50" y="111.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=69) (1 samples, 0.07%)</title><rect x="764.0" y="229" width="0.9" height="15.0" fill="rgb(229,137,48)" rx="2" ry="2" />
<text  x="767.03" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; (18 samples, 1.31%)</title><rect x="981.3" y="261" width="15.5" height="15.0" fill="rgb(219,78,48)" rx="2" ry="2" />
<text  x="984.31" y="271.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.07%)</title><rect x="16.9" y="165" width="0.8" height="15.0" fill="rgb(213,164,37)" rx="2" ry="2" />
<text  x="19.87" y="175.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (1 samples, 0.07%)</title><rect x="697.0" y="293" width="0.9" height="15.0" fill="rgb(227,53,53)" rx="2" ry="2" />
<text  x="700.05" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (20 samples, 1.46%)</title><rect x="765.7" y="261" width="17.2" height="15.0" fill="rgb(215,72,36)" rx="2" ry="2" />
<text  x="768.75" y="271.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f4b12e11c40 (2 samples, 0.15%)</title><rect x="1186.6" y="245" width="1.7" height="15.0" fill="rgb(239,138,23)" rx="2" ry="2" />
<text  x="1189.56" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;PageId, (1 samples, 0.07%)</title><rect x="737.4" y="293" width="0.9" height="15.0" fill="rgb(241,222,18)" rx="2" ry="2" />
<text  x="740.41" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="1101.5" y="309" width="2.6" height="15.0" fill="rgb(221,166,33)" rx="2" ry="2" />
<text  x="1104.54" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (3 samples, 0.22%)</title><rect x="1136.8" y="277" width="2.5" height="15.0" fill="rgb(210,91,25)" rx="2" ry="2" />
<text  x="1139.75" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1099.8" y="229" width="0.9" height="15.0" fill="rgb(236,180,39)" rx="2" ry="2" />
<text  x="1102.83" y="239.5" ></text>
</g>
<g >
<title>PageId::PageId (4 samples, 0.29%)</title><rect x="1093.0" y="293" width="3.4" height="15.0" fill="rgb(250,169,3)" rx="2" ry="2" />
<text  x="1095.95" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="757.2" y="261" width="2.5" height="15.0" fill="rgb(226,100,34)" rx="2" ry="2" />
<text  x="760.16" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.07%)</title><rect x="1001.9" y="261" width="0.9" height="15.0" fill="rgb(237,79,20)" rx="2" ry="2" />
<text  x="1004.92" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (2 samples, 0.15%)</title><rect x="1120.4" y="229" width="1.8" height="15.0" fill="rgb(218,41,34)" rx="2" ry="2" />
<text  x="1123.44" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;std::pair&lt;PageId, (3 samples, 0.22%)</title><rect x="740.0" y="277" width="2.6" height="15.0" fill="rgb(252,145,2)" rx="2" ry="2" />
<text  x="742.99" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (3 samples, 0.22%)</title><rect x="757.2" y="213" width="2.5" height="15.0" fill="rgb(205,77,34)" rx="2" ry="2" />
<text  x="760.16" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="762.3" y="181" width="0.9" height="15.0" fill="rgb(254,207,24)" rx="2" ry="2" />
<text  x="765.31" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1099.8" y="293" width="0.9" height="15.0" fill="rgb(206,175,40)" rx="2" ry="2" />
<text  x="1102.83" y="303.5" ></text>
</g>
<g >
<title>__GI___sbrk (1 samples, 0.07%)</title><rect x="1189.1" y="229" width="0.9" height="15.0" fill="rgb(252,222,14)" rx="2" ry="2" />
<text  x="1192.14" y="239.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.07%)</title><rect x="797.5" y="181" width="0.9" height="15.0" fill="rgb(249,15,9)" rx="2" ry="2" />
<text  x="800.53" y="191.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (268 samples, 19.51%)</title><rect x="44.4" y="181" width="230.1" height="15.0" fill="rgb(242,110,3)" rx="2" ry="2" />
<text  x="47.35" y="191.5" >__pthread_cond_wait_common</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (3 samples, 0.22%)</title><rect x="1079.2" y="293" width="2.6" height="15.0" fill="rgb(248,60,47)" rx="2" ry="2" />
<text  x="1082.21" y="303.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffd3a8f25a0 (1 samples, 0.07%)</title><rect x="752.0" y="277" width="0.9" height="15.0" fill="rgb(212,75,18)" rx="2" ry="2" />
<text  x="755.01" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (3 samples, 0.22%)</title><rect x="1060.3" y="261" width="2.6" height="15.0" fill="rgb(237,123,11)" rx="2" ry="2" />
<text  x="1063.32" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (8 samples, 0.58%)</title><rect x="726.2" y="309" width="6.9" height="15.0" fill="rgb(225,75,47)" rx="2" ry="2" />
<text  x="729.24" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1183.1" y="197" width="0.9" height="15.0" fill="rgb(239,144,45)" rx="2" ry="2" />
<text  x="1186.13" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="1147.9" y="133" width="1.7" height="15.0" fill="rgb(207,192,50)" rx="2" ry="2" />
<text  x="1150.92" y="143.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (13 samples, 0.95%)</title><rect x="1141.9" y="229" width="11.2" height="15.0" fill="rgb(214,127,10)" rx="2" ry="2" />
<text  x="1144.91" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="979.6" y="277" width="1.7" height="15.0" fill="rgb(223,186,40)" rx="2" ry="2" />
<text  x="982.59" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="743.4" y="149" width="2.6" height="15.0" fill="rgb(217,113,1)" rx="2" ry="2" />
<text  x="746.42" y="159.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (2 samples, 0.15%)</title><rect x="733.1" y="309" width="1.7" height="15.0" fill="rgb(248,23,20)" rx="2" ry="2" />
<text  x="736.11" y="319.5" ></text>
</g>
<g >
<title>PageId::PageId (2 samples, 0.15%)</title><rect x="977.9" y="325" width="1.7" height="15.0" fill="rgb(215,126,43)" rx="2" ry="2" />
<text  x="980.87" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=69) (1 samples, 0.07%)</title><rect x="745.1" y="85" width="0.9" height="15.0" fill="rgb(228,119,22)" rx="2" ry="2" />
<text  x="748.14" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank, (2 samples, 0.15%)</title><rect x="1181.4" y="341" width="1.7" height="15.0" fill="rgb(225,108,15)" rx="2" ry="2" />
<text  x="1184.41" y="351.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::CyclicBarrier::wait (25 samples, 1.82%)</title><rect x="704.8" y="341" width="21.4" height="15.0" fill="rgb(225,174,38)" rx="2" ry="2" />
<text  x="707.77" y="351.5" >M..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="726.2" y="213" width="0.9" height="15.0" fill="rgb(222,144,41)" rx="2" ry="2" />
<text  x="729.24" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (11 samples, 0.80%)</title><rect x="507.2" y="165" width="9.5" height="15.0" fill="rgb(209,12,36)" rx="2" ry="2" />
<text  x="510.25" y="175.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="734.8" y="149" width="0.9" height="15.0" fill="rgb(227,223,24)" rx="2" ry="2" />
<text  x="737.83" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (43 samples, 3.13%)</title><rect x="277.9" y="165" width="37.0" height="15.0" fill="rgb(247,141,1)" rx="2" ry="2" />
<text  x="280.95" y="175.5" >std..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="753.7" y="229" width="0.9" height="15.0" fill="rgb(235,183,1)" rx="2" ry="2" />
<text  x="756.73" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x5601788cab30, (1 samples, 0.07%)</title><rect x="1185.7" y="85" width="0.9" height="15.0" fill="rgb(235,125,28)" rx="2" ry="2" />
<text  x="1188.71" y="95.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.07%)</title><rect x="761.5" y="229" width="0.8" height="15.0" fill="rgb(223,136,49)" rx="2" ry="2" />
<text  x="764.46" y="239.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (24 samples, 1.75%)</title><rect x="486.6" y="181" width="20.6" height="15.0" fill="rgb(216,126,5)" rx="2" ry="2" />
<text  x="489.64" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.29%)</title><rect x="1093.0" y="261" width="3.4" height="15.0" fill="rgb(235,25,42)" rx="2" ry="2" />
<text  x="1095.95" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="1126.4" y="181" width="0.9" height="15.0" fill="rgb(246,176,17)" rx="2" ry="2" />
<text  x="1129.45" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x56017ad08980, (1 samples, 0.07%)</title><rect x="1089.5" y="181" width="0.9" height="15.0" fill="rgb(205,141,21)" rx="2" ry="2" />
<text  x="1092.52" y="191.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal(sf=sf@entry=0x7ffd3a8f2430, (1 samples, 0.07%)</title><rect x="746.0" y="261" width="0.9" height="15.0" fill="rgb(248,187,39)" rx="2" ry="2" />
<text  x="749.00" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.07%)</title><rect x="783.8" y="245" width="0.8" height="15.0" fill="rgb(209,11,41)" rx="2" ry="2" />
<text  x="786.78" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (4 samples, 0.29%)</title><rect x="1087.8" y="293" width="3.4" height="15.0" fill="rgb(209,182,20)" rx="2" ry="2" />
<text  x="1090.80" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (5 samples, 0.36%)</title><rect x="1004.5" y="165" width="4.3" height="15.0" fill="rgb(243,213,2)" rx="2" ry="2" />
<text  x="1007.50" y="175.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,unsigned (10 samples, 0.73%)</title><rect x="1079.2" y="341" width="8.6" height="15.0" fill="rgb(237,97,37)" rx="2" ry="2" />
<text  x="1082.21" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Page&gt;::deallocate(this=0x7ffd3a8f2ab0, (2 samples, 0.15%)</title><rect x="1186.6" y="277" width="1.7" height="15.0" fill="rgb(231,130,54)" rx="2" ry="2" />
<text  x="1189.56" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="762.3" y="101" width="0.9" height="15.0" fill="rgb(212,85,9)" rx="2" ry="2" />
<text  x="765.31" y="111.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (1 samples, 0.07%)</title><rect x="980.5" y="229" width="0.8" height="15.0" fill="rgb(243,132,25)" rx="2" ry="2" />
<text  x="983.45" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="757.2" y="245" width="2.5" height="15.0" fill="rgb(226,29,47)" rx="2" ry="2" />
<text  x="760.16" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1100.7" y="261" width="0.8" height="15.0" fill="rgb(213,214,33)" rx="2" ry="2" />
<text  x="1103.68" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.07%)</title><rect x="1181.4" y="181" width="0.9" height="15.0" fill="rgb(237,155,0)" rx="2" ry="2" />
<text  x="1184.41" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (4 samples, 0.29%)</title><rect x="792.4" y="277" width="3.4" height="15.0" fill="rgb(252,156,34)" rx="2" ry="2" />
<text  x="795.37" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (7 samples, 0.51%)</title><rect x="1002.8" y="245" width="6.0" height="15.0" fill="rgb(238,154,41)" rx="2" ry="2" />
<text  x="1005.78" y="255.5" ></text>
</g>
<g >
<title>PageId::PageId (4 samples, 0.29%)</title><rect x="1009.7" y="213" width="3.4" height="15.0" fill="rgb(249,85,28)" rx="2" ry="2" />
<text  x="1012.65" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.07%)</title><rect x="1001.9" y="277" width="0.9" height="15.0" fill="rgb(229,166,22)" rx="2" ry="2" />
<text  x="1004.92" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.22%)</title><rect x="1009.7" y="69" width="2.5" height="15.0" fill="rgb(215,72,33)" rx="2" ry="2" />
<text  x="1012.65" y="79.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (19 samples, 1.38%)</title><rect x="678.2" y="197" width="16.3" height="15.0" fill="rgb(239,51,39)" rx="2" ry="2" />
<text  x="681.15" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="697.0" y="229" width="0.9" height="15.0" fill="rgb(247,132,11)" rx="2" ry="2" />
<text  x="700.05" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="977.9" y="229" width="1.7" height="15.0" fill="rgb(205,90,23)" rx="2" ry="2" />
<text  x="980.87" y="239.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (19 samples, 1.38%)</title><rect x="678.2" y="149" width="16.3" height="15.0" fill="rgb(219,88,11)" rx="2" ry="2" />
<text  x="681.15" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (16 samples, 1.16%)</title><rect x="1141.9" y="309" width="13.7" height="15.0" fill="rgb(208,11,28)" rx="2" ry="2" />
<text  x="1144.91" y="319.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffd3a8f2300 (1 samples, 0.07%)</title><rect x="1098.1" y="293" width="0.9" height="15.0" fill="rgb(208,208,23)" rx="2" ry="2" />
<text  x="1101.11" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x5601796d88d8, (1 samples, 0.07%)</title><rect x="1024.3" y="133" width="0.8" height="15.0" fill="rgb(217,129,15)" rx="2" ry="2" />
<text  x="1027.25" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1099.0" y="197" width="0.8" height="15.0" fill="rgb(205,223,52)" rx="2" ry="2" />
<text  x="1101.97" y="207.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,unsigned (3 samples, 0.22%)</title><rect x="1178.0" y="341" width="2.6" height="15.0" fill="rgb(222,134,16)" rx="2" ry="2" />
<text  x="1180.98" y="351.5" ></text>
</g>
<g >
<title>PageId::~PageId (1 samples, 0.07%)</title><rect x="1183.1" y="245" width="0.9" height="15.0" fill="rgb(207,165,38)" rx="2" ry="2" />
<text  x="1186.13" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="1184.0" y="117" width="2.6" height="15.0" fill="rgb(230,193,37)" rx="2" ry="2" />
<text  x="1186.99" y="127.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, (4 samples, 0.29%)</title><rect x="753.7" y="293" width="3.5" height="15.0" fill="rgb(216,214,37)" rx="2" ry="2" />
<text  x="756.73" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="747.7" y="293" width="0.9" height="15.0" fill="rgb(232,216,8)" rx="2" ry="2" />
<text  x="750.71" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="762.3" y="133" width="0.9" height="15.0" fill="rgb(229,3,26)" rx="2" ry="2" />
<text  x="765.31" y="143.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::generateIds (2 samples, 0.15%)</title><rect x="976.2" y="341" width="1.7" height="15.0" fill="rgb(205,164,36)" rx="2" ry="2" />
<text  x="979.16" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (1 samples, 0.07%)</title><rect x="697.0" y="309" width="0.9" height="15.0" fill="rgb(245,196,21)" rx="2" ry="2" />
<text  x="700.05" y="319.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (1 samples, 0.07%)</title><rect x="764.9" y="309" width="0.8" height="15.0" fill="rgb(244,78,3)" rx="2" ry="2" />
<text  x="767.89" y="319.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="997.6" y="117" width="0.9" height="15.0" fill="rgb(230,175,39)" rx="2" ry="2" />
<text  x="1000.63" y="127.5" ></text>
</g>
<g >
<title>main() (576 samples, 41.92%)</title><rect x="695.3" y="389" width="494.7" height="15.0" fill="rgb(208,181,22)" rx="2" ry="2" />
<text  x="698.33" y="399.5" >main()</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (1 samples, 0.07%)</title><rect x="694.5" y="181" width="0.8" height="15.0" fill="rgb(218,143,44)" rx="2" ry="2" />
<text  x="697.47" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="743.4" y="117" width="1.7" height="15.0" fill="rgb(220,111,41)" rx="2" ry="2" />
<text  x="746.42" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (107 samples, 7.79%)</title><rect x="507.2" y="197" width="91.9" height="15.0" fill="rgb(253,211,35)" rx="2" ry="2" />
<text  x="510.25" y="207.5" >std::_Hash..</text>
</g>
<g >
<title>operatornew(unsigned (4 samples, 0.29%)</title><rect x="1005.4" y="133" width="3.4" height="15.0" fill="rgb(245,12,21)" rx="2" ry="2" />
<text  x="1008.36" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (4 samples, 0.29%)</title><rect x="792.4" y="293" width="3.4" height="15.0" fill="rgb(224,114,4)" rx="2" ry="2" />
<text  x="795.37" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (1 samples, 0.07%)</title><rect x="759.7" y="261" width="0.9" height="15.0" fill="rgb(229,27,29)" rx="2" ry="2" />
<text  x="762.74" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;PageId, (3 samples, 0.22%)</title><rect x="734.8" y="325" width="2.6" height="15.0" fill="rgb(207,188,2)" rx="2" ry="2" />
<text  x="737.83" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (4 samples, 0.29%)</title><rect x="1005.4" y="149" width="3.4" height="15.0" fill="rgb(238,187,13)" rx="2" ry="2" />
<text  x="1008.36" y="159.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="1154.8" y="197" width="0.8" height="15.0" fill="rgb(247,3,11)" rx="2" ry="2" />
<text  x="1157.79" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId,std::pair&lt;PageId (6 samples, 0.44%)</title><rect x="1074.1" y="325" width="5.1" height="15.0" fill="rgb(225,26,53)" rx="2" ry="2" />
<text  x="1077.06" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="734.8" y="213" width="2.6" height="15.0" fill="rgb(216,14,34)" rx="2" ry="2" />
<text  x="737.83" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="977.9" y="213" width="1.7" height="15.0" fill="rgb(229,168,1)" rx="2" ry="2" />
<text  x="980.87" y="223.5" ></text>
</g>
<g >
<title>grow_heap(diff=4096, (1 samples, 0.07%)</title><rect x="16.0" y="149" width="0.9" height="15.0" fill="rgb(215,81,1)" rx="2" ry="2" />
<text  x="19.01" y="159.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::pageRankWorkFunc(index=0, (12 samples, 0.87%)</title><rect x="17.7" y="261" width="10.3" height="15.0" fill="rgb(243,222,14)" rx="2" ry="2" />
<text  x="20.73" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="760.6" y="325" width="0.9" height="15.0" fill="rgb(231,188,0)" rx="2" ry="2" />
<text  x="763.60" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.07%)</title><rect x="761.5" y="309" width="0.8" height="15.0" fill="rgb(233,49,31)" rx="2" ry="2" />
<text  x="764.46" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (7 samples, 0.51%)</title><rect x="1002.8" y="229" width="6.0" height="15.0" fill="rgb(210,50,23)" rx="2" ry="2" />
<text  x="1005.78" y="239.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__seed=3339675911, (1 samples, 0.07%)</title><rect x="799.2" y="261" width="0.9" height="15.0" fill="rgb(235,66,6)" rx="2" ry="2" />
<text  x="802.24" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId, (3 samples, 0.22%)</title><rect x="740.0" y="213" width="2.6" height="15.0" fill="rgb(223,111,29)" rx="2" ry="2" />
<text  x="742.99" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="1073.2" y="261" width="0.9" height="15.0" fill="rgb(231,164,14)" rx="2" ry="2" />
<text  x="1076.20" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="1179.7" y="309" width="0.9" height="15.0" fill="rgb(254,17,12)" rx="2" ry="2" />
<text  x="1182.69" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x560168ee57f0, (1 samples, 0.07%)</title><rect x="1087.8" y="181" width="0.9" height="15.0" fill="rgb(212,33,37)" rx="2" ry="2" />
<text  x="1090.80" y="191.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="791.5" y="277" width="0.9" height="15.0" fill="rgb(226,64,11)" rx="2" ry="2" />
<text  x="794.51" y="287.5" ></text>
</g>
<g >
<title>PageId::operator== (2 samples, 0.15%)</title><rect x="1158.2" y="229" width="1.7" height="15.0" fill="rgb(205,6,42)" rx="2" ry="2" />
<text  x="1161.22" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId,std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="1177.1" y="325" width="0.9" height="15.0" fill="rgb(228,144,9)" rx="2" ry="2" />
<text  x="1180.12" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId, (1 samples, 0.07%)</title><rect x="1180.6" y="293" width="0.8" height="15.0" fill="rgb(219,117,51)" rx="2" ry="2" />
<text  x="1183.55" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7f4b023fbc30, (1 samples, 0.07%)</title><rect x="735.7" y="165" width="0.9" height="15.0" fill="rgb(236,90,6)" rx="2" ry="2" />
<text  x="738.69" y="175.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="760.6" y="245" width="0.9" height="15.0" fill="rgb(250,223,52)" rx="2" ry="2" />
<text  x="763.60" y="255.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.07%)</title><rect x="1073.2" y="149" width="0.9" height="15.0" fill="rgb(207,148,27)" rx="2" ry="2" />
<text  x="1076.20" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1004.5" y="117" width="0.9" height="15.0" fill="rgb(212,187,52)" rx="2" ry="2" />
<text  x="1007.50" y="127.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (53 samples, 3.86%)</title><rect x="553.6" y="149" width="45.5" height="15.0" fill="rgb(240,79,2)" rx="2" ry="2" />
<text  x="556.62" y="159.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="14.3" y="229" width="0.9" height="15.0" fill="rgb(237,218,36)" rx="2" ry="2" />
<text  x="17.29" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=56) (1 samples, 0.07%)</title><rect x="1082.6" y="245" width="0.9" height="15.0" fill="rgb(221,43,12)" rx="2" ry="2" />
<text  x="1085.65" y="255.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::pageRankWorkFunc (758 samples, 55.17%)</title><rect x="44.4" y="261" width="650.9" height="15.0" fill="rgb(221,89,14)" rx="2" ry="2" />
<text  x="47.35" y="271.5" >MultiThreadedPageRankComputer::pageRankWorkFunc</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (3 samples, 0.22%)</title><rect x="1093.8" y="229" width="2.6" height="15.0" fill="rgb(239,191,37)" rx="2" ry="2" />
<text  x="1096.81" y="239.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=70, (1 samples, 0.07%)</title><rect x="1004.5" y="85" width="0.9" height="15.0" fill="rgb(208,8,18)" rx="2" ry="2" />
<text  x="1007.50" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.29%)</title><rect x="1087.8" y="245" width="3.4" height="15.0" fill="rgb(221,180,51)" rx="2" ry="2" />
<text  x="1090.80" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x56016921cff0) (1 samples, 0.07%)</title><rect x="703.1" y="37" width="0.8" height="15.0" fill="rgb(221,168,34)" rx="2" ry="2" />
<text  x="706.06" y="47.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="14.3" y="181" width="0.9" height="15.0" fill="rgb(254,21,39)" rx="2" ry="2" />
<text  x="17.29" y="191.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (1 samples, 0.07%)</title><rect x="697.0" y="277" width="0.9" height="15.0" fill="rgb(237,77,50)" rx="2" ry="2" />
<text  x="700.05" y="287.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.07%)</title><rect x="696.2" y="245" width="0.8" height="15.0" fill="rgb(210,43,37)" rx="2" ry="2" />
<text  x="699.19" y="255.5" ></text>
</g>
<g >
<title>PageIdAndRank::PageIdAndRank (1 samples, 0.07%)</title><rect x="1182.3" y="277" width="0.8" height="15.0" fill="rgb(205,220,14)" rx="2" ry="2" />
<text  x="1185.27" y="287.5" ></text>
</g>
<g >
<title>_IO_no_init(fp=fp@entry=0x7ffd3a8f2430, (1 samples, 0.07%)</title><rect x="751.1" y="261" width="0.9" height="15.0" fill="rgb(236,56,42)" rx="2" ry="2" />
<text  x="754.15" y="271.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (1 samples, 0.07%)</title><rect x="762.3" y="293" width="0.9" height="15.0" fill="rgb(249,73,3)" rx="2" ry="2" />
<text  x="765.31" y="303.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.07%)</title><rect x="696.2" y="213" width="0.8" height="15.0" fill="rgb(231,185,22)" rx="2" ry="2" />
<text  x="699.19" y="223.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="1137.6" y="117" width="0.9" height="15.0" fill="rgb(216,97,35)" rx="2" ry="2" />
<text  x="1140.61" y="127.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="733.1" y="117" width="1.7" height="15.0" fill="rgb(230,14,37)" rx="2" ry="2" />
<text  x="736.11" y="127.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*, (3 samples, 0.22%)</title><rect x="1184.0" y="229" width="2.6" height="15.0" fill="rgb(217,200,46)" rx="2" ry="2" />
<text  x="1186.99" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (3 samples, 0.22%)</title><rect x="1006.2" y="117" width="2.6" height="15.0" fill="rgb(224,35,32)" rx="2" ry="2" />
<text  x="1009.22" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="15.2" y="277" width="2.5" height="15.0" fill="rgb(230,65,34)" rx="2" ry="2" />
<text  x="18.15" y="287.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffd3a8f25a0 (1 samples, 0.07%)</title><rect x="695.3" y="277" width="0.9" height="15.0" fill="rgb(247,191,9)" rx="2" ry="2" />
<text  x="698.33" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (3 samples, 0.22%)</title><rect x="15.2" y="229" width="2.5" height="15.0" fill="rgb(235,209,2)" rx="2" ry="2" />
<text  x="18.15" y="239.5" ></text>
</g>
<g >
<title>std::thread::join()() (1 samples, 0.07%)</title><rect x="977.0" y="229" width="0.9" height="15.0" fill="rgb(234,181,46)" rx="2" ry="2" />
<text  x="980.02" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.07%)</title><rect x="764.9" y="181" width="0.8" height="15.0" fill="rgb(208,127,37)" rx="2" ry="2" />
<text  x="767.89" y="191.5" ></text>
</g>
<g >
<title>operatornew(unsigned (2 samples, 0.15%)</title><rect x="1102.4" y="245" width="1.7" height="15.0" fill="rgb(249,87,16)" rx="2" ry="2" />
<text  x="1105.40" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="764.9" y="229" width="0.8" height="15.0" fill="rgb(233,156,16)" rx="2" ry="2" />
<text  x="767.89" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x5601865a5470, (1 samples, 0.07%)</title><rect x="646.4" y="181" width="0.8" height="15.0" fill="rgb(247,130,28)" rx="2" ry="2" />
<text  x="649.38" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (3 samples, 0.22%)</title><rect x="754.6" y="277" width="2.6" height="15.0" fill="rgb(246,17,40)" rx="2" ry="2" />
<text  x="757.59" y="287.5" ></text>
</g>
<g >
<title>SimpleNetworkGenerator::generateNetworkOfSize (21 samples, 1.53%)</title><rect x="743.4" y="357" width="18.1" height="15.0" fill="rgb(243,145,1)" rx="2" ry="2" />
<text  x="746.42" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (4 samples, 0.29%)</title><rect x="1156.5" y="277" width="3.4" height="15.0" fill="rgb(215,195,16)" rx="2" ry="2" />
<text  x="1159.51" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (43 samples, 3.13%)</title><rect x="277.9" y="181" width="37.0" height="15.0" fill="rgb(221,5,36)" rx="2" ry="2" />
<text  x="280.95" y="191.5" >std..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (2 samples, 0.15%)</title><rect x="1000.2" y="245" width="1.7" height="15.0" fill="rgb(222,209,41)" rx="2" ry="2" />
<text  x="1003.20" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1183.1" y="229" width="0.9" height="15.0" fill="rgb(221,137,28)" rx="2" ry="2" />
<text  x="1186.13" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.15%)</title><rect x="1102.4" y="261" width="1.7" height="15.0" fill="rgb(213,128,35)" rx="2" ry="2" />
<text  x="1105.40" y="271.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=69, (2 samples, 0.15%)</title><rect x="1109.3" y="213" width="1.7" height="15.0" fill="rgb(231,92,46)" rx="2" ry="2" />
<text  x="1112.27" y="223.5" ></text>
</g>
<g >
<title>Page::~Page (1 samples, 0.07%)</title><rect x="697.0" y="341" width="0.9" height="15.0" fill="rgb(229,228,31)" rx="2" ry="2" />
<text  x="700.05" y="351.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, (1 samples, 0.07%)</title><rect x="1100.7" y="309" width="0.8" height="15.0" fill="rgb(206,42,43)" rx="2" ry="2" />
<text  x="1103.68" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="782.9" y="293" width="0.9" height="15.0" fill="rgb(232,183,52)" rx="2" ry="2" />
<text  x="785.93" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (1 samples, 0.07%)</title><rect x="703.1" y="181" width="0.8" height="15.0" fill="rgb(240,194,8)" rx="2" ry="2" />
<text  x="706.06" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (7 samples, 0.51%)</title><rect x="727.1" y="261" width="6.0" height="15.0" fill="rgb(212,130,4)" rx="2" ry="2" />
<text  x="730.10" y="271.5" ></text>
</g>
<g >
<title>operatornew(unsigned (2 samples, 0.15%)</title><rect x="979.6" y="245" width="1.7" height="15.0" fill="rgb(243,197,2)" rx="2" ry="2" />
<text  x="982.59" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.29%)</title><rect x="1009.7" y="181" width="3.4" height="15.0" fill="rgb(220,6,54)" rx="2" ry="2" />
<text  x="1012.65" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.07%)</title><rect x="1179.7" y="293" width="0.9" height="15.0" fill="rgb(233,196,38)" rx="2" ry="2" />
<text  x="1182.69" y="303.5" ></text>
</g>
<g >
<title>pageRankComputationWithNumNodes(num=1000, (11 samples, 0.80%)</title><rect x="695.3" y="373" width="9.5" height="15.0" fill="rgb(233,57,3)" rx="2" ry="2" />
<text  x="698.33" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x56016b7d8890, (1 samples, 0.07%)</title><rect x="703.1" y="53" width="0.8" height="15.0" fill="rgb(210,121,38)" rx="2" ry="2" />
<text  x="706.06" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.07%)</title><rect x="783.8" y="261" width="0.8" height="15.0" fill="rgb(250,43,9)" rx="2" ry="2" />
<text  x="786.78" y="271.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, (3 samples, 0.22%)</title><rect x="15.2" y="293" width="2.5" height="15.0" fill="rgb(234,130,6)" rx="2" ry="2" />
<text  x="18.15" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="696.2" y="277" width="0.8" height="15.0" fill="rgb(228,224,23)" rx="2" ry="2" />
<text  x="699.19" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (5 samples, 0.36%)</title><rect x="1074.9" y="277" width="4.3" height="15.0" fill="rgb(222,144,49)" rx="2" ry="2" />
<text  x="1077.92" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="694.5" y="197" width="0.8" height="15.0" fill="rgb(248,108,15)" rx="2" ry="2" />
<text  x="697.47" y="207.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::pageRankWorkFunc(index=5, (3 samples, 0.22%)</title><rect x="38.3" y="261" width="2.6" height="15.0" fill="rgb(224,99,32)" rx="2" ry="2" />
<text  x="41.34" y="271.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (25 samples, 1.82%)</title><rect x="704.8" y="277" width="21.4" height="15.0" fill="rgb(214,45,18)" rx="2" ry="2" />
<text  x="707.77" y="287.5" >_..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=68, (7 samples, 0.51%)</title><rect x="776.9" y="213" width="6.0" height="15.0" fill="rgb(222,62,49)" rx="2" ry="2" />
<text  x="779.91" y="223.5" ></text>
</g>
<g >
<title>malloc_consolidate (4 samples, 0.29%)</title><rect x="981.3" y="213" width="3.4" height="15.0" fill="rgb(227,82,0)" rx="2" ry="2" />
<text  x="984.31" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1180.6" y="197" width="0.8" height="15.0" fill="rgb(254,168,26)" rx="2" ry="2" />
<text  x="1183.55" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="703.1" y="261" width="0.8" height="15.0" fill="rgb(240,215,36)" rx="2" ry="2" />
<text  x="706.06" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (5 samples, 0.36%)</title><rect x="1079.2" y="325" width="4.3" height="15.0" fill="rgb(251,133,42)" rx="2" ry="2" />
<text  x="1082.21" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x560168cc2770, (1 samples, 0.07%)</title><rect x="697.0" y="165" width="0.9" height="15.0" fill="rgb(244,52,46)" rx="2" ry="2" />
<text  x="700.05" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="762.3" y="213" width="0.9" height="15.0" fill="rgb(235,97,22)" rx="2" ry="2" />
<text  x="765.31" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1099.0" y="245" width="0.8" height="15.0" fill="rgb(205,188,50)" rx="2" ry="2" />
<text  x="1101.97" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1093.0" y="229" width="0.8" height="15.0" fill="rgb(232,63,33)" rx="2" ry="2" />
<text  x="1095.95" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (3 samples, 0.22%)</title><rect x="757.2" y="293" width="2.5" height="15.0" fill="rgb(229,10,39)" rx="2" ry="2" />
<text  x="760.16" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (3 samples, 0.22%)</title><rect x="1069.8" y="293" width="2.5" height="15.0" fill="rgb(232,211,26)" rx="2" ry="2" />
<text  x="1072.77" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (1 samples, 0.07%)</title><rect x="762.3" y="277" width="0.9" height="15.0" fill="rgb(253,160,12)" rx="2" ry="2" />
<text  x="765.31" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.15%)</title><rect x="787.2" y="181" width="1.7" height="15.0" fill="rgb(247,229,36)" rx="2" ry="2" />
<text  x="790.22" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x560166252390, (1 samples, 0.07%)</title><rect x="1184.0" y="85" width="0.8" height="15.0" fill="rgb(219,220,37)" rx="2" ry="2" />
<text  x="1186.99" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="1119.6" y="293" width="2.6" height="15.0" fill="rgb(221,204,48)" rx="2" ry="2" />
<text  x="1122.58" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageIdAndRank, (2 samples, 0.15%)</title><rect x="1188.3" y="325" width="1.7" height="15.0" fill="rgb(225,38,45)" rx="2" ry="2" />
<text  x="1191.28" y="335.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (1 samples, 0.07%)</title><rect x="797.5" y="197" width="0.9" height="15.0" fill="rgb(216,98,50)" rx="2" ry="2" />
<text  x="800.53" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="762.3" y="197" width="0.9" height="15.0" fill="rgb(214,216,53)" rx="2" ry="2" />
<text  x="765.31" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1100.7" y="293" width="0.8" height="15.0" fill="rgb(254,94,4)" rx="2" ry="2" />
<text  x="1103.68" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageIdAndRank&gt; (1 samples, 0.07%)</title><rect x="1181.4" y="277" width="0.9" height="15.0" fill="rgb(213,223,23)" rx="2" ry="2" />
<text  x="1184.41" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;PageId,PageId&gt; (1 samples, 0.07%)</title><rect x="737.4" y="277" width="0.9" height="15.0" fill="rgb(205,27,45)" rx="2" ry="2" />
<text  x="740.41" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x560166997f58, (1 samples, 0.07%)</title><rect x="997.6" y="133" width="0.9" height="15.0" fill="rgb(213,154,48)" rx="2" ry="2" />
<text  x="1000.63" y="143.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=&lt;optimized (1 samples, 0.07%)</title><rect x="744.3" y="53" width="0.8" height="15.0" fill="rgb(213,174,0)" rx="2" ry="2" />
<text  x="747.28" y="63.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.07%)</title><rect x="726.2" y="197" width="0.9" height="15.0" fill="rgb(248,64,7)" rx="2" ry="2" />
<text  x="729.24" y="207.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.51%)</title><rect x="776.9" y="197" width="6.0" height="15.0" fill="rgb(235,136,30)" rx="2" ry="2" />
<text  x="779.91" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="703.1" y="277" width="0.8" height="15.0" fill="rgb(250,57,12)" rx="2" ry="2" />
<text  x="706.06" y="287.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void (789 samples, 57.42%)</title><rect x="17.7" y="325" width="677.6" height="15.0" fill="rgb(245,85,8)" rx="2" ry="2" />
<text  x="20.73" y="335.5" >std::thread::_Invoker&lt;std::tuple&lt;void</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.29%)</title><rect x="697.9" y="245" width="3.4" height="15.0" fill="rgb(226,11,53)" rx="2" ry="2" />
<text  x="700.90" y="255.5" ></text>
</g>
<g >
<title>Page::getId (1 samples, 0.07%)</title><rect x="696.2" y="341" width="0.8" height="15.0" fill="rgb(222,149,47)" rx="2" ry="2" />
<text  x="699.19" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;PageId, (3 samples, 0.22%)</title><rect x="734.8" y="309" width="2.6" height="15.0" fill="rgb(230,24,7)" rx="2" ry="2" />
<text  x="737.83" y="319.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b0c000020, (1 samples, 0.07%)</title><rect x="1183.1" y="149" width="0.9" height="15.0" fill="rgb(242,228,2)" rx="2" ry="2" />
<text  x="1186.13" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x56017384ec48, (1 samples, 0.07%)</title><rect x="998.5" y="133" width="0.8" height="15.0" fill="rgb(225,110,1)" rx="2" ry="2" />
<text  x="1001.49" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (54 samples, 3.93%)</title><rect x="599.1" y="197" width="46.4" height="15.0" fill="rgb(230,210,25)" rx="2" ry="2" />
<text  x="602.14" y="207.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (5 samples, 0.36%)</title><rect x="1062.9" y="277" width="4.3" height="15.0" fill="rgb(221,94,52)" rx="2" ry="2" />
<text  x="1065.90" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (52 samples, 3.78%)</title><rect x="1001.9" y="293" width="44.7" height="15.0" fill="rgb(232,166,24)" rx="2" ry="2" />
<text  x="1004.92" y="303.5" >std:..</text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="1097.2" y="309" width="0.9" height="15.0" fill="rgb(241,223,38)" rx="2" ry="2" />
<text  x="1100.25" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="760.6" y="309" width="0.9" height="15.0" fill="rgb(243,173,16)" rx="2" ry="2" />
<text  x="763.60" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="763.2" y="309" width="1.7" height="15.0" fill="rgb(222,200,1)" rx="2" ry="2" />
<text  x="766.17" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x560174ba22d0, (1 samples, 0.07%)</title><rect x="1184.8" y="85" width="0.9" height="15.0" fill="rgb(216,190,49)" rx="2" ry="2" />
<text  x="1187.85" y="95.5" ></text>
</g>
<g >
<title>PageId::~PageId (3 samples, 0.22%)</title><rect x="734.8" y="245" width="2.6" height="15.0" fill="rgb(248,118,26)" rx="2" ry="2" />
<text  x="737.83" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (38 samples, 2.77%)</title><rect x="645.5" y="197" width="32.7" height="15.0" fill="rgb(219,12,26)" rx="2" ry="2" />
<text  x="648.52" y="207.5" >st..</text>
</g>
<g >
<title>_IO_vfprintf_internal(s=s@entry=0x7ffd3a8f2190, (1 samples, 0.07%)</title><rect x="1098.1" y="277" width="0.9" height="15.0" fill="rgb(224,19,45)" rx="2" ry="2" />
<text  x="1101.11" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (6 samples, 0.44%)</title><rect x="1147.9" y="181" width="5.2" height="15.0" fill="rgb(228,156,49)" rx="2" ry="2" />
<text  x="1150.92" y="191.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.07%)</title><rect x="1072.3" y="293" width="0.9" height="15.0" fill="rgb(224,42,8)" rx="2" ry="2" />
<text  x="1075.34" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.51%)</title><rect x="1126.4" y="229" width="6.1" height="15.0" fill="rgb(238,98,23)" rx="2" ry="2" />
<text  x="1129.45" y="239.5" ></text>
</g>
<g >
<title>__GI___sbrk(increment=-75403264) (1 samples, 0.07%)</title><rect x="1189.1" y="213" width="0.9" height="15.0" fill="rgb(207,153,37)" rx="2" ry="2" />
<text  x="1192.14" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.51%)</title><rect x="1126.4" y="293" width="6.1" height="15.0" fill="rgb(242,190,7)" rx="2" ry="2" />
<text  x="1129.45" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;PageId, (9 samples, 0.66%)</title><rect x="734.8" y="341" width="7.8" height="15.0" fill="rgb(224,145,25)" rx="2" ry="2" />
<text  x="737.83" y="351.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.07%)</title><rect x="745.1" y="69" width="0.9" height="15.0" fill="rgb(225,212,42)" rx="2" ry="2" />
<text  x="748.14" y="79.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::pageRankWorkFunc(index=3, (1 samples, 0.07%)</title><rect x="34.0" y="261" width="0.9" height="15.0" fill="rgb(247,47,26)" rx="2" ry="2" />
<text  x="37.05" y="271.5" ></text>
</g>
<g >
<title>PageId::PageId (20 samples, 1.46%)</title><rect x="765.7" y="341" width="17.2" height="15.0" fill="rgb(227,210,18)" rx="2" ry="2" />
<text  x="768.75" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="743.4" y="101" width="1.7" height="15.0" fill="rgb(230,63,14)" rx="2" ry="2" />
<text  x="746.42" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (7 samples, 0.51%)</title><rect x="1126.4" y="213" width="6.1" height="15.0" fill="rgb(223,59,7)" rx="2" ry="2" />
<text  x="1129.45" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (16 samples, 1.16%)</title><rect x="1161.7" y="293" width="13.7" height="15.0" fill="rgb(227,93,12)" rx="2" ry="2" />
<text  x="1164.66" y="303.5" ></text>
</g>
<g >
<title>PageId::PageId (2 samples, 0.15%)</title><rect x="738.3" y="261" width="1.7" height="15.0" fill="rgb(214,220,5)" rx="2" ry="2" />
<text  x="741.27" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (1 samples, 0.07%)</title><rect x="702.2" y="325" width="0.9" height="15.0" fill="rgb(237,93,11)" rx="2" ry="2" />
<text  x="705.20" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="977.9" y="261" width="1.7" height="15.0" fill="rgb(211,9,36)" rx="2" ry="2" />
<text  x="980.87" y="271.5" ></text>
</g>
<g >
<title>memcpy@plt() (1 samples, 0.07%)</title><rect x="1118.7" y="197" width="0.9" height="15.0" fill="rgb(243,191,29)" rx="2" ry="2" />
<text  x="1121.72" y="207.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.07%)</title><rect x="1019.1" y="117" width="0.9" height="15.0" fill="rgb(205,120,24)" rx="2" ry="2" />
<text  x="1022.10" y="127.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x560168f0a770) (1 samples, 0.07%)</title><rect x="1000.2" y="229" width="0.9" height="15.0" fill="rgb(223,196,39)" rx="2" ry="2" />
<text  x="1003.20" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;MultiThreadedPageRankComputer::ThreadRAII*, (2 samples, 0.15%)</title><rect x="976.2" y="309" width="1.7" height="15.0" fill="rgb(209,27,44)" rx="2" ry="2" />
<text  x="979.16" y="319.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,double, (26 samples, 1.89%)</title><rect x="1155.6" y="341" width="22.4" height="15.0" fill="rgb(223,145,7)" rx="2" ry="2" />
<text  x="1158.65" y="351.5" >s..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="798.4" y="293" width="0.8" height="15.0" fill="rgb(210,28,6)" rx="2" ry="2" />
<text  x="801.38" y="303.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy(__n=65, (1 samples, 0.07%)</title><rect x="765.7" y="213" width="0.9" height="15.0" fill="rgb(249,228,18)" rx="2" ry="2" />
<text  x="768.75" y="223.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,unsigned (1 samples, 0.07%)</title><rect x="703.9" y="341" width="0.9" height="15.0" fill="rgb(207,61,29)" rx="2" ry="2" />
<text  x="706.92" y="351.5" ></text>
</g>
<g >
<title>Page::addLink (4 samples, 0.29%)</title><rect x="757.2" y="341" width="3.4" height="15.0" fill="rgb(217,150,35)" rx="2" ry="2" />
<text  x="760.16" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="757.2" y="229" width="2.5" height="15.0" fill="rgb(213,79,19)" rx="2" ry="2" />
<text  x="760.16" y="239.5" ></text>
</g>
<g >
<title>PageId::~PageId (4 samples, 0.29%)</title><rect x="996.8" y="213" width="3.4" height="15.0" fill="rgb(242,1,31)" rx="2" ry="2" />
<text  x="999.77" y="223.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (1 samples, 0.07%)</title><rect x="703.9" y="245" width="0.9" height="15.0" fill="rgb(208,75,44)" rx="2" ry="2" />
<text  x="706.92" y="255.5" ></text>
</g>
<g >
<title>std::(__val=1792) (1 samples, 0.07%)</title><rect x="747.7" y="309" width="0.9" height="15.0" fill="rgb(224,181,8)" rx="2" ry="2" />
<text  x="750.71" y="319.5" ></text>
</g>
<g >
<title>std::_Construct&lt;PageId, (2 samples, 0.15%)</title><rect x="733.1" y="277" width="1.7" height="15.0" fill="rgb(218,109,17)" rx="2" ry="2" />
<text  x="736.11" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.07%)</title><rect x="702.2" y="309" width="0.9" height="15.0" fill="rgb(236,70,25)" rx="2" ry="2" />
<text  x="705.20" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1099.8" y="261" width="0.9" height="15.0" fill="rgb(218,96,16)" rx="2" ry="2" />
<text  x="1102.83" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="792.4" y="117" width="2.5" height="15.0" fill="rgb(232,167,23)" rx="2" ry="2" />
<text  x="795.37" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.29%)</title><rect x="1087.8" y="229" width="3.4" height="15.0" fill="rgb(235,209,25)" rx="2" ry="2" />
<text  x="1090.80" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=70) (1 samples, 0.07%)</title><rect x="1101.5" y="229" width="0.9" height="15.0" fill="rgb(249,141,11)" rx="2" ry="2" />
<text  x="1104.54" y="239.5" ></text>
</g>
<g >
<title>std::(__val=73) (1 samples, 0.07%)</title><rect x="750.3" y="309" width="0.8" height="15.0" fill="rgb(207,76,39)" rx="2" ry="2" />
<text  x="753.29" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (25 samples, 1.82%)</title><rect x="1155.6" y="325" width="21.5" height="15.0" fill="rgb(239,36,42)" rx="2" ry="2" />
<text  x="1158.65" y="335.5" >s..</text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (3 samples, 0.22%)</title><rect x="1060.3" y="245" width="2.6" height="15.0" fill="rgb(210,96,15)" rx="2" ry="2" />
<text  x="1063.32" y="255.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId, (3 samples, 0.22%)</title><rect x="734.8" y="261" width="2.6" height="15.0" fill="rgb(208,174,1)" rx="2" ry="2" />
<text  x="737.83" y="271.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::ThreadRAII::~ThreadRAII(this=0x560165555ed0, (1 samples, 0.07%)</title><rect x="976.2" y="245" width="0.8" height="15.0" fill="rgb(205,158,26)" rx="2" ry="2" />
<text  x="979.16" y="255.5" ></text>
</g>
<g >
<title>PageId::PageId (18 samples, 1.31%)</title><rect x="1104.1" y="341" width="15.5" height="15.0" fill="rgb(250,211,13)" rx="2" ry="2" />
<text  x="1107.12" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (6 samples, 0.44%)</title><rect x="996.8" y="277" width="5.1" height="15.0" fill="rgb(227,25,36)" rx="2" ry="2" />
<text  x="999.77" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x7ffd3a8f28a0, (1 samples, 0.07%)</title><rect x="782.9" y="261" width="0.9" height="15.0" fill="rgb(243,32,43)" rx="2" ry="2" />
<text  x="785.93" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.07%)</title><rect x="703.1" y="309" width="0.8" height="15.0" fill="rgb(225,200,25)" rx="2" ry="2" />
<text  x="706.06" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="1180.6" y="165" width="0.8" height="15.0" fill="rgb(222,47,28)" rx="2" ry="2" />
<text  x="1183.55" y="175.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt; (1 samples, 0.07%)</title><rect x="764.9" y="293" width="0.8" height="15.0" fill="rgb(238,151,29)" rx="2" ry="2" />
<text  x="767.89" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.07%)</title><rect x="1099.0" y="309" width="0.8" height="15.0" fill="rgb(249,43,51)" rx="2" ry="2" />
<text  x="1101.97" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="1147.9" y="69" width="0.9" height="15.0" fill="rgb(213,118,42)" rx="2" ry="2" />
<text  x="1150.92" y="79.5" ></text>
</g>
<g >
<title>PageId::PageId (3 samples, 0.22%)</title><rect x="743.4" y="181" width="2.6" height="15.0" fill="rgb(231,173,39)" rx="2" ry="2" />
<text  x="746.42" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.07%)</title><rect x="761.5" y="293" width="0.8" height="15.0" fill="rgb(229,172,27)" rx="2" ry="2" />
<text  x="764.46" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;Page*&gt; (4 samples, 0.29%)</title><rect x="1183.1" y="309" width="3.5" height="15.0" fill="rgb(219,137,25)" rx="2" ry="2" />
<text  x="1186.13" y="319.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="1087.8" y="165" width="0.9" height="15.0" fill="rgb(248,10,50)" rx="2" ry="2" />
<text  x="1090.80" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (4 samples, 0.29%)</title><rect x="796.7" y="325" width="3.4" height="15.0" fill="rgb(211,204,6)" rx="2" ry="2" />
<text  x="799.67" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="703.1" y="101" width="0.8" height="15.0" fill="rgb(248,151,32)" rx="2" ry="2" />
<text  x="706.06" y="111.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.07%)</title><rect x="794.9" y="165" width="0.9" height="15.0" fill="rgb(228,191,9)" rx="2" ry="2" />
<text  x="797.95" y="175.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x560165877f60) (1 samples, 0.07%)</title><rect x="1013.1" y="117" width="0.8" height="15.0" fill="rgb(214,215,25)" rx="2" ry="2" />
<text  x="1016.09" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1100.7" y="277" width="0.8" height="15.0" fill="rgb(214,22,44)" rx="2" ry="2" />
<text  x="1103.68" y="287.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId, (27 samples, 1.97%)</title><rect x="1132.5" y="341" width="23.1" height="15.0" fill="rgb(236,114,33)" rx="2" ry="2" />
<text  x="1135.46" y="351.5" >s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.07%)</title><rect x="760.6" y="277" width="0.9" height="15.0" fill="rgb(242,9,35)" rx="2" ry="2" />
<text  x="763.60" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (6 samples, 0.44%)</title><rect x="1074.1" y="293" width="5.1" height="15.0" fill="rgb(209,130,38)" rx="2" ry="2" />
<text  x="1077.06" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.15%)</title><rect x="763.2" y="261" width="1.7" height="15.0" fill="rgb(250,54,25)" rx="2" ry="2" />
<text  x="766.17" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x560178aa1520) (1 samples, 0.07%)</title><rect x="1021.7" y="117" width="0.8" height="15.0" fill="rgb(254,143,24)" rx="2" ry="2" />
<text  x="1024.67" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (23 samples, 1.67%)</title><rect x="1155.6" y="309" width="19.8" height="15.0" fill="rgb(245,126,28)" rx="2" ry="2" />
<text  x="1158.65" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (199 samples, 14.48%)</title><rect x="507.2" y="213" width="171.0" height="15.0" fill="rgb(218,27,36)" rx="2" ry="2" />
<text  x="510.25" y="223.5" >std::_Hashtable&lt;PageId,</text>
</g>
<g >
<title>std::unordered_map&lt;PageId,double, (10 samples, 0.73%)</title><rect x="783.8" y="341" width="8.6" height="15.0" fill="rgb(233,0,22)" rx="2" ry="2" />
<text  x="786.78" y="351.5" ></text>
</g>
<g >
<title>__pthread_cond_wait (268 samples, 19.51%)</title><rect x="44.4" y="197" width="230.1" height="15.0" fill="rgb(239,49,39)" rx="2" ry="2" />
<text  x="47.35" y="207.5" >__pthread_cond_wait</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.07%)</title><rect x="1155.6" y="261" width="0.9" height="15.0" fill="rgb(212,7,22)" rx="2" ry="2" />
<text  x="1158.65" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="733.1" y="149" width="1.7" height="15.0" fill="rgb(246,198,12)" rx="2" ry="2" />
<text  x="736.11" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.07%)</title><rect x="1074.1" y="277" width="0.8" height="15.0" fill="rgb(252,210,52)" rx="2" ry="2" />
<text  x="1077.06" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x560178178018, (1 samples, 0.07%)</title><rect x="1020.8" y="133" width="0.9" height="15.0" fill="rgb(221,160,49)" rx="2" ry="2" />
<text  x="1023.82" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (3 samples, 0.22%)</title><rect x="1184.0" y="101" width="2.6" height="15.0" fill="rgb(233,181,20)" rx="2" ry="2" />
<text  x="1186.99" y="111.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=65) (3 samples, 0.22%)</title><rect x="15.2" y="197" width="2.5" height="15.0" fill="rgb(207,225,35)" rx="2" ry="2" />
<text  x="18.15" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (20 samples, 1.46%)</title><rect x="765.7" y="277" width="17.2" height="15.0" fill="rgb(229,78,12)" rx="2" ry="2" />
<text  x="768.75" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;PageId, (1 samples, 0.07%)</title><rect x="737.4" y="309" width="0.9" height="15.0" fill="rgb(225,100,16)" rx="2" ry="2" />
<text  x="740.41" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageIdAndRank, (2 samples, 0.15%)</title><rect x="1188.3" y="341" width="1.7" height="15.0" fill="rgb(226,121,47)" rx="2" ry="2" />
<text  x="1191.28" y="351.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.07%)</title><rect x="752.9" y="213" width="0.8" height="15.0" fill="rgb(209,103,25)" rx="2" ry="2" />
<text  x="755.87" y="223.5" ></text>
</g>
<g >
<title>operatornew(unsigned (2 samples, 0.15%)</title><rect x="757.2" y="197" width="1.7" height="15.0" fill="rgb(253,217,37)" rx="2" ry="2" />
<text  x="760.16" y="207.5" ></text>
</g>
<g >
<title>PageId::operator== (2 samples, 0.15%)</title><rect x="1065.5" y="229" width="1.7" height="15.0" fill="rgb(212,65,21)" rx="2" ry="2" />
<text  x="1068.47" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (16 samples, 1.16%)</title><rect x="1060.3" y="325" width="13.8" height="15.0" fill="rgb(254,71,52)" rx="2" ry="2" />
<text  x="1063.32" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="977.9" y="181" width="1.7" height="15.0" fill="rgb(251,134,3)" rx="2" ry="2" />
<text  x="980.87" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId, (2 samples, 0.15%)</title><rect x="1178.0" y="325" width="1.7" height="15.0" fill="rgb(213,134,24)" rx="2" ry="2" />
<text  x="1180.98" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (5 samples, 0.36%)</title><rect x="784.6" y="261" width="4.3" height="15.0" fill="rgb(237,154,45)" rx="2" ry="2" />
<text  x="787.64" y="271.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__n=&lt;optimized (2 samples, 0.15%)</title><rect x="787.2" y="197" width="1.7" height="15.0" fill="rgb(208,179,45)" rx="2" ry="2" />
<text  x="790.22" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffd3a8f2440, (89 samples, 6.48%)</title><rect x="410.2" y="181" width="76.4" height="15.0" fill="rgb(220,96,25)" rx="2" ry="2" />
<text  x="413.20" y="191.5" >std::__d..</text>
</g>
<g >
<title>std::vector&lt;PageId, (3 samples, 0.22%)</title><rect x="743.4" y="261" width="2.6" height="15.0" fill="rgb(226,208,46)" rx="2" ry="2" />
<text  x="746.42" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="765.7" y="197" width="0.9" height="15.0" fill="rgb(252,55,17)" rx="2" ry="2" />
<text  x="768.75" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="788.9" y="293" width="0.9" height="15.0" fill="rgb(225,77,20)" rx="2" ry="2" />
<text  x="791.94" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (3 samples, 0.22%)</title><rect x="1184.0" y="181" width="2.6" height="15.0" fill="rgb(242,9,7)" rx="2" ry="2" />
<text  x="1186.99" y="191.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="799.2" y="277" width="0.9" height="15.0" fill="rgb(236,9,0)" rx="2" ry="2" />
<text  x="802.24" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="702.2" y="277" width="0.9" height="15.0" fill="rgb(253,99,7)" rx="2" ry="2" />
<text  x="705.20" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x560178c61c10) (1 samples, 0.07%)</title><rect x="1022.5" y="117" width="0.9" height="15.0" fill="rgb(210,18,1)" rx="2" ry="2" />
<text  x="1025.53" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (4 samples, 0.29%)</title><rect x="274.5" y="165" width="3.4" height="15.0" fill="rgb(208,112,28)" rx="2" ry="2" />
<text  x="277.51" y="175.5" ></text>
</g>
<g >
<title>SimpleIdGenerator::generateId (1 samples, 0.07%)</title><rect x="1100.7" y="325" width="0.8" height="15.0" fill="rgb(241,225,7)" rx="2" ry="2" />
<text  x="1103.68" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.07%)</title><rect x="1139.3" y="309" width="0.9" height="15.0" fill="rgb(214,123,31)" rx="2" ry="2" />
<text  x="1142.33" y="319.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void (789 samples, 57.42%)</title><rect x="17.7" y="341" width="677.6" height="15.0" fill="rgb(241,58,19)" rx="2" ry="2" />
<text  x="20.73" y="351.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void</text>
</g>
<g >
<title>_IO_vfprintf_internal (1 samples, 0.07%)</title><rect x="746.9" y="261" width="0.8" height="15.0" fill="rgb(222,65,41)" rx="2" ry="2" />
<text  x="749.86" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (3 samples, 0.22%)</title><rect x="997.6" y="149" width="2.6" height="15.0" fill="rgb(243,40,24)" rx="2" ry="2" />
<text  x="1000.63" y="159.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7f4af0000020, (1 samples, 0.07%)</title><rect x="16.0" y="181" width="0.9" height="15.0" fill="rgb(211,58,6)" rx="2" ry="2" />
<text  x="19.01" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="752.9" y="229" width="0.8" height="15.0" fill="rgb(205,137,41)" rx="2" ry="2" />
<text  x="755.87" y="239.5" ></text>
</g>
<g >
<title>PageId::operator== (53 samples, 3.86%)</title><rect x="553.6" y="133" width="45.5" height="15.0" fill="rgb(247,101,4)" rx="2" ry="2" />
<text  x="556.62" y="143.5" >Page..</text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;PageId (2 samples, 0.15%)</title><rect x="733.1" y="325" width="1.7" height="15.0" fill="rgb(218,36,41)" rx="2" ry="2" />
<text  x="736.11" y="335.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="697.0" y="149" width="0.9" height="15.0" fill="rgb(228,31,47)" rx="2" ry="2" />
<text  x="700.05" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7ffd3a8f1fc0, (2 samples, 0.15%)</title><rect x="789.8" y="277" width="1.7" height="15.0" fill="rgb(214,228,19)" rx="2" ry="2" />
<text  x="792.80" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (8 samples, 0.58%)</title><rect x="1002.8" y="261" width="6.9" height="15.0" fill="rgb(253,77,19)" rx="2" ry="2" />
<text  x="1005.78" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (19 samples, 1.38%)</title><rect x="678.2" y="213" width="16.3" height="15.0" fill="rgb(242,96,41)" rx="2" ry="2" />
<text  x="681.15" y="223.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (1 samples, 0.07%)</title><rect x="1139.3" y="293" width="0.9" height="15.0" fill="rgb(243,138,20)" rx="2" ry="2" />
<text  x="1142.33" y="303.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;PageId, (1 samples, 0.07%)</title><rect x="1180.6" y="341" width="0.8" height="15.0" fill="rgb(251,190,4)" rx="2" ry="2" />
<text  x="1183.55" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (6 samples, 0.44%)</title><rect x="1147.9" y="165" width="5.2" height="15.0" fill="rgb(245,80,47)" rx="2" ry="2" />
<text  x="1150.92" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.29%)</title><rect x="996.8" y="165" width="3.4" height="15.0" fill="rgb(234,132,24)" rx="2" ry="2" />
<text  x="999.77" y="175.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,std::vector&lt;PageId, (5 samples, 0.36%)</title><rect x="792.4" y="341" width="4.3" height="15.0" fill="rgb(225,41,25)" rx="2" ry="2" />
<text  x="795.37" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.07%)</title><rect x="1096.4" y="165" width="0.8" height="15.0" fill="rgb(207,200,27)" rx="2" ry="2" />
<text  x="1099.39" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;Page, (2 samples, 0.15%)</title><rect x="1186.6" y="325" width="1.7" height="15.0" fill="rgb(250,211,34)" rx="2" ry="2" />
<text  x="1189.56" y="335.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::pageRankWorkFunc(index=2, (2 samples, 0.15%)</title><rect x="32.3" y="261" width="1.7" height="15.0" fill="rgb(244,180,50)" rx="2" ry="2" />
<text  x="35.33" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1181.4" y="229" width="0.9" height="15.0" fill="rgb(229,86,46)" rx="2" ry="2" />
<text  x="1184.41" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(this=0x56017de18480, (1 samples, 0.07%)</title><rect x="794.1" y="53" width="0.8" height="15.0" fill="rgb(217,206,1)" rx="2" ry="2" />
<text  x="797.09" y="63.5" ></text>
</g>
<g >
<title>std::_Construct&lt;PageId, (3 samples, 0.22%)</title><rect x="743.4" y="197" width="2.6" height="15.0" fill="rgb(235,72,19)" rx="2" ry="2" />
<text  x="746.42" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1101.5" y="277" width="0.9" height="15.0" fill="rgb(209,132,15)" rx="2" ry="2" />
<text  x="1104.54" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (4 samples, 0.29%)</title><rect x="792.4" y="261" width="3.4" height="15.0" fill="rgb(243,32,41)" rx="2" ry="2" />
<text  x="795.37" y="271.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffd3a8f25a0 (1 samples, 0.07%)</title><rect x="751.1" y="277" width="0.9" height="15.0" fill="rgb(215,181,21)" rx="2" ry="2" />
<text  x="754.15" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.29%)</title><rect x="697.9" y="197" width="3.4" height="15.0" fill="rgb(224,160,33)" rx="2" ry="2" />
<text  x="700.90" y="207.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="1184.8" y="69" width="0.9" height="15.0" fill="rgb(254,24,3)" rx="2" ry="2" />
<text  x="1187.85" y="79.5" ></text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (2 samples, 0.15%)</title><rect x="1188.3" y="277" width="1.7" height="15.0" fill="rgb(242,183,38)" rx="2" ry="2" />
<text  x="1191.28" y="287.5" ></text>
</g>
<g >
<title>__pthread_cond_wait (25 samples, 1.82%)</title><rect x="704.8" y="293" width="21.4" height="15.0" fill="rgb(251,85,31)" rx="2" ry="2" />
<text  x="707.77" y="303.5" >_..</text>
</g>
<g >
<title>_int_free(av=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="1089.5" y="165" width="0.9" height="15.0" fill="rgb(213,190,32)" rx="2" ry="2" />
<text  x="1092.52" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; (4 samples, 0.29%)</title><rect x="1132.5" y="261" width="3.4" height="15.0" fill="rgb(224,131,38)" rx="2" ry="2" />
<text  x="1135.46" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.07%)</title><rect x="1004.5" y="133" width="0.9" height="15.0" fill="rgb(243,83,5)" rx="2" ry="2" />
<text  x="1007.50" y="143.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.07%)</title><rect x="703.9" y="181" width="0.9" height="15.0" fill="rgb(206,123,12)" rx="2" ry="2" />
<text  x="706.92" y="191.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal(s=s@entry=0x7ffd3a8f2430, (1 samples, 0.07%)</title><rect x="748.6" y="261" width="0.8" height="15.0" fill="rgb(251,123,52)" rx="2" ry="2" />
<text  x="751.57" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.29%)</title><rect x="996.8" y="181" width="3.4" height="15.0" fill="rgb(213,77,1)" rx="2" ry="2" />
<text  x="999.77" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (53 samples, 3.86%)</title><rect x="1001.9" y="309" width="45.5" height="15.0" fill="rgb(224,168,10)" rx="2" ry="2" />
<text  x="1004.92" y="319.5" >std:..</text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank, (2 samples, 0.15%)</title><rect x="1188.3" y="357" width="1.7" height="15.0" fill="rgb(250,33,30)" rx="2" ry="2" />
<text  x="1191.28" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x560186266ca0) (1 samples, 0.07%)</title><rect x="999.3" y="117" width="0.9" height="15.0" fill="rgb(206,71,45)" rx="2" ry="2" />
<text  x="1002.34" y="127.5" ></text>
</g>
<g >
<title>PageIdAndRank::PageIdAndRank (3 samples, 0.22%)</title><rect x="1119.6" y="341" width="2.6" height="15.0" fill="rgb(214,194,1)" rx="2" ry="2" />
<text  x="1122.58" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (44 samples, 3.20%)</title><rect x="561.4" y="85" width="37.7" height="15.0" fill="rgb(233,118,20)" rx="2" ry="2" />
<text  x="564.35" y="95.5" >__m..</text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7f4b12e11c40 (1 samples, 0.07%)</title><rect x="761.5" y="181" width="0.8" height="15.0" fill="rgb(247,68,32)" rx="2" ry="2" />
<text  x="764.46" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.29%)</title><rect x="1009.7" y="197" width="3.4" height="15.0" fill="rgb(213,105,49)" rx="2" ry="2" />
<text  x="1012.65" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt; (1 samples, 0.07%)</title><rect x="764.9" y="261" width="0.8" height="15.0" fill="rgb(237,110,2)" rx="2" ry="2" />
<text  x="767.89" y="271.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal(s=s@entry=0x7ffd3a8f2430, (1 samples, 0.07%)</title><rect x="747.7" y="261" width="0.9" height="15.0" fill="rgb(220,219,37)" rx="2" ry="2" />
<text  x="750.71" y="271.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.07%)</title><rect x="791.5" y="245" width="0.9" height="15.0" fill="rgb(238,136,32)" rx="2" ry="2" />
<text  x="794.51" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (2 samples, 0.15%)</title><rect x="796.7" y="261" width="1.7" height="15.0" fill="rgb(208,147,15)" rx="2" ry="2" />
<text  x="799.67" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (20 samples, 1.46%)</title><rect x="765.7" y="293" width="17.2" height="15.0" fill="rgb(236,201,40)" rx="2" ry="2" />
<text  x="768.75" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Page&gt; (2 samples, 0.15%)</title><rect x="1186.6" y="293" width="1.7" height="15.0" fill="rgb(239,115,26)" rx="2" ry="2" />
<text  x="1189.56" y="303.5" ></text>
</g>
<g >
<title>pageRankComputationWithNumNodes(num=2000, (111 samples, 8.08%)</title><rect x="704.8" y="373" width="95.3" height="15.0" fill="rgb(253,101,48)" rx="2" ry="2" />
<text  x="707.77" y="383.5" >pageRankCom..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="696.2" y="261" width="0.8" height="15.0" fill="rgb(211,43,40)" rx="2" ry="2" />
<text  x="699.19" y="271.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator() (19 samples, 1.38%)</title><rect x="298.6" y="149" width="16.3" height="15.0" fill="rgb(236,16,26)" rx="2" ry="2" />
<text  x="301.56" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (18 samples, 1.31%)</title><rect x="981.3" y="277" width="15.5" height="15.0" fill="rgb(227,144,29)" rx="2" ry="2" />
<text  x="984.31" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="1099.8" y="181" width="0.9" height="15.0" fill="rgb(224,55,36)" rx="2" ry="2" />
<text  x="1102.83" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.07%)</title><rect x="1098.1" y="309" width="0.9" height="15.0" fill="rgb(217,165,49)" rx="2" ry="2" />
<text  x="1101.11" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (4 samples, 0.29%)</title><rect x="697.9" y="277" width="3.4" height="15.0" fill="rgb(223,72,43)" rx="2" ry="2" />
<text  x="700.90" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (8 samples, 0.58%)</title><rect x="726.2" y="277" width="6.9" height="15.0" fill="rgb(213,22,4)" rx="2" ry="2" />
<text  x="729.24" y="287.5" ></text>
</g>
<g >
<title>_IO_vsnprintf(string=0x7ffd3a8f25a0 (1 samples, 0.07%)</title><rect x="750.3" y="277" width="0.8" height="15.0" fill="rgb(234,69,3)" rx="2" ry="2" />
<text  x="753.29" y="287.5" ></text>
</g>
<g >
<title>SimpleIdGenerator::generateId (5 samples, 0.36%)</title><rect x="752.9" y="309" width="4.3" height="15.0" fill="rgb(235,52,1)" rx="2" ry="2" />
<text  x="755.87" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.22%)</title><rect x="792.4" y="85" width="2.5" height="15.0" fill="rgb(217,213,21)" rx="2" ry="2" />
<text  x="795.37" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=&lt;optimized (3 samples, 0.22%)</title><rect x="1083.5" y="245" width="2.6" height="15.0" fill="rgb(233,34,31)" rx="2" ry="2" />
<text  x="1086.51" y="255.5" ></text>
</g>
<g >
<title>operatordelete(void*)@plt (1 samples, 0.07%)</title><rect x="736.6" y="149" width="0.8" height="15.0" fill="rgb(215,4,4)" rx="2" ry="2" />
<text  x="739.55" y="159.5" ></text>
</g>
<g >
<title>pageRankComputationWithNumNodes(num=500000, (446 samples, 32.46%)</title><rect x="800.1" y="373" width="383.0" height="15.0" fill="rgb(228,134,5)" rx="2" ry="2" />
<text  x="803.10" y="383.5" >pageRankComputationWithNumNodes(num=500000,</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (20 samples, 1.46%)</title><rect x="765.7" y="309" width="17.2" height="15.0" fill="rgb(231,221,25)" rx="2" ry="2" />
<text  x="768.75" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.07%)</title><rect x="791.5" y="309" width="0.9" height="15.0" fill="rgb(224,214,0)" rx="2" ry="2" />
<text  x="794.51" y="319.5" ></text>
</g>
<g >
<title>SingleThreadedPageRankComputer::computeForNetwork (10 samples, 0.73%)</title><rect x="696.2" y="357" width="8.6" height="15.0" fill="rgb(236,159,17)" rx="2" ry="2" />
<text  x="699.19" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.15%)</title><rect x="763.2" y="293" width="1.7" height="15.0" fill="rgb(223,138,9)" rx="2" ry="2" />
<text  x="766.17" y="303.5" ></text>
</g>
</g>
</svg>
